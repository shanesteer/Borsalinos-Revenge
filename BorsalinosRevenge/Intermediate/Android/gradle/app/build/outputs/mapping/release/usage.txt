androidx.core.text.util.FindAddress
android.support.v4.media.session.MediaControllerCompat$TransportControlsApi23
androidx.media.MediaBrowserServiceCompat$ServiceHandler
androidx.core.view.ActionProvider$VisibilityListener
androidx.core.provider.FontsContractCompat$4$2
androidx.fragment.R$styleable
com.google.android.gms.common.ProGuardCanary
androidx.slidingpanelayout.R$style
androidx.cursoradapter.widget.CursorAdapter$MyDataSetObserver
androidx.collection.SimpleArrayMap:
    public void <init>(androidx.collection.SimpleArrayMap)
    public void putAll(androidx.collection.SimpleArrayMap)
    private static final boolean DEBUG
    private static final java.lang.String TAG
    private static final boolean CONCURRENT_MODIFICATION_EXCEPTIONS
    private static final int BASE_SIZE
    private static final int CACHE_SIZE
androidx.core.graphics.TypefaceCompat
androidx.media.R$drawable
androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi21$2
com.epicgames.ue4.JavaBuildSettings$PackageType
android.support.v4.media.MediaDescriptionCompat:
    public java.lang.String getMediaId()
    public java.lang.CharSequence getTitle()
    public java.lang.CharSequence getSubtitle()
    public java.lang.CharSequence getDescription()
    public android.graphics.Bitmap getIconBitmap()
    public android.net.Uri getIconUri()
    public android.os.Bundle getExtras()
    public android.net.Uri getMediaUri()
    public static final java.lang.String EXTRA_BT_FOLDER_TYPE
    public static final long BT_FOLDER_TYPE_MIXED
    public static final long BT_FOLDER_TYPE_TITLES
    public static final long BT_FOLDER_TYPE_ALBUMS
    public static final long BT_FOLDER_TYPE_ARTISTS
    public static final long BT_FOLDER_TYPE_GENRES
    public static final long BT_FOLDER_TYPE_PLAYLISTS
    public static final long BT_FOLDER_TYPE_YEARS
    public static final java.lang.String EXTRA_DOWNLOAD_STATUS
    public static final long STATUS_NOT_DOWNLOADED
    public static final long STATUS_DOWNLOADING
    public static final long STATUS_DOWNLOADED
    public static final java.lang.String DESCRIPTION_KEY_MEDIA_URI
    public static final java.lang.String DESCRIPTION_KEY_NULL_BUNDLE_FLAG
com.google.android.play.core.appupdate.v:
    private void <init>()
androidx.viewpager.R$integer
androidx.media.AudioAttributesImplBase:
    void <init>(int,int,int,int)
    public static androidx.media.AudioAttributesImpl fromBundle(android.os.Bundle)
    public java.lang.Object getAudioAttributes()
    public int getVolumeControlStream()
    public int getRawLegacyStreamType()
    public android.os.Bundle toBundle()
androidx.core.text.util.LinkifyCompat$LinkifyMask
androidx.media.MediaBrowserServiceCompatApi21$ResultWrapper
com.google.android.vending.expansion.downloader.impl.DownloadsDB$DownloadColumns:
    public void <init>()
    public static final java.lang.String INDEX
    public static final java.lang.String URI
    public static final java.lang.String FILENAME
    public static final java.lang.String ETAG
    public static final java.lang.String TOTALBYTES
    public static final java.lang.String CURRENTBYTES
    public static final java.lang.String LASTMOD
    public static final java.lang.String STATUS
    public static final java.lang.String CONTROL
    public static final java.lang.String NUM_FAILED
    public static final java.lang.String RETRY_AFTER
    public static final java.lang.String REDIRECT_COUNT
    public static final java.lang.String TABLE_NAME
    public static final java.lang.String _ID
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi21$3
androidx.core.accessibilityservice.AccessibilityServiceInfoCompat
androidx.interpolator.view.animation.LookupTableInterpolator
androidx.core.provider.FontsContractCompat$TypefaceResult
androidx.media.R$dimen
android.support.v4.media.session.PlaybackStateCompat$Builder
androidx.drawerlayout.R$string
android.support.v4.media.MediaMetadataCompatApi21$Builder
androidx.core.view.ScrollingView
androidx.core.widget.NestedScrollView$SavedState$1
androidx.media.MediaBrowserServiceCompat$2
androidx.legacy.coreui.R$drawable
androidx.lifecycle.MediatorLiveData$Source
android.support.v4.media.session.PlaybackStateCompat:
    public static int toKeyCode(long)
    public int getState()
    public long getPosition()
    public long getLastPositionUpdateTime()
    public long getCurrentPosition(java.lang.Long)
    public long getBufferedPosition()
    public float getPlaybackSpeed()
    public long getActions()
    public java.util.List getCustomActions()
    public int getErrorCode()
    public java.lang.CharSequence getErrorMessage()
    public long getActiveQueueItemId()
    public android.os.Bundle getExtras()
    public java.lang.Object getPlaybackState()
    public static final long ACTION_STOP
    public static final long ACTION_PAUSE
    public static final long ACTION_PLAY
    public static final long ACTION_REWIND
    public static final long ACTION_SKIP_TO_PREVIOUS
    public static final long ACTION_SKIP_TO_NEXT
    public static final long ACTION_FAST_FORWARD
    public static final long ACTION_SET_RATING
    public static final long ACTION_SEEK_TO
    public static final long ACTION_PLAY_PAUSE
    public static final long ACTION_PLAY_FROM_MEDIA_ID
    public static final long ACTION_PLAY_FROM_SEARCH
    public static final long ACTION_SKIP_TO_QUEUE_ITEM
    public static final long ACTION_PLAY_FROM_URI
    public static final long ACTION_PREPARE
    public static final long ACTION_PREPARE_FROM_MEDIA_ID
    public static final long ACTION_PREPARE_FROM_SEARCH
    public static final long ACTION_PREPARE_FROM_URI
    public static final long ACTION_SET_REPEAT_MODE
    public static final long ACTION_SET_SHUFFLE_MODE_ENABLED
    public static final long ACTION_SET_CAPTIONING_ENABLED
    public static final long ACTION_SET_SHUFFLE_MODE
    public static final int STATE_NONE
    public static final int STATE_STOPPED
    public static final int STATE_PAUSED
    public static final int STATE_PLAYING
    public static final int STATE_FAST_FORWARDING
    public static final int STATE_REWINDING
    public static final int STATE_BUFFERING
    public static final int STATE_ERROR
    public static final int STATE_CONNECTING
    public static final int STATE_SKIPPING_TO_PREVIOUS
    public static final int STATE_SKIPPING_TO_NEXT
    public static final int STATE_SKIPPING_TO_QUEUE_ITEM
    public static final long PLAYBACK_POSITION_UNKNOWN
    public static final int REPEAT_MODE_INVALID
    public static final int REPEAT_MODE_NONE
    public static final int REPEAT_MODE_ONE
    public static final int REPEAT_MODE_ALL
    public static final int REPEAT_MODE_GROUP
    public static final int SHUFFLE_MODE_INVALID
    public static final int SHUFFLE_MODE_NONE
    public static final int SHUFFLE_MODE_ALL
    public static final int SHUFFLE_MODE_GROUP
    public static final int ERROR_CODE_UNKNOWN_ERROR
    public static final int ERROR_CODE_APP_ERROR
    public static final int ERROR_CODE_NOT_SUPPORTED
    public static final int ERROR_CODE_AUTHENTICATION_EXPIRED
    public static final int ERROR_CODE_PREMIUM_ACCOUNT_REQUIRED
    public static final int ERROR_CODE_CONCURRENT_STREAM_LIMIT
    public static final int ERROR_CODE_PARENTAL_CONTROL_RESTRICTED
    public static final int ERROR_CODE_NOT_AVAILABLE_IN_REGION
    public static final int ERROR_CODE_CONTENT_ALREADY_PLAYING
    public static final int ERROR_CODE_SKIP_LIMIT_REACHED
    public static final int ERROR_CODE_ACTION_ABORTED
    public static final int ERROR_CODE_END_OF_QUEUE
    private static final int KEYCODE_MEDIA_PAUSE
    private static final int KEYCODE_MEDIA_PLAY
androidx.legacy.app.ActivityCompat
androidx.lifecycle.ServiceLifecycleDispatcher$DispatchRunnable
com.google.android.vending.expansion.downloader.impl.HttpDateTime
com.google.android.apps.internal.games.memoryadvice.R
androidx.core.view.accessibility.AccessibilityManagerCompat
androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplJellybeanMr2
com.epicgames.ue4.network.NetworkChangedManager:
    public boolean addListener(com.epicgames.ue4.network.NetworkConnectivityClient$Listener)
    public boolean addListener(com.epicgames.ue4.network.NetworkConnectivityClient$Listener,boolean)
    public boolean removeListener(com.epicgames.ue4.network.NetworkConnectivityClient$Listener)
    public void checkConnectivity()
    private static final int MAX_RETRY_SEC
    private static final long HOSTNAME_RESOLUTION_TIMEOUT_MS
androidx.core.provider.SelfDestructiveThread$ReplyCallback
androidx.customview.R$color
androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi28
androidx.core.view.NestedScrollingChild
com.google.android.vending.expansion.downloader.impl.DownloadsDB:
    public void close()
    public int getLastCheckedVersionCode()
    public boolean isDownloadRequired()
    public int getFlags()
    private static final java.lang.String DATABASE_NAME
    private static final int DATABASE_VERSION
    private static final int FILENAME_IDX
    private static final int URI_IDX
    private static final int ETAG_IDX
    private static final int TOTALBYTES_IDX
    private static final int CURRENTBYTES_IDX
    private static final int LASTMOD_IDX
    private static final int STATUS_IDX
    private static final int CONTROL_IDX
    private static final int NUM_FAILED_IDX
    private static final int RETRY_AFTER_IDX
    private static final int REDIRECT_COUNT_IDX
    private static final int INDEX_IDX
androidx.legacy.app.FragmentTabHost
androidx.media.R$style
com.android.billingclient.api.BillingFlowParams$ProrationMode
android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi19
androidx.core.view.animation.PathInterpolatorCompat
android.support.v4.media.RatingCompat$Style
androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback
com.android.billingclient.api.zzq
androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl$6
androidx.versionedparcelable.VersionedParcelParcel:
    public void writeByteArray(byte[],int,int)
    public void writeLong(long)
    public void writeFloat(float)
    public void writeDouble(double)
    public void writeStrongBinder(android.os.IBinder)
    public void writeBoolean(boolean)
    public void writeStrongInterface(android.os.IInterface)
    public void writeBundle(android.os.Bundle)
    public long readLong()
    public float readFloat()
    public double readDouble()
    public android.os.IBinder readStrongBinder()
    public android.os.Bundle readBundle()
    public boolean readBoolean()
    private static final boolean DEBUG
    private static final java.lang.String TAG
com.google.android.vending.expansion.downloader.impl.DownloadNotification:
    public android.app.PendingIntent getClientIntent()
    static final java.lang.String LOGTAG
androidx.lifecycle.R
com.epicgames.ue4.BootCompleteReceiver$Task
androidx.core.app.RemoteInput$Builder
androidx.collection.ArrayMap:
    public void <init>(androidx.collection.SimpleArrayMap)
    public boolean containsAll(java.util.Collection)
    public boolean removeAll(java.util.Collection)
com.android.billingclient.api.SkuDetails:
    public java.lang.String getOriginalPrice()
    public long getOriginalPriceAmountMicros()
    public java.lang.String getSubscriptionPeriod()
    public java.lang.String getFreeTrialPeriod()
    public java.lang.String getIntroductoryPrice()
    public long getIntroductoryPriceAmountMicros()
    public java.lang.String getIntroductoryPricePeriod()
    public int getIntroductoryPriceCycles()
    public java.lang.String getIconUrl()
android.support.v4.media.MediaBrowserCompat$MediaItem$Flags
androidx.asynclayoutinflater.R$color
androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl
com.android.vending.expansion.zipfile.APKExpansionSupport
androidx.asynclayoutinflater.R$layout
androidx.core.content.IntentCompat
androidx.fragment.R$style
androidx.core.database.CursorWindowCompat
androidx.fragment.app.FragmentStatePagerAdapter
android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi21$ExtraSession
androidx.legacy.v4.R$color
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat
com.google.android.vending.expansion.downloader.IDownloaderClient:
    public static final int STATE_IDLE
    public static final int STATE_FETCHING_URL
    public static final int STATE_CONNECTING
    public static final int STATE_DOWNLOADING
    public static final int STATE_COMPLETED
    public static final int STATE_PAUSED_NETWORK_UNAVAILABLE
    public static final int STATE_PAUSED_BY_REQUEST
    public static final int STATE_PAUSED_WIFI_DISABLED_NEED_CELLULAR_PERMISSION
    public static final int STATE_PAUSED_NEED_CELLULAR_PERMISSION
    public static final int STATE_PAUSED_WIFI_DISABLED
    public static final int STATE_PAUSED_NEED_WIFI
    public static final int STATE_PAUSED_ROAMING
    public static final int STATE_PAUSED_NETWORK_SETUP_FAILURE
    public static final int STATE_PAUSED_SDCARD_UNAVAILABLE
    public static final int STATE_FAILED_UNLICENSED
    public static final int STATE_FAILED_FETCHING_URL
    public static final int STATE_FAILED_SDCARD_FULL
    public static final int STATE_FAILED_CANCELED
    public static final int STATE_FAILED
androidx.core.widget.TextViewCompat$OreoCallback
androidx.core.net.DatagramSocketWrapper
androidx.lifecycle.extensions.R$color
androidx.core.view.inputmethod.InputConnectionCompat
androidx.slidingpanelayout.R$dimen
androidx.core.app.NotificationCompat$Style:
    private android.graphics.Bitmap createColoredBitmap(int,int,int)
    private android.graphics.Bitmap createIconWithBackground(int,int,int,int)
    private void hideNormalContent(android.widget.RemoteViews)
    private int calculateTopPadding()
    private static float constrain(float,float,float)
    public android.app.Notification build()
    protected void restoreFromCompatExtras(android.os.Bundle)
    public android.widget.RemoteViews applyStandardTemplate(boolean,int,boolean)
    public android.graphics.Bitmap createColoredBitmap(int,int)
    public void buildIntoRemoteViews(android.widget.RemoteViews,android.widget.RemoteViews)
androidx.media.MediaBrowserServiceCompatApi21$ServiceCompatProxy
androidx.core.R$layout
androidx.lifecycle.Transformations$2
androidx.core.os.EnvironmentCompat
com.google.android.apps.internal.games.memoryadvice.MemoryAdvisor:
    public org.json.JSONObject getDeviceInfo(android.content.Context)
    public synthetic bridge void setOnTrim(int)
com.google.android.gms.games.internal.api.zzed
androidx.legacy.app.ActionBarDrawerToggle$SetIndicatorInfo
androidx.legacy.app.FragmentCompat$FragmentCompatApi24Impl:
    public void setUserVisibleHint(android.app.Fragment,boolean)
android.support.v4.media.MediaBrowserCompat$ConnectionCallback$ConnectionCallbackInternal
androidx.legacy.coreui.R$string
com.google.android.vending.licensing.LicenseCheckerCallback:
    public static final int ERROR_INVALID_PACKAGE_NAME
    public static final int ERROR_NON_MATCHING_UID
    public static final int ERROR_NOT_MARKET_MANAGED
    public static final int ERROR_CHECK_IN_PROGRESS
    public static final int ERROR_INVALID_PUBLIC_KEY
    public static final int ERROR_MISSING_PERMISSION
androidx.viewpager.widget.ViewPager$SavedState$1
androidx.swiperefreshlayout.widget.CircularProgressDrawable$1
androidx.drawerlayout.R$id
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl
androidx.viewpager.widget.ViewPager$PageTransformer
androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener
com.YourCompany.CapstoneProject.R$color
androidx.collection.SparseArrayCompat:
    public void removeAt(int)
    public void removeAtRange(int,int)
    public void putAll(androidx.collection.SparseArrayCompat)
    public boolean isEmpty()
    public void setValueAt(int,java.lang.Object)
    public int indexOfValue(java.lang.Object)
    public boolean containsKey(int)
    public boolean containsValue(java.lang.Object)
    public void append(int,java.lang.Object)
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks:
    public void <init>()
com.google.androidgamesdk.ChoreographerCallback$LooperThread
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$ExtraBinderRequestResultReceiver:
    void <init>(android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21)
androidx.lifecycle.ComputableLiveData$2
androidx.core.util.DebugUtils:
    private void <init>()
androidx.core.app.NotificationCompat:
    static android.app.Notification[] getNotificationArrayFromBundle(android.os.Bundle,java.lang.String)
    public static int getActionCount(android.app.Notification)
    public static androidx.core.app.NotificationCompat$Action getAction(android.app.Notification,int)
    static androidx.core.app.NotificationCompat$Action getActionCompatFromAction(android.app.Notification$Action)
    public static java.util.List getInvisibleActions(android.app.Notification)
    public static java.lang.CharSequence getContentTitle(android.app.Notification)
    public static java.lang.String getCategory(android.app.Notification)
    public static boolean getLocalOnly(android.app.Notification)
    public static java.lang.String getGroup(android.app.Notification)
    public static boolean isGroupSummary(android.app.Notification)
    public static java.lang.String getSortKey(android.app.Notification)
    public static java.lang.String getChannelId(android.app.Notification)
    public static long getTimeoutAfter(android.app.Notification)
    public static int getBadgeIconType(android.app.Notification)
    public static java.lang.String getShortcutId(android.app.Notification)
    public static int getGroupAlertBehavior(android.app.Notification)
    public void <init>()
    public static final int DEFAULT_ALL
    public static final int DEFAULT_SOUND
    public static final int DEFAULT_VIBRATE
    public static final int DEFAULT_LIGHTS
    public static final int STREAM_DEFAULT
    public static final int FLAG_SHOW_LIGHTS
    public static final int FLAG_ONGOING_EVENT
    public static final int FLAG_INSISTENT
    public static final int FLAG_ONLY_ALERT_ONCE
    public static final int FLAG_AUTO_CANCEL
    public static final int FLAG_NO_CLEAR
    public static final int FLAG_FOREGROUND_SERVICE
    public static final int FLAG_HIGH_PRIORITY
    public static final int FLAG_LOCAL_ONLY
    public static final int FLAG_GROUP_SUMMARY
    public static final int PRIORITY_DEFAULT
    public static final int PRIORITY_LOW
    public static final int PRIORITY_MIN
    public static final int PRIORITY_HIGH
    public static final int PRIORITY_MAX
    public static final java.lang.String EXTRA_TITLE
    public static final java.lang.String EXTRA_TITLE_BIG
    public static final java.lang.String EXTRA_TEXT
    public static final java.lang.String EXTRA_SUB_TEXT
    public static final java.lang.String EXTRA_REMOTE_INPUT_HISTORY
    public static final java.lang.String EXTRA_INFO_TEXT
    public static final java.lang.String EXTRA_SUMMARY_TEXT
    public static final java.lang.String EXTRA_BIG_TEXT
    public static final java.lang.String EXTRA_SMALL_ICON
    public static final java.lang.String EXTRA_LARGE_ICON
    public static final java.lang.String EXTRA_LARGE_ICON_BIG
    public static final java.lang.String EXTRA_PROGRESS
    public static final java.lang.String EXTRA_PROGRESS_MAX
    public static final java.lang.String EXTRA_PROGRESS_INDETERMINATE
    public static final java.lang.String EXTRA_SHOW_CHRONOMETER
    public static final java.lang.String EXTRA_SHOW_WHEN
    public static final java.lang.String EXTRA_PICTURE
    public static final java.lang.String EXTRA_TEXT_LINES
    public static final java.lang.String EXTRA_TEMPLATE
    public static final java.lang.String EXTRA_PEOPLE
    public static final java.lang.String EXTRA_BACKGROUND_IMAGE_URI
    public static final java.lang.String EXTRA_MEDIA_SESSION
    public static final java.lang.String EXTRA_COMPACT_ACTIONS
    public static final java.lang.String EXTRA_SELF_DISPLAY_NAME
    public static final java.lang.String EXTRA_MESSAGING_STYLE_USER
    public static final java.lang.String EXTRA_CONVERSATION_TITLE
    public static final java.lang.String EXTRA_MESSAGES
    public static final java.lang.String EXTRA_IS_GROUP_CONVERSATION
    public static final java.lang.String EXTRA_HIDDEN_CONVERSATION_TITLE
    public static final java.lang.String EXTRA_AUDIO_CONTENTS_URI
    public static final int COLOR_DEFAULT
    public static final int VISIBILITY_PUBLIC
    public static final int VISIBILITY_PRIVATE
    public static final int VISIBILITY_SECRET
    public static final java.lang.String CATEGORY_CALL
    public static final java.lang.String CATEGORY_MESSAGE
    public static final java.lang.String CATEGORY_EMAIL
    public static final java.lang.String CATEGORY_EVENT
    public static final java.lang.String CATEGORY_PROMO
    public static final java.lang.String CATEGORY_ALARM
    public static final java.lang.String CATEGORY_PROGRESS
    public static final java.lang.String CATEGORY_SOCIAL
    public static final java.lang.String CATEGORY_ERROR
    public static final java.lang.String CATEGORY_TRANSPORT
    public static final java.lang.String CATEGORY_SYSTEM
    public static final java.lang.String CATEGORY_SERVICE
    public static final java.lang.String CATEGORY_REMINDER
    public static final java.lang.String CATEGORY_RECOMMENDATION
    public static final java.lang.String CATEGORY_STATUS
    public static final int BADGE_ICON_NONE
    public static final int BADGE_ICON_SMALL
    public static final int BADGE_ICON_LARGE
    public static final int GROUP_ALERT_ALL
    public static final int GROUP_ALERT_SUMMARY
    public static final int GROUP_ALERT_CHILDREN
android.support.v4.media.session.MediaControllerCompat$Callback$MessageHandler:
    void <init>(android.support.v4.media.session.MediaControllerCompat$Callback,android.os.Looper)
    public void handleMessage(android.os.Message)
    boolean mRegistered
    final synthetic android.support.v4.media.session.MediaControllerCompat$Callback this$0
    private static final int MSG_EVENT
    private static final int MSG_UPDATE_PLAYBACK_STATE
    private static final int MSG_UPDATE_METADATA
    private static final int MSG_UPDATE_VOLUME
    private static final int MSG_UPDATE_QUEUE
    private static final int MSG_UPDATE_QUEUE_TITLE
    private static final int MSG_UPDATE_EXTRAS
    private static final int MSG_DESTROYED
    private static final int MSG_UPDATE_REPEAT_MODE
    private static final int MSG_UPDATE_CAPTIONING_ENABLED
    private static final int MSG_UPDATE_SHUFFLE_MODE
    private static final int MSG_SESSION_READY
com.google.android.vending.licensing.Policy:
    public static final int LICENSED
    public static final int NOT_LICENSED
    public static final int RETRY
com.google.android.vending.licensing.util.Base64DecoderException:
    public void <init>()
    private static final long serialVersionUID
android.support.v4.media.session.PlaybackStateCompatApi21:
    public static java.lang.Object newInstance(int,long,long,float,long,java.lang.CharSequence,long,java.util.List,long)
    private void <init>()
androidx.collection.LongSparseArray:
    public void delete(long)
    public void remove(long)
    public void removeAt(int)
    public void putAll(androidx.collection.LongSparseArray)
    public boolean isEmpty()
    public void setValueAt(int,java.lang.Object)
    public int indexOfKey(long)
    public int indexOfValue(java.lang.Object)
    public boolean containsKey(long)
    public boolean containsValue(java.lang.Object)
    public void clear()
    public void append(long,java.lang.Object)
androidx.media.MediaSessionManagerImplApi21
androidx.drawerlayout.widget.DrawerLayout$DrawerListener
androidx.core.view.NestedScrollingChild2
androidx.annotation.InterpolatorRes
androidx.core.app.RemoteInput:
    void <init>(java.lang.String,java.lang.CharSequence,java.lang.CharSequence[],boolean,android.os.Bundle,java.util.Set)
    public static java.util.Map getDataResultsFromIntent(android.content.Intent,java.lang.String)
    public static android.os.Bundle getResultsFromIntent(android.content.Intent)
    public static void addResultsToIntent(androidx.core.app.RemoteInput[],android.content.Intent,android.os.Bundle)
    public static void addDataResultToIntent(androidx.core.app.RemoteInput,android.content.Intent,java.util.Map)
    private static java.lang.String getExtraResultsKeyForData(java.lang.String)
    private static android.content.Intent getClipDataIntentFromIntent(android.content.Intent)
    public boolean isDataOnly()
    private final java.lang.String mResultKey
    private final java.lang.CharSequence mLabel
    private final java.lang.CharSequence[] mChoices
    private final boolean mAllowFreeFormTextInput
    private final android.os.Bundle mExtras
    private final java.util.Set mAllowedDataTypes
    private static final java.lang.String TAG
    public static final java.lang.String RESULTS_CLIP_LABEL
    public static final java.lang.String EXTRA_RESULTS_DATA
    private static final java.lang.String EXTRA_DATA_TYPE_RESULTS_DATA
androidx.core.view.ActionProvider$SubUiVisibilityListener
androidx.annotation.RestrictTo
android.support.v4.media.MediaMetadataCompat$TextKey
android.support.v4.media.MediaBrowserCompatApi23$ItemCallback
androidx.legacy.v4.R$integer
androidx.interpolator.R
androidx.loader.content.Loader$ForceLoadContentObserver
androidx.asynclayoutinflater.R$drawable
android.support.v4.os.IResultReceiver$Stub$Proxy:
    public java.lang.String getInterfaceDescriptor()
com.google.android.apps.internal.games.memoryadvice.DeviceProfile:
    void <init>()
androidx.drawerlayout.R$drawable
androidx.legacy.coreutils.R$integer
androidx.core.graphics.PathParser$PathDataNode
android.support.v4.media.MediaDescriptionCompatApi23:
    private void <init>()
androidx.coordinatorlayout.R$layout
androidx.customview.R
androidx.core.app.NotificationCompat$Action$SemanticAction
androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerWrapper
androidx.annotation.RawRes
androidx.fragment.R$dimen
androidx.annotation.VisibleForTesting
androidx.core.util.Consumer
androidx.lifecycle.Lifecycling:
    private void <init>()
    private static final int REFLECTIVE_CALLBACK
    private static final int GENERATED_CALLBACK
com.android.billingclient.api.zzy
com.android.billingclient.api.AcknowledgePurchaseParams$Builder
com.android.billingclient.api.Purchase:
    public java.lang.String getOrderId()
    public java.lang.String getPackageName()
    public long getPurchaseTime()
    public java.lang.String getDeveloperPayload()
    public boolean isAcknowledged()
    public boolean isAutoRenewing()
    public com.android.billingclient.api.AccountIdentifiers getAccountIdentifiers()
androidx.core.view.inputmethod.InputContentInfoCompat
com.google.android.vending.licensing.util.URIQueryDecoder:
    public void <init>()
    private static final java.lang.String TAG
androidx.core.app.NotificationCompat$BigPictureStyle
androidx.legacy.coreutils.R$attr
androidx.print.PrintHelper$PrintUriAdapter$1
androidx.media.session.MediaButtonReceiver$MediaButtonConnectionCallback
com.YourCompany.CapstoneProject.R$style
androidx.core.app.NotificationCompat$BigTextStyle:
    public void <init>(androidx.core.app.NotificationCompat$Builder)
    public androidx.core.app.NotificationCompat$BigTextStyle setBigContentTitle(java.lang.CharSequence)
    public androidx.core.app.NotificationCompat$BigTextStyle setSummaryText(java.lang.CharSequence)
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatBaseImpl
androidx.annotation.AnyThread
androidx.core.content.FileProvider$PathStrategy:
    public abstract java.io.File getFileForUri(android.net.Uri)
androidx.drawerlayout.widget.DrawerLayout$AccessibilityDelegate
androidx.core.widget.ImageViewCompat
androidx.annotation.RestrictTo$Scope
com.google.android.apps.internal.games.memoryadvice.BuildConfig
androidx.core.widget.ContentLoadingProgressBar
androidx.core.app.NotificationCompatJellybean:
    public static androidx.core.app.NotificationCompat$Action readAction(int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle)
    public static int getActionCount(android.app.Notification)
    public static androidx.core.app.NotificationCompat$Action getAction(android.app.Notification,int)
    private static java.lang.Object[] getActionObjectsLocked(android.app.Notification)
    private static boolean ensureActionReflectionReadyLocked()
    static androidx.core.app.NotificationCompat$Action getActionFromBundle(android.os.Bundle)
    private static androidx.core.app.RemoteInput fromBundle(android.os.Bundle)
    private static androidx.core.app.RemoteInput[] fromBundleArray(android.os.Bundle[])
    private static android.os.Bundle[] getBundleArrayFromBundle(android.os.Bundle,java.lang.String)
    private void <init>()
    public static final java.lang.String TAG
    static final java.lang.String EXTRA_DATA_ONLY_REMOTE_INPUTS
    static final java.lang.String EXTRA_ALLOW_GENERATED_REPLIES
    private static final java.lang.String KEY_ICON
    private static final java.lang.String KEY_TITLE
    private static final java.lang.String KEY_ACTION_INTENT
    private static final java.lang.String KEY_EXTRAS
    private static final java.lang.String KEY_REMOTE_INPUTS
    private static final java.lang.String KEY_DATA_ONLY_REMOTE_INPUTS
    private static final java.lang.String KEY_RESULT_KEY
    private static final java.lang.String KEY_LABEL
    private static final java.lang.String KEY_CHOICES
    private static final java.lang.String KEY_ALLOW_FREE_FORM_INPUT
    private static final java.lang.String KEY_ALLOWED_DATA_TYPES
    private static final java.lang.String KEY_SEMANTIC_ACTION
    private static final java.lang.String KEY_SHOWS_USER_INTERFACE
    private static java.lang.Class sActionClass
    private static java.lang.reflect.Field sActionsField
    private static java.lang.reflect.Field sActionIconField
    private static java.lang.reflect.Field sActionTitleField
    private static java.lang.reflect.Field sActionIntentField
    private static boolean sActionsAccessFailed
com.google.android.vending.licensing.ServerManagedPolicy
android.support.v4.media.MediaBrowserCompat$ConnectionCallback$StubApi21
androidx.fragment.R$color
androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi21$3
androidx.core.app.JobIntentService
android.support.v4.media.session.MediaControllerCompatApi24$TransportControls
androidx.core.os.HandlerCompat
androidx.media.MediaSessionManager$MediaSessionManagerImpl
androidx.legacy.view.ViewCompat
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$5
androidx.loader.R$id
android.support.v4.media.session.MediaSessionCompatApi24$Callback
androidx.viewpager.widget.ViewPager$2
androidx.legacy.coreui.R$id
androidx.fragment.R$attr
androidx.legacy.v4.R$style
androidx.customview.widget.ViewDragHelper
androidx.customview.R$style
android.support.v4.media.session.MediaControllerCompat$MediaControllerExtraData
android.support.v4.media.session.MediaSessionCompatApi24
androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams
android.support.v4.media.MediaBrowserCompat$CallbackHandler
com.android.billingclient.api.BillingClient$SkuType
androidx.collection.ContainerHelpers:
    private void <init>()
androidx.core.R$styleable
androidx.core.view.ViewCompat$ScrollAxis
androidx.annotation.HalfFloat
androidx.viewpager.widget.PagerTabStrip
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$6
androidx.annotation.LayoutRes
com.YourCompany.CapstoneProject.OBBDownloaderService:
    private static final java.lang.String BASE64_PUBLIC_KEY
androidx.core.graphics.PathParser$ExtractFloatResult
androidx.core.provider.FontsContractCompat$4$3
androidx.media.MediaBrowserServiceCompat$3
androidx.core.graphics.BitmapCompat
androidx.core.provider.SelfDestructiveThread
android.support.v4.media.session.MediaControllerCompatApi21:
    public static java.lang.Object fromToken(android.content.Context,java.lang.Object)
    public static void registerCallback(java.lang.Object,java.lang.Object,android.os.Handler)
    public static void unregisterCallback(java.lang.Object,java.lang.Object)
    public static void setMediaController(android.app.Activity,java.lang.Object)
    public static java.lang.Object getMediaController(android.app.Activity)
    public static java.lang.Object getSessionToken(java.lang.Object)
    public static java.lang.Object getTransportControls(java.lang.Object)
    public static java.lang.Object getPlaybackState(java.lang.Object)
    public static java.lang.Object getMetadata(java.lang.Object)
    public static java.util.List getQueue(java.lang.Object)
    public static java.lang.CharSequence getQueueTitle(java.lang.Object)
    public static android.os.Bundle getExtras(java.lang.Object)
    public static int getRatingType(java.lang.Object)
    public static long getFlags(java.lang.Object)
    public static java.lang.Object getPlaybackInfo(java.lang.Object)
    public static android.app.PendingIntent getSessionActivity(java.lang.Object)
    public static boolean dispatchMediaButtonEvent(java.lang.Object,android.view.KeyEvent)
    public static void setVolumeTo(java.lang.Object,int,int)
    public static void adjustVolume(java.lang.Object,int,int)
    public static void sendCommand(java.lang.Object,java.lang.String,android.os.Bundle,android.os.ResultReceiver)
    public static java.lang.String getPackageName(java.lang.Object)
    private void <init>()
androidx.fragment.R$string
com.google.android.vending.licensing.AESObfuscator:
    private static final java.lang.String UTF8
    private static final java.lang.String KEYGEN_ALGORITHM
    private static final java.lang.String CIPHER_ALGORITHM
    private static final java.lang.String header
androidx.annotation.UiThread
androidx.lifecycle.extensions.R$style
android.support.v4.media.MediaBrowserCompatApi23$ItemCallbackProxy
com.YourCompany.CapstoneProject.R$dimen
androidx.core.os.LocaleHelper
android.support.v4.media.MediaDescriptionCompatApi21$Builder:
    private void <init>()
androidx.cursoradapter.widget.ResourceCursorAdapter
androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry
androidx.core.widget.ListViewAutoScrollHelper
androidx.media.R$styleable
androidx.viewpager.widget.ViewPager$OnAdapterChangeListener
androidx.arch.core.executor.ArchTaskExecutor:
    public static java.util.concurrent.Executor getMainThreadExecutor()
    public static java.util.concurrent.Executor getIOThreadExecutor()
    public void setDelegate(androidx.arch.core.executor.TaskExecutor)
com.google.android.apps.internal.games.memoryadvice.MemoryWatcher$Client
androidx.core.os.LocaleListInterface
com.android.billingclient.api.zza
androidx.core.widget.ContentLoadingProgressBar$2
android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi19$1
androidx.lifecycle.extensions.R$dimen
com.google.android.vending.expansion.downloader.SystemFacade
androidx.annotation.BinderThread
androidx.swiperefreshlayout.widget.CircularProgressDrawable$2
androidx.fragment.app.FragmentTabHost$SavedState
androidx.legacy.app.FragmentCompat$FragmentCompatApi15Impl:
    public void setUserVisibleHint(android.app.Fragment,boolean)
androidx.core.content.pm.ShortcutManagerCompat$1
androidx.core.app.JobIntentService$CompatWorkItem
androidx.core.text.TextDirectionHeuristicsCompat
com.YourCompany.CapstoneProject.R$id
androidx.asynclayoutinflater.view.AsyncLayoutInflater$BasicInflater
androidx.annotation.Nullable
androidx.coordinatorlayout.R$styleable
android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi18
androidx.media.VolumeProviderCompatApi21$1
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi21$2
androidx.core.content.res.ResourcesCompat$FontCallback
androidx.coordinatorlayout.widget.ViewGroupUtils
androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl$7
androidx.core.internal.package-info
androidx.core.widget.AutoScrollHelper$ScrollAnimationRunnable
androidx.annotation.AttrRes
androidx.core.content.pm.ActivityInfoCompat
androidx.core.view.GestureDetectorCompat
androidx.core.app.Person
androidx.slidingpanelayout.R$attr
androidx.legacy.app.FragmentCompat$FragmentCompatApi23Impl:
    public boolean shouldShowRequestPermissionRationale(android.app.Fragment,java.lang.String)
androidx.annotation.ArrayRes
androidx.annotation.StyleRes
androidx.core.content.MimeTypeFilter
androidx.core.app.NotificationCompat$NotificationVisibility
com.google.androidgamesdk.BuildConfig
androidx.core.view.VelocityTrackerCompat
androidx.core.text.PrecomputedTextCompat$PrecomputedTextFutureTask$PrecomputedTextCallback
androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat
androidx.print.PrintHelper$PrintUriAdapter$1$1
androidx.slidingpanelayout.R
androidx.legacy.app.FragmentTabHost$DummyTabFactory
androidx.viewpager.R$drawable
androidx.core.R$color
androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler
com.android.billingclient.api.zzr
android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MediaSessionStub
androidx.core.text.util.LinkifyCompat$LinkSpec
androidx.core.app.NotificationCompat$WearableExtender
androidx.annotation.BoolRes
android.support.v4.media.session.MediaControllerCompat$TransportControlsBase
androidx.lifecycle.AndroidViewModel
androidx.loader.app.LoaderManagerImpl$LoaderViewModel:
    void removeLoader(int)
    boolean hasRunningLoaders()
androidx.viewpager.widget.ViewPager$3
androidx.core.app.FrameMetricsAggregator$FrameMetricsBaseImpl
androidx.annotation.FontRes
androidx.slidingpanelayout.R$string
androidx.core.os.LocaleListCompat$LocaleListCompatApi24Impl
android.support.v4.media.MediaBrowserCompat$MediaBrowserImpl
androidx.core.app.AppLaunchChecker
androidx.media.AudioAttributesCompat$AttributeContentType
com.google.android.gms.internal.zzfek:
    protected static void zza(java.lang.Iterable,java.util.List)
android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl
androidx.core.text.util.LinkifyCompat$1
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper:
    public void <init>(android.os.ResultReceiver)
androidx.core.util.Pools
androidx.annotation.MenuRes
android.support.v4.media.MediaMetadataCompat$Builder
com.google.android.vending.licensing.LicenseValidator:
    private static final java.lang.String TAG
    private static final int LICENSED
    private static final int NOT_LICENSED
    private static final int LICENSED_OLD_KEY
    private static final int ERROR_NOT_MARKET_MANAGED
    private static final int ERROR_SERVER_FAILURE
    private static final int ERROR_OVER_QUOTA
    private static final int ERROR_CONTACTING_SERVER
    private static final int ERROR_INVALID_PACKAGE_NAME
    private static final int ERROR_NON_MATCHING_UID
    private static final java.lang.String SIGNATURE_ALGORITHM
androidx.lifecycle.ComputableLiveData
com.google.android.gms.internal.zzfhl
androidx.core.graphics.drawable.RoundedBitmapDrawableFactory$DefaultRoundedBitmapDrawable
androidx.coordinatorlayout.R$drawable
androidx.core.app.JobIntentService$CommandProcessor
androidx.legacy.coreui.R$integer
androidx.core.provider.FontsContractCompat$5
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatImpl
androidx.core.view.accessibility.AccessibilityNodeProviderCompat
androidx.annotation.AnimatorRes
androidx.versionedparcelable.ParcelField
com.android.billingclient.api.BillingFlowParams$Builder:
    public com.android.billingclient.api.BillingFlowParams$Builder setOldSku(java.lang.String,java.lang.String)
    public com.android.billingclient.api.BillingFlowParams$Builder setReplaceSkusProrationMode(int)
    public com.android.billingclient.api.BillingFlowParams$Builder setObfuscatedProfileId(java.lang.String)
android.support.v4.media.session.MediaSessionCompat$1
androidx.core.provider.FontsContractCompat$FontRequestCallback
androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord
androidx.slidingpanelayout.R$id
androidx.core.view.MenuItemCompat$OnActionExpandListener
com.android.billingclient.api.Purchase$PurchaseState
androidx.coordinatorlayout.R$color
com.epicgames.ue4.GooglePlayLicensing:
    static synthetic com.epicgames.ue4.GameActivity access$100(com.epicgames.ue4.GooglePlayLicensing)
    static synthetic com.epicgames.ue4.Logger access$200(com.epicgames.ue4.GooglePlayLicensing)
    public void CheckLicense(java.lang.String)
    public void onDestroy()
    private com.google.android.vending.licensing.LicenseCheckerCallback mLicenseCheckerCallback
    private com.google.android.vending.licensing.LicenseChecker mChecker
androidx.viewpager.widget.ViewPager$SavedState
androidx.core.graphics.TypefaceCompatBaseImpl
android.support.v4.media.MediaBrowserCompatApi23
androidx.core.view.ViewCompat$NestedScrollType
com.google.androidgamesdk.GameSdkDeviceInfoJni
androidx.core.os.LocaleListCompat$LocaleListCompatBaseImpl
androidx.loader.R$styleable
com.google.android.vending.licensing.APKExpansionPolicy:
    public long getRetryCount()
    public long getValidityTimestamp()
    public long getRetryUntil()
    public long getMaxRetries()
    private static final java.lang.String TAG
    private static final java.lang.String PREFS_FILE
    private static final java.lang.String PREF_LAST_RESPONSE
    private static final java.lang.String PREF_VALIDITY_TIMESTAMP
    private static final java.lang.String PREF_RETRY_UNTIL
    private static final java.lang.String PREF_MAX_RETRIES
    private static final java.lang.String PREF_RETRY_COUNT
    private static final java.lang.String DEFAULT_VALIDITY_TIMESTAMP
    private static final java.lang.String DEFAULT_RETRY_UNTIL
    private static final java.lang.String DEFAULT_MAX_RETRIES
    private static final java.lang.String DEFAULT_RETRY_COUNT
    private static final long MILLIS_PER_MINUTE
    public static final int MAIN_FILE_URL_INDEX
    public static final int PATCH_FILE_URL_INDEX
androidx.lifecycle.LifecycleDispatcher:
    private void <init>()
androidx.lifecycle.extensions.R$integer
android.support.v4.os.ResultReceiver:
    public void <init>(android.os.Handler)
    public void send(int,android.os.Bundle)
androidx.core.app.JobIntentService$JobWorkEnqueuer
androidx.arch.core.R
androidx.core.graphics.drawable.RoundedBitmapDrawableFactory
androidx.lifecycle.LifecycleRegistry:
    public int getObserverCount()
    private static final java.lang.String LOG_TAG
androidx.fragment.app.FragmentHostCallback:
    public void <init>(android.content.Context,android.os.Handler,int)
    public void onStartActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int)
    public android.view.View onFindViewById(int)
    public boolean onHasView()
android.support.v4.media.session.IMediaControllerCallback$Stub:
    public static android.support.v4.media.session.IMediaControllerCallback asInterface(android.os.IBinder)
    private static final java.lang.String DESCRIPTOR
    static final int TRANSACTION_onEvent
    static final int TRANSACTION_onSessionDestroyed
    static final int TRANSACTION_onPlaybackStateChanged
    static final int TRANSACTION_onMetadataChanged
    static final int TRANSACTION_onQueueChanged
    static final int TRANSACTION_onQueueTitleChanged
    static final int TRANSACTION_onExtrasChanged
    static final int TRANSACTION_onVolumeInfoChanged
    static final int TRANSACTION_onRepeatModeChanged
    static final int TRANSACTION_onShuffleModeChangedRemoved
    static final int TRANSACTION_onCaptioningEnabledChanged
    static final int TRANSACTION_onShuffleModeChanged
    static final int TRANSACTION_onSessionReady
androidx.fragment.app.FragmentTransaction:
    public abstract androidx.fragment.app.FragmentTransaction add(int,androidx.fragment.app.Fragment)
    public abstract androidx.fragment.app.FragmentTransaction add(int,androidx.fragment.app.Fragment,java.lang.String)
    public abstract androidx.fragment.app.FragmentTransaction replace(int,androidx.fragment.app.Fragment)
    public abstract androidx.fragment.app.FragmentTransaction replace(int,androidx.fragment.app.Fragment,java.lang.String)
    public abstract androidx.fragment.app.FragmentTransaction hide(androidx.fragment.app.Fragment)
    public abstract androidx.fragment.app.FragmentTransaction show(androidx.fragment.app.Fragment)
    public abstract androidx.fragment.app.FragmentTransaction detach(androidx.fragment.app.Fragment)
    public abstract androidx.fragment.app.FragmentTransaction attach(androidx.fragment.app.Fragment)
    public abstract androidx.fragment.app.FragmentTransaction setPrimaryNavigationFragment(androidx.fragment.app.Fragment)
    public abstract boolean isEmpty()
    public abstract androidx.fragment.app.FragmentTransaction setCustomAnimations(int,int)
    public abstract androidx.fragment.app.FragmentTransaction setCustomAnimations(int,int,int,int)
    public abstract androidx.fragment.app.FragmentTransaction addSharedElement(android.view.View,java.lang.String)
    public abstract androidx.fragment.app.FragmentTransaction setTransition(int)
    public abstract androidx.fragment.app.FragmentTransaction setTransitionStyle(int)
    public abstract androidx.fragment.app.FragmentTransaction addToBackStack(java.lang.String)
    public abstract boolean isAddToBackStackAllowed()
    public abstract androidx.fragment.app.FragmentTransaction disallowAddToBackStack()
    public abstract androidx.fragment.app.FragmentTransaction setBreadCrumbTitle(int)
    public abstract androidx.fragment.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence)
    public abstract androidx.fragment.app.FragmentTransaction setBreadCrumbShortTitle(int)
    public abstract androidx.fragment.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence)
    public abstract androidx.fragment.app.FragmentTransaction setReorderingAllowed(boolean)
    public abstract androidx.fragment.app.FragmentTransaction setAllowOptimization(boolean)
    public abstract androidx.fragment.app.FragmentTransaction runOnCommit(java.lang.Runnable)
    public abstract void commitNowAllowingStateLoss()
    public static final int TRANSIT_ENTER_MASK
    public static final int TRANSIT_EXIT_MASK
    public static final int TRANSIT_UNSET
    public static final int TRANSIT_NONE
    public static final int TRANSIT_FRAGMENT_OPEN
    public static final int TRANSIT_FRAGMENT_CLOSE
    public static final int TRANSIT_FRAGMENT_FADE
androidx.core.app.AppComponentFactory
androidx.core.app.NotificationCompatExtras
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$4
androidx.media.MediaBrowserServiceCompat$ServiceCallbacksCompat
androidx.core.R$attr
androidx.annotation.ColorRes
androidx.core.content.res.GrowingArrayUtils
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$5
androidx.annotation.IdRes
androidx.drawerlayout.widget.DrawerLayout
android.support.v4.media.MediaBrowserCompat$ItemCallback$StubApi23
androidx.legacy.v13.R$layout
androidx.core.text.ICUCompat
androidx.core.os.ParcelableCompatCreatorCallbacks
androidx.core.util.Pair
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21:
    public void <init>(android.content.Context,android.support.v4.media.session.MediaSessionCompat$Token)
    private void requestExtraBinder()
    public final void registerCallback(android.support.v4.media.session.MediaControllerCompat$Callback,android.os.Handler)
    public final void unregisterCallback(android.support.v4.media.session.MediaControllerCompat$Callback)
    public boolean dispatchMediaButtonEvent(android.view.KeyEvent)
    public android.support.v4.media.session.MediaControllerCompat$TransportControls getTransportControls()
    public android.support.v4.media.session.PlaybackStateCompat getPlaybackState()
    public android.support.v4.media.MediaMetadataCompat getMetadata()
    public java.util.List getQueue()
    public void addQueueItem(android.support.v4.media.MediaDescriptionCompat)
    public void addQueueItem(android.support.v4.media.MediaDescriptionCompat,int)
    public void removeQueueItem(android.support.v4.media.MediaDescriptionCompat)
    public java.lang.CharSequence getQueueTitle()
    public android.os.Bundle getExtras()
    public int getRatingType()
    public boolean isCaptioningEnabled()
    public int getRepeatMode()
    public int getShuffleMode()
    public long getFlags()
    public android.support.v4.media.session.MediaControllerCompat$PlaybackInfo getPlaybackInfo()
    public android.app.PendingIntent getSessionActivity()
    public void setVolumeTo(int,int)
    public void adjustVolume(int,int)
    public void sendCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver)
    public boolean isSessionReady()
    public java.lang.String getPackageName()
    public java.lang.Object getMediaController()
    protected final java.lang.Object mControllerObj
androidx.coordinatorlayout.R$id
androidx.slidingpanelayout.widget.SlidingPaneLayout$SimplePanelSlideListener
androidx.collection.CircularIntArray
com.android.billingclient.api.PriceChangeFlowParams
com.epicgames.ue4.WebViewControl$BitmapRenderer:
    private void glWarn(java.lang.String)
    public android.graphics.SurfaceTexture getSurfaceTexture()
    public int getExternalTextureId()
    private static final int FLOAT_SIZE_BYTES
    private static final int TRIANGLE_VERTICES_DATA_STRIDE_BYTES
    private static final int TRIANGLE_VERTICES_DATA_POS_OFFSET
    private static final int TRIANGLE_VERTICES_DATA_UV_OFFSET
androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry
androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi21$4
androidx.core.content.pm.ShortcutInfoCompat$Builder
androidx.fragment.app.FragmentManager:
    public static void enableDebugLogging(boolean)
    public androidx.fragment.app.FragmentTransaction openTransaction()
    public abstract boolean executePendingTransactions()
    public abstract androidx.fragment.app.Fragment findFragmentById(int)
    public abstract void popBackStack()
    public abstract void popBackStack(java.lang.String,int)
    public abstract boolean popBackStackImmediate(java.lang.String,int)
    public abstract boolean popBackStackImmediate(int,int)
    public abstract int getBackStackEntryCount()
    public abstract androidx.fragment.app.FragmentManager$BackStackEntry getBackStackEntryAt(int)
    public abstract void addOnBackStackChangedListener(androidx.fragment.app.FragmentManager$OnBackStackChangedListener)
    public abstract void removeOnBackStackChangedListener(androidx.fragment.app.FragmentManager$OnBackStackChangedListener)
    public abstract void putFragment(android.os.Bundle,java.lang.String,androidx.fragment.app.Fragment)
    public abstract androidx.fragment.app.Fragment getFragment(android.os.Bundle,java.lang.String)
    public abstract androidx.fragment.app.Fragment$SavedState saveFragmentInstanceState(androidx.fragment.app.Fragment)
    public abstract boolean isDestroyed()
    public abstract void registerFragmentLifecycleCallbacks(androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks,boolean)
    public abstract void unregisterFragmentLifecycleCallbacks(androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks)
    public abstract androidx.fragment.app.Fragment getPrimaryNavigationFragment()
    public static final int POP_BACK_STACK_INCLUSIVE
androidx.core.widget.ListPopupWindowCompat
androidx.core.app.AlarmManagerCompat
androidx.core.graphics.drawable.WrappedDrawableApi14:
    public final android.graphics.drawable.Drawable getWrappedDrawable()
com.android.vending.expansion.zipfile.ZipResourceFile:
    private static int swapEndian(short)
    com.android.vending.expansion.zipfile.ZipResourceFile$ZipEntryRO[] getEntriesAt(java.lang.String)
    public android.content.res.AssetFileDescriptor getAssetFileDescriptor(java.lang.String)
    static final java.lang.String LOG_TAG
    static final boolean LOGV
    static final int kEOCDSignature
    static final int kEOCDLen
    static final int kEOCDNumEntries
    static final int kEOCDSize
    static final int kEOCDFileOffset
    static final int kMaxCommentLen
    static final int kMaxEOCDSearch
    static final int kLFHSignature
    static final int kLFHLen
    static final int kLFHNameLen
    static final int kLFHExtraLen
    static final int kCDESignature
    static final int kCDELen
    static final int kCDEMethod
    static final int kCDEModWhen
    static final int kCDECRC
    static final int kCDECompLen
    static final int kCDEUncompLen
    static final int kCDENameLen
    static final int kCDEExtraLen
    static final int kCDECommentLen
    static final int kCDELocalOffset
    static final int kCompressStored
    static final int kCompressDeflated
    static final int kZipEntryAdj
androidx.lifecycle.ComputableLiveData$3
androidx.core.graphics.drawable.RoundedBitmapDrawable21
androidx.fragment.app.FragmentTransition:
    static boolean supportsTransition()
    private void <init>()
androidx.core.os.ParcelableCompat
androidx.loader.R$attr
androidx.core.os.BuildCompat
com.android.vending.expansion.downloader.BuildConfig
androidx.viewpager.R
androidx.core.widget.NestedScrollView$OnScrollChangeListener
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi21$5
androidx.customview.R$string
android.support.v4.media.MediaBrowserCompat$CustomActionResultReceiver:
    void <init>(java.lang.String,android.os.Bundle,android.support.v4.media.MediaBrowserCompat$CustomActionCallback,android.os.Handler)
androidx.media.MediaBrowserServiceCompat$4
androidx.media.app.NotificationCompat$DecoratedMediaCustomViewStyle
android.support.v4.media.session.MediaControllerCompatApi21$TransportControls
androidx.legacy.coreutils.R$id
androidx.customview.view.AbsSavedState$1
androidx.drawerlayout.R$dimen
androidx.legacy.app.FragmentStatePagerAdapter
androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi26
android.support.v4.media.MediaDescriptionCompatApi23$Builder:
    private void <init>()
androidx.coordinatorlayout.widget.CoordinatorLayout$HierarchyChangeListener
androidx.legacy.app.ActionBarDrawerToggle$Delegate
com.google.android.apps.internal.games.memoryadvice.MemoryWatcher
android.support.v4.media.session.MediaSessionCompatApi21$Callback
android.support.v4.media.session.MediaControllerCompat$TransportControlsApi21
androidx.drawerlayout.widget.DrawerLayout$SavedState
androidx.core.math.MathUtils
androidx.core.os.TraceCompat
androidx.core.app.ActivityCompat:
    protected void <init>()
    public static void setPermissionCompatDelegate(androidx.core.app.ActivityCompat$PermissionCompatDelegate)
    public static boolean invalidateOptionsMenu(android.app.Activity)
    public static void finishAffinity(android.app.Activity)
    public static android.net.Uri getReferrer(android.app.Activity)
    public static android.view.View requireViewById(android.app.Activity,int)
    public static androidx.core.view.DragAndDropPermissionsCompat requestDragAndDropPermissions(android.app.Activity,android.view.DragEvent)
androidx.viewpager.widget.PagerTitleStrip$SingleLineAllCapsTransform
androidx.core.widget.ContentLoadingProgressBar$1
androidx.viewpager.widget.ViewPager$PagerObserver
androidx.core.util.ObjectsCompat
androidx.annotation.WorkerThread
com.google.android.gms.internal.zzcum:
    public final synthetic java.lang.Object zzb(android.content.SharedPreferences)
    public final synthetic java.lang.Object zzkt(java.lang.String)
com.YourCompany.CapstoneProject.R$layout
androidx.coordinatorlayout.R$integer
androidx.media.MediaSessionManagerImplApi28$RemoteUserInfoImplApi28
androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory
androidx.fragment.app.FragmentTabHost$SavedState$1
com.google.android.play.core.splitinstall.b:
    private void <init>()
androidx.core.app.ServiceCompat$StopForegroundFlags
androidx.loader.R$style
androidx.core.net.ConnectivityManagerCompat
com.google.android.vending.expansion.downloader.impl.DownloadsDB$MetadataColumns:
    public void <init>()
    public static final java.lang.String APKVERSION
    public static final java.lang.String DOWNLOAD_STATUS
    public static final java.lang.String FLAGS
    public static final java.lang.String TABLE_NAME
    public static final java.lang.String _ID
androidx.core.content.res.ResourcesCompat$FontCallback$2
androidx.customview.R$styleable
android.support.v4.media.MediaBrowserCompat$ServiceBinderWrapper
com.android.vending.expansion.downloader.R
androidx.media.R$integer
androidx.core.app.JobIntentService$JobServiceEngineImpl$WrapperWorkItem
androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14
androidx.core.app.NotificationCompatSideChannelService$NotificationSideChannelStub
androidx.drawerlayout.R$integer
androidx.core.content.SharedPreferencesCompat
android.support.v4.media.session.PlaybackStateCompat$RepeatMode
androidx.drawerlayout.widget.DrawerLayout$SavedState$1
androidx.core.hardware.fingerprint.FingerprintManagerCompat
androidx.lifecycle.livedata.R
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$MediaServiceConnection
androidx.viewpager.widget.PagerTabStrip$2
android.support.v4.media.session.MediaControllerCompatApi23$TransportControls
androidx.fragment.app.BackStackRecord:
    public int getId()
    public int getBreadCrumbTitleRes()
    public int getBreadCrumbShortTitleRes()
    public java.lang.CharSequence getBreadCrumbTitle()
    public java.lang.CharSequence getBreadCrumbShortTitle()
    public androidx.fragment.app.FragmentTransaction add(int,androidx.fragment.app.Fragment)
    public androidx.fragment.app.FragmentTransaction add(int,androidx.fragment.app.Fragment,java.lang.String)
    public androidx.fragment.app.FragmentTransaction replace(int,androidx.fragment.app.Fragment)
    public androidx.fragment.app.FragmentTransaction replace(int,androidx.fragment.app.Fragment,java.lang.String)
    public androidx.fragment.app.FragmentTransaction hide(androidx.fragment.app.Fragment)
    public androidx.fragment.app.FragmentTransaction show(androidx.fragment.app.Fragment)
    public androidx.fragment.app.FragmentTransaction detach(androidx.fragment.app.Fragment)
    public androidx.fragment.app.FragmentTransaction attach(androidx.fragment.app.Fragment)
    public androidx.fragment.app.FragmentTransaction setPrimaryNavigationFragment(androidx.fragment.app.Fragment)
    public androidx.fragment.app.FragmentTransaction setCustomAnimations(int,int)
    public androidx.fragment.app.FragmentTransaction setCustomAnimations(int,int,int,int)
    public androidx.fragment.app.FragmentTransaction setTransition(int)
    public androidx.fragment.app.FragmentTransaction addSharedElement(android.view.View,java.lang.String)
    public androidx.fragment.app.FragmentTransaction setTransitionStyle(int)
    public androidx.fragment.app.FragmentTransaction addToBackStack(java.lang.String)
    public boolean isAddToBackStackAllowed()
    public androidx.fragment.app.FragmentTransaction setBreadCrumbTitle(int)
    public androidx.fragment.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence)
    public androidx.fragment.app.FragmentTransaction setBreadCrumbShortTitle(int)
    public androidx.fragment.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence)
    public androidx.fragment.app.FragmentTransaction runOnCommit(java.lang.Runnable)
    public void commitNowAllowingStateLoss()
    public androidx.fragment.app.FragmentTransaction setReorderingAllowed(boolean)
    public androidx.fragment.app.FragmentTransaction setAllowOptimization(boolean)
    public int getTransition()
    public int getTransitionStyle()
    public boolean isEmpty()
    static final java.lang.String TAG
    static final int OP_NULL
    static final int OP_ADD
    static final int OP_REPLACE
    static final int OP_REMOVE
    static final int OP_HIDE
    static final int OP_SHOW
    static final int OP_DETACH
    static final int OP_ATTACH
    static final int OP_SET_PRIMARY_NAV
    static final int OP_UNSET_PRIMARY_NAV
androidx.media.AudioAttributesCompat$AudioManagerHidden
android.support.v4.media.session.PlaybackStateCompat$ShuffleMode
androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl$4
androidx.legacy.coreutils.R$color
com.google.android.gms.internal.zzbel:
    public void zzo(com.google.android.gms.common.api.Status)
com.android.vending.expansion.downloader.R$id
androidx.versionedparcelable.VersionedParcel$ParcelException
android.support.v4.media.session.MediaSessionCompatApi23
androidx.core.view.ViewPropertyAnimatorCompat$1
androidx.viewpager.widget.ViewPager$OnPageChangeListener
androidx.core.app.SharedElementCallback$OnSharedElementsReadyListener:
    public abstract void onSharedElementsReady()
androidx.core.view.MenuCompat
androidx.lifecycle.Transformations
androidx.swiperefreshlayout.R$layout
androidx.customview.R$integer
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi21
android.support.v4.media.session.IMediaSession$Stub$Proxy:
    public java.lang.String getInterfaceDescriptor()
    public void sendCommand(java.lang.String,android.os.Bundle,android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper)
    public boolean sendMediaButton(android.view.KeyEvent)
    public void unregisterCallbackListener(android.support.v4.media.session.IMediaControllerCallback)
    public boolean isTransportControlEnabled()
    public java.lang.String getPackageName()
    public java.lang.String getTag()
    public android.app.PendingIntent getLaunchPendingIntent()
    public long getFlags()
    public android.support.v4.media.session.ParcelableVolumeInfo getVolumeAttributes()
    public void adjustVolume(int,int,java.lang.String)
    public void setVolumeTo(int,int,java.lang.String)
    public android.support.v4.media.MediaMetadataCompat getMetadata()
    public android.support.v4.media.session.PlaybackStateCompat getPlaybackState()
    public java.util.List getQueue()
    public java.lang.CharSequence getQueueTitle()
    public android.os.Bundle getExtras()
    public int getRatingType()
    public boolean isCaptioningEnabled()
    public int getRepeatMode()
    public boolean isShuffleModeEnabledRemoved()
    public int getShuffleMode()
    public void addQueueItem(android.support.v4.media.MediaDescriptionCompat)
    public void addQueueItemAt(android.support.v4.media.MediaDescriptionCompat,int)
    public void removeQueueItem(android.support.v4.media.MediaDescriptionCompat)
    public void removeQueueItemAt(int)
    public void prepare()
    public void prepareFromMediaId(java.lang.String,android.os.Bundle)
    public void prepareFromSearch(java.lang.String,android.os.Bundle)
    public void prepareFromUri(android.net.Uri,android.os.Bundle)
    public void play()
    public void playFromMediaId(java.lang.String,android.os.Bundle)
    public void playFromSearch(java.lang.String,android.os.Bundle)
    public void playFromUri(android.net.Uri,android.os.Bundle)
    public void skipToQueueItem(long)
    public void pause()
    public void stop()
    public void next()
    public void previous()
    public void fastForward()
    public void rewind()
    public void seekTo(long)
    public void rate(android.support.v4.media.RatingCompat)
    public void rateWithExtras(android.support.v4.media.RatingCompat,android.os.Bundle)
    public void setCaptioningEnabled(boolean)
    public void setRepeatMode(int)
    public void setShuffleModeEnabledRemoved(boolean)
    public void setShuffleMode(int)
    public void sendCustomAction(java.lang.String,android.os.Bundle)
androidx.core.app.TaskStackBuilder
android.support.v4.media.MediaBrowserCompatApi21$ConnectionCallbackProxy
androidx.legacy.v13.R$dimen
androidx.slidingpanelayout.R$integer
androidx.coordinatorlayout.widget.CoordinatorLayout$ViewElevationComparator
androidx.interpolator.view.animation.FastOutSlowInInterpolator
com.YourCompany.CapstoneProject.R
androidx.slidingpanelayout.R$drawable
androidx.loader.R$dimen
androidx.core.provider.SelfDestructiveThread$3
androidx.lifecycle.Transformations$2$1
androidx.viewpager.widget.PagerTitleStrip$PageListener
com.android.billingclient.api.PurchaseHistoryRecord
androidx.legacy.app.FragmentTabHost$SavedState$1
androidx.media.MediaBrowserServiceCompatApi23$ServiceCompatProxy
androidx.core.widget.NestedScrollView$SavedState
androidx.annotation.RequiresFeature
android.support.v4.media.session.MediaControllerCompat$TransportControls
androidx.media.AudioAttributesCompat$Builder
androidx.core.os.ParcelCompat
androidx.core.view.ViewPropertyAnimatorUpdateListener
android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi21
androidx.customview.widget.ViewDragHelper$Callback
androidx.core.R$id:
    private void <init>()
androidx.viewpager.widget.PagerTabStrip$1
androidx.core.content.PermissionChecker$PermissionResult
androidx.customview.R$drawable
androidx.core.view.WindowCompat
android.support.v4.media.session.PlaybackStateCompat$CustomAction:
    public java.lang.Object getCustomAction()
    public java.lang.String getAction()
    public java.lang.CharSequence getName()
    public int getIcon()
    public android.os.Bundle getExtras()
com.android.billingclient.api.zzn
androidx.core.os.LocaleListHelper
androidx.fragment.R
androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplBase
com.google.androidgamesdk.SwappyDisplayManager
com.google.androidgamesdk.SwappyDisplayManager$LooperThread
androidx.core.content.SharedPreferencesCompat$EditorCompat$Helper
androidx.core.view.DragStartHelper$1
androidx.slidingpanelayout.widget.SlidingPaneLayout$PanelSlideListener
androidx.media.MediaBrowserServiceCompatApi21$MediaBrowserServiceAdaptor
androidx.legacy.widget.Space
com.google.android.vending.expansion.downloader.DownloaderServiceMarshaller:
    public void <init>()
    public static final int MSG_REQUEST_ABORT_DOWNLOAD
    public static final int MSG_REQUEST_PAUSE_DOWNLOAD
    public static final int MSG_SET_DOWNLOAD_FLAGS
    public static final int MSG_REQUEST_CONTINUE_DOWNLOAD
    public static final int MSG_REQUEST_DOWNLOAD_STATE
    public static final int MSG_REQUEST_CLIENT_UPDATE
    public static final java.lang.String PARAMS_FLAGS
    public static final java.lang.String PARAM_MESSENGER
androidx.customview.widget.FocusStrategy
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$MediaServiceConnection$2
androidx.core.provider.FontsContractCompat$FontFamilyResult
androidx.core.R$style
android.support.v4.media.session.PlaybackStateCompat$Actions
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$7
androidx.viewpager.R$styleable
androidx.core.app.JobIntentService$CompatWorkEnqueuer
androidx.swiperefreshlayout.R$string
androidx.asynclayoutinflater.R$dimen
androidx.media.MediaSessionManagerImplBase
androidx.core.view.ViewCompat$FocusDirection
androidx.annotation.StyleableRes
androidx.media.AudioAttributesCompat:
    void <init>(androidx.media.AudioAttributesImpl)
    public static androidx.media.AudioAttributesCompat wrap(java.lang.Object)
    public static androidx.media.AudioAttributesCompat fromBundle(android.os.Bundle)
    static int usageForStreamType(int)
    public static void setForceLegacyBehavior(boolean)
    static int toVolumeStreamType(boolean,androidx.media.AudioAttributesCompat)
    public int getVolumeControlStream()
    public java.lang.Object unwrap()
    public int getLegacyStreamType()
    public int getContentType()
    public int getUsage()
    public int getFlags()
    public android.os.Bundle toBundle()
    int getRawLegacyStreamType()
    private static final java.lang.String TAG
    public static final int CONTENT_TYPE_UNKNOWN
    public static final int CONTENT_TYPE_SPEECH
    public static final int CONTENT_TYPE_MUSIC
    public static final int CONTENT_TYPE_MOVIE
    public static final int CONTENT_TYPE_SONIFICATION
    public static final int USAGE_UNKNOWN
    public static final int USAGE_MEDIA
    public static final int USAGE_VOICE_COMMUNICATION
    public static final int USAGE_VOICE_COMMUNICATION_SIGNALLING
    public static final int USAGE_ALARM
    public static final int USAGE_NOTIFICATION
    public static final int USAGE_NOTIFICATION_RINGTONE
    public static final int USAGE_NOTIFICATION_COMMUNICATION_REQUEST
    public static final int USAGE_NOTIFICATION_COMMUNICATION_INSTANT
    public static final int USAGE_NOTIFICATION_COMMUNICATION_DELAYED
    public static final int USAGE_NOTIFICATION_EVENT
    public static final int USAGE_ASSISTANCE_ACCESSIBILITY
    public static final int USAGE_ASSISTANCE_NAVIGATION_GUIDANCE
    public static final int USAGE_ASSISTANCE_SONIFICATION
    public static final int USAGE_GAME
    private static final int USAGE_VIRTUAL_SOURCE
    public static final int USAGE_ASSISTANT
    private static final int SUPPRESSIBLE_NOTIFICATION
    private static final int SUPPRESSIBLE_CALL
    static boolean sForceLegacyBehavior
    public static final int FLAG_AUDIBILITY_ENFORCED
    static final int FLAG_SECURE
    static final int FLAG_SCO
    static final int FLAG_BEACON
    public static final int FLAG_HW_AV_SYNC
    static final int FLAG_HW_HOTWORD
    static final int FLAG_BYPASS_INTERRUPTION_POLICY
    static final int FLAG_BYPASS_MUTE
    static final int FLAG_LOW_LATENCY
    static final int FLAG_DEEP_BUFFER
    static final int FLAG_ALL
    static final int FLAG_ALL_PUBLIC
    static final int INVALID_STREAM_TYPE
    static final java.lang.String AUDIO_ATTRIBUTES_FRAMEWORKS
    static final java.lang.String AUDIO_ATTRIBUTES_USAGE
    static final java.lang.String AUDIO_ATTRIBUTES_CONTENT_TYPE
    static final java.lang.String AUDIO_ATTRIBUTES_FLAGS
    static final java.lang.String AUDIO_ATTRIBUTES_LEGACY_STREAM_TYPE
androidx.core.provider.FontsContractCompat$4
androidx.core.text.HtmlCompat
androidx.core.view.accessibility.AccessibilityRecordCompat
androidx.slidingpanelayout.widget.SlidingPaneLayout
androidx.versionedparcelable.VersionedParcelStream$FieldBuffer
com.google.android.gms.internal.zzfel:
    private static void zzb(java.lang.Iterable,java.util.List)
    protected static void zza(java.lang.Iterable,java.util.List)
com.epicgames.ue4.WebViewControl:
    private static final java.lang.String TAG
androidx.core.provider.FontsContractCompat$4$4
android.support.v4.media.MediaBrowserCompatApi26$SubscriptionCallbackProxy
androidx.annotation.FloatRange
androidx.swiperefreshlayout.R$color
com.YourCompany.CapstoneProject.R$string
androidx.media.MediaBrowserServiceCompatApi21$BrowserRoot
androidx.core.view.ViewPropertyAnimatorCompat
androidx.core.content.res.ComplexColorCompat
androidx.fragment.app.FragmentTabHost
android.support.v4.media.MediaBrowserCompat$ItemReceiver:
    void <init>(java.lang.String,android.support.v4.media.MediaBrowserCompat$ItemCallback,android.os.Handler)
androidx.viewpager.widget.ViewPager$ViewPositionComparator
android.support.v4.media.session.MediaSessionCompatApi23$Callback
android.support.v4.media.session.MediaControllerCompatApi23
androidx.customview.widget.ExploreByTouchHelper
androidx.annotation.CheckResult
androidx.core.graphics.drawable.WrappedDrawableApi21:
    private static final java.lang.String TAG
androidx.core.app.NotificationCompat$Action:
    public void <init>(int,java.lang.CharSequence,android.app.PendingIntent)
    void <init>(int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle,androidx.core.app.RemoteInput[],androidx.core.app.RemoteInput[],boolean,int,boolean)
    public static final int SEMANTIC_ACTION_NONE
    public static final int SEMANTIC_ACTION_REPLY
    public static final int SEMANTIC_ACTION_MARK_AS_READ
    public static final int SEMANTIC_ACTION_MARK_AS_UNREAD
    public static final int SEMANTIC_ACTION_DELETE
    public static final int SEMANTIC_ACTION_ARCHIVE
    public static final int SEMANTIC_ACTION_MUTE
    public static final int SEMANTIC_ACTION_UNMUTE
    public static final int SEMANTIC_ACTION_THUMBS_UP
    public static final int SEMANTIC_ACTION_THUMBS_DOWN
    public static final int SEMANTIC_ACTION_CALL
    static final java.lang.String EXTRA_SHOWS_USER_INTERFACE
    static final java.lang.String EXTRA_SEMANTIC_ACTION
androidx.core.graphics.TypefaceCompatBaseImpl$1
com.epicgames.ue4.GooglePlayStoreHelper:
    public boolean onActivityResult(int,int,android.content.Intent)
com.google.android.vending.expansion.downloader.impl.DownloadThread$State:
    public java.lang.String mNewUri
androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi21$1
com.google.android.vending.expansion.downloader.impl.DownloaderService:
    public static boolean isStatusInformational(int)
    public static boolean isStatusSuccess(int)
    public static boolean isStatusClientError(int)
    public static boolean isStatusServerError(int)
    public boolean isWiFi()
    public java.lang.String getLogMessageForNetworkError(int)
    private static final java.lang.String LOG_TAG
    public static final int NETWORK_OK
    public static final int NETWORK_NO_CONNECTION
    public static final int NETWORK_UNUSABLE_DUE_TO_SIZE
    public static final int NETWORK_RECOMMENDED_UNUSABLE_DUE_TO_SIZE
    public static final int NETWORK_CANNOT_USE_ROAMING
    public static final int NETWORK_TYPE_DISALLOWED_BY_REQUESTOR
    public static final java.lang.String EXTRA_IS_WIFI_REQUIRED
    public static final java.lang.String EXTRA_FILE_NAME
    public static final java.lang.String EXTRA_STATUS_STATE
    public static final java.lang.String EXTRA_STATUS_TOTAL_SIZE
    public static final java.lang.String EXTRA_STATUS_CURRENT_FILE_SIZE
    public static final java.lang.String EXTRA_STATUS_TOTAL_PROGRESS
    public static final java.lang.String EXTRA_STATUS_CURRENT_PROGRESS
    public static final java.lang.String ACTION_DOWNLOADS_CHANGED
    public static final java.lang.String ACTION_DOWNLOAD_COMPLETE
    public static final java.lang.String ACTION_DOWNLOAD_STATUS
    public static final int STATUS_PENDING
    public static final int STATUS_RUNNING
    public static final int STATUS_PAUSED_BY_APP
    public static final int STATUS_WAITING_TO_RETRY
    public static final int STATUS_WAITING_FOR_NETWORK
    public static final int STATUS_QUEUED_FOR_WIFI_OR_CELLULAR_PERMISSION
    public static final int STATUS_QUEUED_FOR_WIFI
    public static final int STATUS_SUCCESS
    public static final int STATUS_FORBIDDEN
    public static final int STATUS_FILE_DELIVERED_INCORRECTLY
    public static final int STATUS_FILE_ALREADY_EXISTS_ERROR
    public static final int STATUS_CANNOT_RESUME
    public static final int STATUS_CANCELED
    public static final int STATUS_UNKNOWN_ERROR
    public static final int STATUS_FILE_ERROR
    public static final int STATUS_UNHANDLED_REDIRECT
    public static final int STATUS_UNHANDLED_HTTP_CODE
    public static final int STATUS_HTTP_DATA_ERROR
    public static final int STATUS_HTTP_EXCEPTION
    public static final int STATUS_TOO_MANY_REDIRECTS
    public static final int STATUS_INSUFFICIENT_SPACE_ERROR
    public static final int STATUS_DEVICE_NOT_FOUND_ERROR
    public static final int CONTROL_RUN
    public static final int CONTROL_PAUSED
    public static final int VISIBILITY_VISIBLE
    public static final int VISIBILITY_VISIBLE_NOTIFY_COMPLETED
    public static final int VISIBILITY_HIDDEN
    public static final int NETWORK_MOBILE
    public static final int NETWORK_WIFI
    private static final java.lang.String TEMP_EXT
    public static final int NO_DOWNLOAD_REQUIRED
    public static final int LVL_CHECK_REQUIRED
    public static final int DOWNLOAD_REQUIRED
    public static final java.lang.String EXTRA_PACKAGE_NAME
    public static final java.lang.String EXTRA_PENDING_INTENT
    public static final java.lang.String EXTRA_MESSAGE_HANDLER
    private static final float SMOOTHING_FACTOR
androidx.core.content.res.ConfigurationHelper
com.android.billingclient.BuildConfig
androidx.core.app.TaskStackBuilder$SupportParentable
androidx.viewpager.widget.ViewPager
androidx.core.app.FrameMetricsAggregator
com.android.vending.expansion.downloader.R$string
android.support.v4.media.session.MediaSessionCompatApi24$CallbackProxy
androidx.fragment.R$drawable
com.epicgames.ue4.VideoDecoder$BitmapRenderer:
    private void glWarn(java.lang.String)
    private static final int FLOAT_SIZE_BYTES
    private static final int TRIANGLE_VERTICES_DATA_STRIDE_BYTES
    private static final int TRIANGLE_VERTICES_DATA_POS_OFFSET
    private static final int TRIANGLE_VERTICES_DATA_UV_OFFSET
androidx.core.graphics.PaintCompat
androidx.cursoradapter.widget.CursorFilter$CursorFilterClient
androidx.viewpager.R$layout
com.google.android.vending.expansion.downloader.DownloaderClientMarshaller:
    public void <init>()
    public static final int MSG_ONDOWNLOADSTATE_CHANGED
    public static final int MSG_ONDOWNLOADPROGRESS
    public static final int MSG_ONSERVICECONNECTED
    public static final java.lang.String PARAM_NEW_STATE
    public static final java.lang.String PARAM_PROGRESS
    public static final java.lang.String PARAM_MESSENGER
    public static final int NO_DOWNLOAD_REQUIRED
    public static final int LVL_CHECK_REQUIRED
    public static final int DOWNLOAD_REQUIRED
androidx.legacy.coreutils.R
androidx.cursoradapter.widget.CursorFilter
android.support.v4.media.session.PlaybackStateCompat$ErrorCode
androidx.customview.widget.ExploreByTouchHelper$2
androidx.viewpager.R$string
androidx.fragment.app.FragmentPagerAdapter
androidx.legacy.coreui.R$styleable
androidx.slidingpanelayout.widget.SlidingPaneLayout$SavedState$1
androidx.annotation.IntegerRes
androidx.core.R
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat
android.support.v4.media.session.MediaControllerCompat$PlaybackInfo:
    public int getPlaybackType()
    public int getAudioStream()
    public int getVolumeControl()
    public int getMaxVolume()
    public int getCurrentVolume()
    public static final int PLAYBACK_TYPE_LOCAL
    public static final int PLAYBACK_TYPE_REMOTE
androidx.core.view.ViewPropertyAnimatorListenerAdapter
com.android.vending.expansion.zipfile.APEZProvider
androidx.fragment.app.FragmentManagerImpl:
    public boolean executePendingTransactions()
    public void popBackStack()
    public void popBackStack(java.lang.String,int)
    public boolean popBackStackImmediate(java.lang.String,int)
    public boolean popBackStackImmediate(int,int)
    public int getBackStackEntryCount()
    public androidx.fragment.app.FragmentManager$BackStackEntry getBackStackEntryAt(int)
    public void addOnBackStackChangedListener(androidx.fragment.app.FragmentManager$OnBackStackChangedListener)
    public void removeOnBackStackChangedListener(androidx.fragment.app.FragmentManager$OnBackStackChangedListener)
    java.util.List getActiveFragments()
    int getActiveFragmentCount()
    public androidx.fragment.app.Fragment$SavedState saveFragmentInstanceState(androidx.fragment.app.Fragment)
    public boolean isDestroyed()
    public void registerFragmentLifecycleCallbacks(androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks,boolean)
    public void unregisterFragmentLifecycleCallbacks(androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks)
    static final java.lang.String TAG
    static final java.lang.String TARGET_REQUEST_CODE_STATE_TAG
    static final java.lang.String TARGET_STATE_TAG
    static final java.lang.String VIEW_STATE_TAG
    static final java.lang.String USER_VISIBLE_HINT_TAG
    static final int ANIM_DUR
    public static final int ANIM_STYLE_OPEN_ENTER
    public static final int ANIM_STYLE_OPEN_EXIT
    public static final int ANIM_STYLE_CLOSE_ENTER
    public static final int ANIM_STYLE_CLOSE_EXIT
    public static final int ANIM_STYLE_FADE_ENTER
    public static final int ANIM_STYLE_FADE_EXIT
androidx.core.content.pm.ShortcutInfoCompat
androidx.asynclayoutinflater.R$attr
androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi16
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi21$4
com.android.billingclient.api.BillingClient$BillingResponseCode
androidx.core.app.NotificationCompat$Extender
androidx.core.graphics.TypefaceCompatApi24Impl
androidx.core.view.LayoutInflaterCompat$Factory2Wrapper
android.support.v4.media.MediaBrowserCompat$SearchResultReceiver:
    void <init>(java.lang.String,android.os.Bundle,android.support.v4.media.MediaBrowserCompat$SearchCallback,android.os.Handler)
androidx.core.app.NotificationCompat$CarExtender$UnreadConversation$Builder
androidx.coordinatorlayout.widget.CoordinatorLayout
androidx.slidingpanelayout.widget.SlidingPaneLayout$AccessibilityDelegate
androidx.core.view.ViewPropertyAnimatorCompat$2
androidx.cursoradapter.widget.CursorAdapter$ChangeObserver
com.android.vending.expansion.downloader.R$layout
androidx.loader.R
androidx.viewpager.widget.ViewPager$DecorView
androidx.core.content.res.ResourcesCompat$FontCallback$1
com.android.billingclient.api.zzp
androidx.legacy.v4.R
androidx.cursoradapter.R
com.epicgames.ue4.GooglePlayLicensing$MyLicenseCheckerCallback
androidx.core.provider.FontsContractCompat
androidx.core.content.FileProvider$SimplePathStrategy:
    public java.io.File getFileForUri(android.net.Uri)
androidx.media.VolumeProviderCompat
androidx.legacy.app.FragmentCompat$FragmentCompatBaseImpl:
    public void setUserVisibleHint(android.app.Fragment,boolean)
    public boolean shouldShowRequestPermissionRationale(android.app.Fragment,java.lang.String)
androidx.slidingpanelayout.widget.SlidingPaneLayout$SavedState
androidx.core.app.AppOpsManagerCompat:
    private void <init>()
    public static int noteOp(android.content.Context,java.lang.String,int,java.lang.String)
    public static int noteOpNoThrow(android.content.Context,java.lang.String,int,java.lang.String)
    public static int noteProxyOp(android.content.Context,java.lang.String,java.lang.String)
    public static final int MODE_ALLOWED
    public static final int MODE_IGNORED
    public static final int MODE_ERRORED
    public static final int MODE_DEFAULT
androidx.core.app.Person$Builder
androidx.core.os.ParcelableCompat$ParcelableCompatCreatorHoneycombMR2
androidx.core.text.util.FindAddress$ZipRange
androidx.media.MediaBrowserServiceCompatApi26
android.support.v4.media.session.MediaSessionCompatApi22
androidx.swiperefreshlayout.widget.SwipeRefreshLayout
androidx.core.app.NotificationCompat$MessagingStyle$Message
androidx.media.MediaBrowserServiceCompat
androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl$5
androidx.core.internal.view.SupportMenu
androidx.core.view.LayoutInflaterFactory
androidx.legacy.app.FragmentTabHost$TabInfo
com.google.android.play.core.internal.a
android.support.v4.media.session.PlaybackStateCompat$MediaKeyAction
androidx.core.R$drawable
androidx.print.PrintHelper$1
androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplBase$1
androidx.core.view.InputDeviceCompat
androidx.viewpager.widget.ViewPager$SimpleOnPageChangeListener
androidx.print.PrintHelper$PrintUriAdapter
androidx.core.provider.FontRequest
androidx.media.MediaSessionManager$RemoteUserInfo
androidx.core.graphics.TypefaceCompatApi28Impl
android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MessageHandler
android.support.v4.media.MediaBrowserCompat$ItemCallback:
    public void <init>()
    final java.lang.Object mItemCallbackObj
androidx.core.view.OnApplyWindowInsetsListener
androidx.core.content.pm.PermissionInfoCompat$ProtectionFlags
com.android.billingclient.api.BillingClient$FeatureType
androidx.loader.app.LoaderManagerImpl$LoaderInfo:
    boolean isCallbackWaitingForData()
androidx.core.provider.FontsContractCompat$FontRequestCallback$FontRequestFailReason
com.epicgames.ue4.GameActivity$ConsoleKeyboardInput:
    public void <init>(com.epicgames.ue4.GameActivity,android.content.Context,android.util.AttributeSet,int)
    public void <init>(com.epicgames.ue4.GameActivity,android.content.Context,android.util.AttributeSet)
androidx.core.net.ConnectivityManagerCompat$RestrictBackgroundStatus
androidx.localbroadcastmanager.R
androidx.legacy.v13.R
androidx.versionedparcelable.VersionedParcelize
android.support.v4.media.session.PlaybackStateCompatApi21$CustomAction:
    public static java.lang.Object newInstance(java.lang.String,java.lang.CharSequence,int,android.os.Bundle)
    private void <init>()
android.support.v4.media.MediaBrowserCompatApi26$SubscriptionCallback
com.epicgames.ue4.BootCompleteReceiver
com.android.billingclient.api.zzo
androidx.lifecycle.ViewModelProvider$NewInstanceFactory
androidx.lifecycle.ViewModelProvider:
    public void <init>(androidx.lifecycle.ViewModelStoreOwner,androidx.lifecycle.ViewModelProvider$Factory)
    private static final java.lang.String DEFAULT_KEY
androidx.legacy.app.ActionBarDrawerToggle$DelegateProvider
androidx.loader.app.LoaderManagerImpl:
    public androidx.loader.content.Loader restartLoader(int,android.os.Bundle,androidx.loader.app.LoaderManager$LoaderCallbacks)
    public void destroyLoader(int)
    public androidx.loader.content.Loader getLoader(int)
    public boolean hasRunningLoaders()
    static final java.lang.String TAG
androidx.loader.app.LoaderManager:
    public static void enableDebugLogging(boolean)
    public abstract androidx.loader.content.Loader restartLoader(int,android.os.Bundle,androidx.loader.app.LoaderManager$LoaderCallbacks)
    public abstract void destroyLoader(int)
    public abstract androidx.loader.content.Loader getLoader(int)
    public boolean hasRunningLoaders()
androidx.core.provider.SelfDestructiveThread$2
androidx.loader.R$integer
androidx.core.graphics.TypefaceCompatApi26Impl
androidx.core.view.DragStartHelper$2
androidx.arch.core.util.Function
com.google.android.gms.internal.zzffy
androidx.annotation.RequiresPermission$Write
androidx.core.graphics.drawable.IconCompat:
    public static androidx.core.graphics.drawable.IconCompat createWithResource(android.content.Context,int)
    public static androidx.core.graphics.drawable.IconCompat createWithResource(android.content.res.Resources,java.lang.String,int)
    public static androidx.core.graphics.drawable.IconCompat createWithBitmap(android.graphics.Bitmap)
    public static androidx.core.graphics.drawable.IconCompat createWithAdaptiveBitmap(android.graphics.Bitmap)
    public static androidx.core.graphics.drawable.IconCompat createWithData(byte[],int,int)
    public static androidx.core.graphics.drawable.IconCompat createWithContentUri(java.lang.String)
    public static androidx.core.graphics.drawable.IconCompat createWithContentUri(android.net.Uri)
    private void <init>(int)
    private android.graphics.drawable.Drawable loadDrawableInner(android.content.Context)
    private static android.content.res.Resources getResources(android.content.Context,java.lang.String)
    public static androidx.core.graphics.drawable.IconCompat createFromBundle(android.os.Bundle)
    public static androidx.core.graphics.drawable.IconCompat createFromIcon(android.content.Context,android.graphics.drawable.Icon)
    public static androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)
    private static int getType(android.graphics.drawable.Icon)
    private static android.net.Uri getUri(android.graphics.drawable.Icon)
    static android.graphics.Bitmap createLegacyIconFromAdaptiveIcon(android.graphics.Bitmap,boolean)
    public int getType()
    public android.net.Uri getUri()
    public androidx.core.graphics.drawable.IconCompat setTint(int)
    public androidx.core.graphics.drawable.IconCompat setTintList(android.content.res.ColorStateList)
    public androidx.core.graphics.drawable.IconCompat setTintMode(android.graphics.PorterDuff$Mode)
    public android.graphics.drawable.Icon toIcon()
    public void checkResource(android.content.Context)
    public android.graphics.drawable.Drawable loadDrawable(android.content.Context)
    public void addToShortcutIntent(android.content.Intent,android.graphics.drawable.Drawable,android.content.Context)
    public android.os.Bundle toBundle()
    private static final java.lang.String TAG
    public static final int TYPE_UNKNOWN
    private static final float ADAPTIVE_ICON_INSET_FACTOR
    private static final float DEFAULT_VIEW_PORT_SCALE
    private static final float ICON_DIAMETER_FACTOR
    private static final float BLUR_FACTOR
    private static final float KEY_SHADOW_OFFSET_FACTOR
    private static final int KEY_SHADOW_ALPHA
    private static final int AMBIENT_SHADOW_ALPHA
    private static final java.lang.String EXTRA_TYPE
    private static final java.lang.String EXTRA_OBJ
    private static final java.lang.String EXTRA_INT1
    private static final java.lang.String EXTRA_INT2
    private static final java.lang.String EXTRA_TINT_LIST
    private static final java.lang.String EXTRA_TINT_MODE
androidx.legacy.v4.R$drawable
androidx.core.content.res.GradientColorInflaterCompat
android.support.v4.media.MediaBrowserCompat$MediaBrowserServiceCallbackImpl
androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener
androidx.customview.view.AbsSavedState
androidx.print.R
androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState$1
androidx.cursoradapter.widget.SimpleCursorAdapter
android.support.v4.media.MediaBrowserCompatApi21$SubscriptionCallbackProxy
androidx.core.internal.view.SupportMenuItem
androidx.interpolator.view.animation.FastOutLinearInInterpolator
androidx.customview.R$layout
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$6
androidx.asynclayoutinflater.R$styleable
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase
com.google.android.vending.expansion.downloader.impl.HttpDateTime$TimeOfDay
androidx.fragment.app.FragmentManager$BackStackEntry
androidx.drawerlayout.R
androidx.core.view.DragStartHelper
androidx.swiperefreshlayout.R
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi23
androidx.versionedparcelable.VersionedParcel:
    private void writeCollection(java.util.Collection,int)
    private int getType(java.lang.Object)
    private void writeSerializable(java.io.Serializable)
    private int readExceptionCode()
    private java.lang.Exception readException(int,java.lang.String)
    protected static java.lang.Throwable getRootCause(java.lang.Throwable)
    private java.lang.Exception createException(int,java.lang.String)
    private java.util.Collection readCollection(int,java.util.Collection)
    protected abstract void writeByteArray(byte[],int,int)
    protected abstract void writeLong(long)
    protected abstract void writeFloat(float)
    protected abstract void writeDouble(double)
    protected abstract void writeStrongBinder(android.os.IBinder)
    protected abstract void writeBoolean(boolean)
    protected abstract void writeStrongInterface(android.os.IInterface)
    protected abstract void writeBundle(android.os.Bundle)
    protected abstract long readLong()
    protected abstract float readFloat()
    protected abstract double readDouble()
    protected abstract android.os.IBinder readStrongBinder()
    protected abstract android.os.Bundle readBundle()
    protected abstract boolean readBoolean()
    public void writeStrongInterface(android.os.IInterface,int)
    public void writeBundle(android.os.Bundle,int)
    public void writeBoolean(boolean,int)
    public void writeByteArray(byte[],int,int,int)
    public void writeLong(long,int)
    public void writeFloat(float,int)
    public void writeDouble(double,int)
    public void writeStrongBinder(android.os.IBinder,int)
    public boolean readBoolean(boolean,int)
    public long readLong(long,int)
    public float readFloat(float,int)
    public double readDouble(double,int)
    public android.os.IBinder readStrongBinder(android.os.IBinder,int)
    public android.os.Bundle readBundle(android.os.Bundle,int)
    public void writeByte(byte,int)
    public void writeSize(android.util.Size,int)
    public void writeSizeF(android.util.SizeF,int)
    public void writeSparseBooleanArray(android.util.SparseBooleanArray,int)
    public void writeBooleanArray(boolean[],int)
    protected void writeBooleanArray(boolean[])
    public boolean[] readBooleanArray(boolean[],int)
    protected boolean[] readBooleanArray()
    public void writeCharArray(char[],int)
    public char[] readCharArray(char[],int)
    public void writeIntArray(int[],int)
    protected void writeIntArray(int[])
    public int[] readIntArray(int[],int)
    protected int[] readIntArray()
    public void writeLongArray(long[],int)
    protected void writeLongArray(long[])
    public long[] readLongArray(long[],int)
    protected long[] readLongArray()
    public void writeFloatArray(float[],int)
    protected void writeFloatArray(float[])
    public float[] readFloatArray(float[],int)
    protected float[] readFloatArray()
    public void writeDoubleArray(double[],int)
    protected void writeDoubleArray(double[])
    public double[] readDoubleArray(double[],int)
    protected double[] readDoubleArray()
    public void writeSet(java.util.Set,int)
    public void writeList(java.util.List,int)
    public void writeArray(java.lang.Object[],int)
    protected void writeArray(java.lang.Object[])
    public void writeSerializable(java.io.Serializable,int)
    public void writeException(java.lang.Exception,int)
    protected void writeNoException()
    public java.lang.Exception readException(java.lang.Exception,int)
    public byte readByte(byte,int)
    public android.util.Size readSize(android.util.Size,int)
    public android.util.SizeF readSizeF(android.util.SizeF,int)
    public android.util.SparseBooleanArray readSparseBooleanArray(android.util.SparseBooleanArray,int)
    public java.util.Set readSet(java.util.Set,int)
    public java.util.List readList(java.util.List,int)
    public java.lang.Object[] readArray(java.lang.Object[],int)
    protected java.lang.Object[] readArray(java.lang.Object[])
    protected java.io.Serializable readSerializable()
    private static final java.lang.String TAG
    private static final int EX_SECURITY
    private static final int EX_BAD_PARCELABLE
    private static final int EX_ILLEGAL_ARGUMENT
    private static final int EX_NULL_POINTER
    private static final int EX_ILLEGAL_STATE
    private static final int EX_NETWORK_MAIN_THREAD
    private static final int EX_UNSUPPORTED_OPERATION
    private static final int EX_PARCELABLE
    private static final int TYPE_VERSIONED_PARCELABLE
    private static final int TYPE_PARCELABLE
    private static final int TYPE_SERIALIZABLE
    private static final int TYPE_STRING
    private static final int TYPE_BINDER
androidx.core.provider.FontsContractCompat$3
androidx.core.text.TextDirectionHeuristicCompat
androidx.media.MediaBrowserServiceCompat$BrowserRoot
androidx.customview.widget.ExploreByTouchHelper$1
androidx.core.app.SharedElementCallback:
    public void <init>()
    private static android.graphics.Bitmap createDrawableBitmap(android.graphics.drawable.Drawable)
    private android.graphics.Matrix mTempMatrix
    private static final int MAX_IMAGE_SIZE
    private static final java.lang.String BUNDLE_SNAPSHOT_BITMAP
    private static final java.lang.String BUNDLE_SNAPSHOT_IMAGE_SCALETYPE
    private static final java.lang.String BUNDLE_SNAPSHOT_IMAGE_MATRIX
androidx.core.graphics.drawable.IconCompat$IconType
androidx.legacy.v13.R$attr
androidx.swiperefreshlayout.R$id
android.support.v4.media.MediaMetadataCompatApi21:
    public static java.util.Set keySet(java.lang.Object)
    public static android.graphics.Bitmap getBitmap(java.lang.Object,java.lang.String)
    public static long getLong(java.lang.Object,java.lang.String)
    public static java.lang.Object getRating(java.lang.Object,java.lang.String)
    public static java.lang.CharSequence getText(java.lang.Object,java.lang.String)
    public static java.lang.Object createFromParcel(android.os.Parcel)
    private void <init>()
androidx.core.view.PointerIconCompat
androidx.legacy.v4.R$string
androidx.annotation.ColorInt
androidx.legacy.v4.R$layout
androidx.viewpager.widget.ViewPager$ItemInfo
com.google.android.apps.internal.games.memoryadvice.MemoryMonitor:
    public void setOnTrim(int)
    private static final long BYTES_IN_KILOBYTE
    private static final long BYTES_IN_MEGABYTE
androidx.viewpager.widget.ViewPager$1
androidx.media.VolumeProviderCompat$Callback
androidx.core.app.ActivityOptionsCompat
androidx.customview.widget.FocusStrategy$BoundsAdapter
com.android.billingclient.api.BillingClientImpl:
    private void <init>(android.app.Activity,boolean,java.lang.String)
    private void <init>(java.lang.String)
    private void startConnection(long)
    private void launchPriceChangeConfirmationFlow(android.app.Activity,com.android.billingclient.api.PriceChangeFlowParams,long)
    private int launchBillingFlowCpp(android.app.Activity,com.android.billingclient.api.BillingFlowParams)
    private final com.android.billingclient.api.BillingClientImpl$zzb zza(java.lang.String)
    static synthetic com.android.billingclient.api.BillingClientImpl$zzb zzb(com.android.billingclient.api.BillingClientImpl,java.lang.String)
    static synthetic java.lang.String zzd(com.android.billingclient.api.BillingClientImpl)
    public void endConnection()
    public void launchPriceChangeConfirmationFlow(android.app.Activity,com.android.billingclient.api.PriceChangeFlowParams,com.android.billingclient.api.PriceChangeConfirmationListener)
    public void queryPurchaseHistoryAsync(java.lang.String,com.android.billingclient.api.PurchaseHistoryResponseListener)
    public void acknowledgePurchase(com.android.billingclient.api.AcknowledgePurchaseParams,com.android.billingclient.api.AcknowledgePurchaseResponseListener)
androidx.core.text.PrecomputedTextCompat
androidx.media.MediaBrowserServiceCompatApi26$ServiceCompatProxy
androidx.media.MediaBrowserServiceCompatApi26$ResultWrapper
com.google.android.vending.licensing.LicenseChecker:
    public synchronized void onDestroy()
    private static final java.lang.String TAG
    private static final java.lang.String KEY_FACTORY_ALGORITHM
    private static final int TIMEOUT_MS
    private static final boolean DEBUG_LICENSE_ERROR
androidx.drawerlayout.R$style
androidx.core.app.NotificationCompat$StreamType
com.google.firebase.FirebaseException
androidx.core.view.LayoutInflaterCompat:
    private void <init>()
    public static void setFactory(android.view.LayoutInflater,androidx.core.view.LayoutInflaterFactory)
    public static androidx.core.view.LayoutInflaterFactory getFactory(android.view.LayoutInflater)
    private static final java.lang.String TAG
androidx.core.view.MotionEventCompat
androidx.core.app.JobIntentService$CompatJobEngine
androidx.core.view.NestedScrollingChildHelper
androidx.core.view.DragAndDropPermissionsCompat
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$MediaServiceConnection$1
androidx.legacy.v4.R$styleable
androidx.customview.R$dimen
androidx.core.provider.FontsContractCompat$4$5
androidx.asynclayoutinflater.R$style
androidx.core.content.ContextCompat$LegacyServiceMapHolder
androidx.drawerlayout.R$attr
android.support.v4.media.session.MediaSessionCompat$OnActiveChangeListener
com.google.android.gms.common.internal.zzd:
    protected void <init>(android.content.Context,android.os.Looper,int,com.google.android.gms.common.internal.zzf,com.google.android.gms.common.internal.zzg,java.lang.String)
com.android.billingclient.api.BillingClient:
    public abstract void endConnection()
    public abstract void launchPriceChangeConfirmationFlow(android.app.Activity,com.android.billingclient.api.PriceChangeFlowParams,com.android.billingclient.api.PriceChangeConfirmationListener)
    public abstract void queryPurchaseHistoryAsync(java.lang.String,com.android.billingclient.api.PurchaseHistoryResponseListener)
    public abstract void acknowledgePurchase(com.android.billingclient.api.AcknowledgePurchaseParams,com.android.billingclient.api.AcknowledgePurchaseResponseListener)
androidx.annotation.Size
androidx.cursoradapter.widget.SimpleCursorAdapter$CursorToStringConverter
androidx.coordinatorlayout.R$string
androidx.legacy.coreui.R$layout
androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl$2
com.android.billingclient.api.zzd:
    final void zzc()
android.support.v4.media.session.MediaControllerCompatApi24
android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase
androidx.media.MediaBrowserServiceCompatApi26$MediaBrowserServiceAdaptor
androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter
androidx.annotation.StringDef
androidx.core.graphics.TypefaceCompatUtil
com.epicgames.ue4.MediaPlayer14$OESTextureRenderer:
    public android.graphics.SurfaceTexture getSurfaceTexture()
androidx.versionedparcelable.ParcelUtils
com.google.android.vending.expansion.downloader.impl.DownloadThread$RetryDownload:
    private void <init>(com.google.android.vending.expansion.downloader.impl.DownloadThread)
    final synthetic com.google.android.vending.expansion.downloader.impl.DownloadThread this$0
    private static final long serialVersionUID
androidx.asynclayoutinflater.view.AsyncLayoutInflater$1
androidx.lifecycle.ViewModelProviders
com.google.android.vending.expansion.downloader.Constants:
    public void <init>()
    public static final java.lang.String TAG
    public static final java.lang.String ACTION_RETRY
    public static final java.lang.String ACTION_OPEN
    public static final java.lang.String ACTION_LIST
    public static final java.lang.String ACTION_HIDE
    public static final java.lang.String FILENAME_SEQUENCE_SEPARATOR
    public static final java.lang.String DEFAULT_USER_AGENT
    public static final int BUFFER_SIZE
    public static final int MIN_PROGRESS_STEP
    public static final long MIN_PROGRESS_TIME
    public static final int MAX_DOWNLOADS
    public static final int MAX_RETRIES
    public static final int MIN_RETRY_AFTER
    public static final int MAX_RETRY_AFTER
    public static final int MAX_REDIRECTS
    public static final int RETRY_FIRST_DELAY
    public static final boolean LOGX
    public static final boolean LOGV
    private static final boolean LOCAL_LOGVV
    public static final boolean LOGVV
    public static final int STATUS_SUCCESS
    public static final int STATUS_BAD_REQUEST
    public static final int STATUS_NOT_ACCEPTABLE
    public static final int STATUS_LENGTH_REQUIRED
    public static final int STATUS_PRECONDITION_FAILED
    public static final int MIN_ARTIFICIAL_ERROR_STATUS
    public static final int STATUS_FILE_ALREADY_EXISTS_ERROR
    public static final int STATUS_CANNOT_RESUME
    public static final int STATUS_CANCELED
    public static final int STATUS_UNKNOWN_ERROR
    public static final int STATUS_FILE_ERROR
    public static final int STATUS_UNHANDLED_REDIRECT
    public static final int STATUS_UNHANDLED_HTTP_CODE
    public static final int STATUS_HTTP_DATA_ERROR
    public static final int STATUS_HTTP_EXCEPTION
    public static final int STATUS_TOO_MANY_REDIRECTS
    public static final int STATUS_INSUFFICIENT_SPACE_ERROR
    public static final int STATUS_DEVICE_NOT_FOUND_ERROR
    public static final long WATCHDOG_WAKE_TIMER
    public static final long ACTIVE_THREAD_WATCHDOG
com.google.android.vending.licensing.StrictPolicy
androidx.core.view.accessibility.AccessibilityEventCompat
com.google.android.vending.expansion.downloader.Helpers:
    private void <init>()
    static java.lang.String parseContentDisposition(java.lang.String)
    static void deleteFile(java.lang.String)
    public static java.lang.String getDownloadProgressStringNotification(long,long)
    public static java.lang.String getDownloadProgressPercent(long,long)
    public static int getFileStatus(android.content.Context,java.lang.String)
    public static boolean canWriteOBBFile(android.content.Context)
    public static final int FS_READABLE
    public static final int FS_DOES_NOT_EXIST
    public static final int FS_CANNOT_READ
com.android.billingclient.api.PriceChangeFlowParams$Builder
androidx.core.content.res.FontResourcesParserCompat
com.google.firebase.zzb
androidx.fragment.app.FragmentActivity$HostCallbacks:
    public void onStartActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int)
androidx.core.hardware.display.DisplayManagerCompat
androidx.core.app.FrameMetricsAggregator$MetricType
androidx.core.widget.TextViewCompat
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$1
androidx.core.graphics.PathParser
com.epicgames.ue4.DownloadShim:
    public void <init>()
    public static com.YourCompany.CapstoneProject.OBBDownloaderService DownloaderService
    public static com.YourCompany.CapstoneProject.DownloaderActivity DownloadActivity
androidx.core.graphics.TypefaceCompatBaseImpl$2
android.support.v4.media.MediaBrowserCompat$SubscriptionCallback$StubApi21
androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImpl
androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback$1
android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi28
androidx.core.content.PermissionChecker:
    private void <init>()
    public static int checkSelfPermission(android.content.Context,java.lang.String)
    public static int checkCallingPermission(android.content.Context,java.lang.String,java.lang.String)
    public static final int PERMISSION_GRANTED
    public static final int PERMISSION_DENIED
    public static final int PERMISSION_DENIED_APP_OP
com.epicgames.ue4.GameActivity:
    private java.lang.String GetAccessToken()
    protected android.view.View GetMainView()
    protected android.graphics.Rect GetSafezone()
    protected android.widget.FrameLayout GetContainerFrameLayout()
    private com.google.android.play.core.assetpacks.AssetPackStateUpdateListener assetPackStateUpdateListener
    static final float SampleDecayRate
    private static final int ANDROID_CPU_FAMILY_UNKNOWN
    private static final int ANDROID_CPU_FAMILY_ARM
    private static final int ANDROID_CPU_FAMILY_X86
    private static final int ANDROID_CPU_FAMILY_MIPS
    private static final int ANDROID_CPU_FAMILY_ARM64
    private static final int ANDROID_CPU_FAMILY_X86_64
    private static final int ANDROID_CPU_FAMILY_MIPS64
    private static final int CONNECTION_TYPE_NONE
    private static final int CONNECTION_TYPE_AIRPLANEMODE
    private static final int CONNECTION_TYPE_ETHERNET
    private static final int CONNECTION_TYPE_CELL
    private static final int CONNECTION_TYPE_WIFI
    private static final int CONNECTION_TYPE_WIMAX
    private static final int CONNECTION_TYPE_BLUETOOTH
    private static final int CONFIGRULES_STATE_RUN
    private static final int CONFIGRULES_STATE_EXECTRUE
    private static final int CONFIGRULES_STATE_FINDELSE
    private static final int CONFIGRULES_STATE_EXECFALSE
    private static final int CONFIGRULES_STATE_FINDEND
    private static final int GOOGLE_SERVICES_REQUEST_RESOLVE_ERROR
    private static final java.lang.String DIALOG_ERROR
    private static final int PLAY_SERVICES_DIALOG_ID
    private static final int MemoryAdvisorPollDelayMs
    private static final int MemoryAdvisorStateDecreaseDelayMs
    private static final int ProcessMemoryInfoPollDelayMs
androidx.legacy.coreui.R$color
androidx.fragment.app.FragmentTabHost$TabInfo
com.epicgames.ue4.NativeCalls
androidx.core.app.NotificationCompatSideChannelService
androidx.core.view.DragStartHelper$OnDragStartListener
com.android.billingclient.api.PurchaseHistoryResponseListener
androidx.customview.widget.ViewDragHelper$2
com.YourCompany.CapstoneProject.R$integer
androidx.core.widget.PopupMenuCompat
androidx.lifecycle.EmptyActivityLifecycleCallbacks:
    public void onActivityCreated(android.app.Activity,android.os.Bundle)
    public void onActivityStopped(android.app.Activity)
android.support.v4.media.session.MediaSessionCompat:
    public void <init>(android.content.Context,java.lang.String)
    public void <init>(android.content.Context,java.lang.String,android.content.ComponentName,android.app.PendingIntent)
    public void <init>(android.content.Context,java.lang.String,android.os.Bundle)
    private void <init>(android.content.Context,java.lang.String,android.content.ComponentName,android.app.PendingIntent,android.os.Bundle)
    private void <init>(android.content.Context,android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl)
    public static android.support.v4.media.session.MediaSessionCompat fromMediaSession(android.content.Context,java.lang.Object)
    static android.support.v4.media.session.PlaybackStateCompat getStateWithUpdatedPosition(android.support.v4.media.session.PlaybackStateCompat,android.support.v4.media.MediaMetadataCompat)
    public void setCallback(android.support.v4.media.session.MediaSessionCompat$Callback)
    public void setCallback(android.support.v4.media.session.MediaSessionCompat$Callback,android.os.Handler)
    public void setSessionActivity(android.app.PendingIntent)
    public void setMediaButtonReceiver(android.app.PendingIntent)
    public void setFlags(int)
    public void setPlaybackToLocal(int)
    public void setPlaybackToRemote(androidx.media.VolumeProviderCompat)
    public void setActive(boolean)
    public boolean isActive()
    public void sendSessionEvent(java.lang.String,android.os.Bundle)
    public void release()
    public android.support.v4.media.session.MediaSessionCompat$Token getSessionToken()
    public android.support.v4.media.session.MediaControllerCompat getController()
    public void setPlaybackState(android.support.v4.media.session.PlaybackStateCompat)
    public void setMetadata(android.support.v4.media.MediaMetadataCompat)
    public void setQueue(java.util.List)
    public void setQueueTitle(java.lang.CharSequence)
    public void setRatingType(int)
    public void setCaptioningEnabled(boolean)
    public void setRepeatMode(int)
    public void setShuffleMode(int)
    public void setExtras(android.os.Bundle)
    public java.lang.Object getMediaSession()
    public java.lang.Object getRemoteControlClient()
    public final androidx.media.MediaSessionManager$RemoteUserInfo getCurrentControllerInfo()
    public java.lang.String getCallingPackage()
    public void addOnActiveChangeListener(android.support.v4.media.session.MediaSessionCompat$OnActiveChangeListener)
    public void removeOnActiveChangeListener(android.support.v4.media.session.MediaSessionCompat$OnActiveChangeListener)
    private final android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl mImpl
    private final android.support.v4.media.session.MediaControllerCompat mController
    private final java.util.ArrayList mActiveListeners
    static final java.lang.String TAG
    public static final int FLAG_HANDLES_MEDIA_BUTTONS
    public static final int FLAG_HANDLES_TRANSPORT_CONTROLS
    public static final int FLAG_HANDLES_QUEUE_COMMANDS
    public static final java.lang.String ACTION_FLAG_AS_INAPPROPRIATE
    public static final java.lang.String ACTION_SKIP_AD
    public static final java.lang.String ACTION_FOLLOW
    public static final java.lang.String ACTION_UNFOLLOW
    public static final java.lang.String ARGUMENT_MEDIA_ATTRIBUTE
    public static final java.lang.String ARGUMENT_MEDIA_ATTRIBUTE_VALUE
    public static final int MEDIA_ATTRIBUTE_ARTIST
    public static final int MEDIA_ATTRIBUTE_ALBUM
    public static final int MEDIA_ATTRIBUTE_PLAYLIST
    public static final java.lang.String ACTION_PLAY_FROM_URI
    public static final java.lang.String ACTION_PREPARE
    public static final java.lang.String ACTION_PREPARE_FROM_MEDIA_ID
    public static final java.lang.String ACTION_PREPARE_FROM_SEARCH
    public static final java.lang.String ACTION_PREPARE_FROM_URI
    public static final java.lang.String ACTION_SET_CAPTIONING_ENABLED
    public static final java.lang.String ACTION_SET_REPEAT_MODE
    public static final java.lang.String ACTION_SET_SHUFFLE_MODE
    public static final java.lang.String ACTION_SET_RATING
    public static final java.lang.String ACTION_ARGUMENT_MEDIA_ID
    public static final java.lang.String ACTION_ARGUMENT_QUERY
    public static final java.lang.String ACTION_ARGUMENT_URI
    public static final java.lang.String ACTION_ARGUMENT_RATING
    public static final java.lang.String ACTION_ARGUMENT_EXTRAS
    public static final java.lang.String ACTION_ARGUMENT_CAPTIONING_ENABLED
    public static final java.lang.String ACTION_ARGUMENT_REPEAT_MODE
    public static final java.lang.String ACTION_ARGUMENT_SHUFFLE_MODE
    public static final java.lang.String KEY_TOKEN
    public static final java.lang.String KEY_EXTRA_BINDER
    public static final java.lang.String KEY_SESSION_TOKEN2_BUNDLE
    private static final int MAX_BITMAP_SIZE_IN_DP
    private static final java.lang.String DATA_CALLING_PACKAGE
    private static final java.lang.String DATA_CALLING_PID
    private static final java.lang.String DATA_CALLING_UID
    private static final java.lang.String DATA_EXTRAS
    static int sMaxBitmapSize
androidx.media.VolumeProviderCompat$ControlType
androidx.drawerlayout.R$styleable
androidx.cursoradapter.widget.SimpleCursorAdapter$ViewBinder
android.support.v4.media.session.IMediaSession:
    public abstract void sendCommand(java.lang.String,android.os.Bundle,android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper)
    public abstract boolean sendMediaButton(android.view.KeyEvent)
    public abstract void unregisterCallbackListener(android.support.v4.media.session.IMediaControllerCallback)
    public abstract boolean isTransportControlEnabled()
    public abstract java.lang.String getPackageName()
    public abstract java.lang.String getTag()
    public abstract android.app.PendingIntent getLaunchPendingIntent()
    public abstract long getFlags()
    public abstract android.support.v4.media.session.ParcelableVolumeInfo getVolumeAttributes()
    public abstract void adjustVolume(int,int,java.lang.String)
    public abstract void setVolumeTo(int,int,java.lang.String)
    public abstract android.support.v4.media.MediaMetadataCompat getMetadata()
    public abstract android.support.v4.media.session.PlaybackStateCompat getPlaybackState()
    public abstract java.util.List getQueue()
    public abstract java.lang.CharSequence getQueueTitle()
    public abstract android.os.Bundle getExtras()
    public abstract int getRatingType()
    public abstract boolean isCaptioningEnabled()
    public abstract int getRepeatMode()
    public abstract boolean isShuffleModeEnabledRemoved()
    public abstract int getShuffleMode()
    public abstract void addQueueItem(android.support.v4.media.MediaDescriptionCompat)
    public abstract void addQueueItemAt(android.support.v4.media.MediaDescriptionCompat,int)
    public abstract void removeQueueItem(android.support.v4.media.MediaDescriptionCompat)
    public abstract void removeQueueItemAt(int)
    public abstract void prepare()
    public abstract void prepareFromMediaId(java.lang.String,android.os.Bundle)
    public abstract void prepareFromSearch(java.lang.String,android.os.Bundle)
    public abstract void prepareFromUri(android.net.Uri,android.os.Bundle)
    public abstract void play()
    public abstract void playFromMediaId(java.lang.String,android.os.Bundle)
    public abstract void playFromSearch(java.lang.String,android.os.Bundle)
    public abstract void playFromUri(android.net.Uri,android.os.Bundle)
    public abstract void skipToQueueItem(long)
    public abstract void pause()
    public abstract void stop()
    public abstract void next()
    public abstract void previous()
    public abstract void fastForward()
    public abstract void rewind()
    public abstract void seekTo(long)
    public abstract void rate(android.support.v4.media.RatingCompat)
    public abstract void rateWithExtras(android.support.v4.media.RatingCompat,android.os.Bundle)
    public abstract void setCaptioningEnabled(boolean)
    public abstract void setRepeatMode(int)
    public abstract void setShuffleModeEnabledRemoved(boolean)
    public abstract void setShuffleMode(int)
    public abstract void sendCustomAction(java.lang.String,android.os.Bundle)
androidx.fragment.app.FragmentController:
    public androidx.loader.app.LoaderManager getSupportLoaderManager()
    public int getActiveFragmentsCount()
    public java.util.List getActiveFragments(java.util.List)
    public void restoreAllState(android.os.Parcelable,java.util.List)
    public java.util.List retainNonConfig()
    public void dispatchReallyStop()
    public void dispatchDestroyView()
    public void doLoaderStart()
    public void doLoaderStop(boolean)
    public void doLoaderRetain()
    public void doLoaderDestroy()
    public void reportLoaderStart()
    public androidx.collection.SimpleArrayMap retainLoaderNonConfig()
    public void restoreLoaderNonConfig(androidx.collection.SimpleArrayMap)
    public void dumpLoaders(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
android.support.v4.media.session.MediaSessionCompatApi21
androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi26$1
androidx.documentfile.provider.DocumentsContractApi19
androidx.media.MediaBrowserServiceCompatApi23$MediaBrowserServiceAdaptor
androidx.media.session.MediaButtonReceiver
com.epicgames.ue4.SplashActivity:
    private static final int PERMISSION_REQUEST_CODE
    private static final int REQUEST_PERMISSION_SETTING
androidx.media.AudioAttributesImpl:
    public abstract java.lang.Object getAudioAttributes()
    public abstract int getVolumeControlStream()
    public abstract int getLegacyStreamType()
    public abstract int getRawLegacyStreamType()
    public abstract int getContentType()
    public abstract int getUsage()
    public abstract int getFlags()
    public abstract android.os.Bundle toBundle()
com.android.billingclient.api.zzah
androidx.core.util.PatternsCompat
androidx.lifecycle.extensions.R$drawable
android.support.v4.media.session.MediaSessionCompat$Callback$StubApi23
androidx.asynclayoutinflater.R$string
androidx.viewpager.widget.ViewPager$LayoutParams
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi23
androidx.core.app.ShareCompat$IntentReader
androidx.annotation.MainThread
androidx.core.app.BundleCompat$BundleCompatBaseImpl:
    private void <init>()
    public static void putBinder(android.os.Bundle,java.lang.String,android.os.IBinder)
    private static final java.lang.String TAG
    private static java.lang.reflect.Method sPutIBinderMethod
    private static boolean sPutIBinderMethodFetched
androidx.core.text.BidiFormatter$Builder
androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder:
    void <init>(androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks,boolean)
androidx.annotation.NonNull
androidx.drawerlayout.R$color
androidx.core.R$string
android.support.v4.media.MediaBrowserCompat$MediaItem:
    public static android.support.v4.media.MediaBrowserCompat$MediaItem fromMediaItem(java.lang.Object)
    public static java.util.List fromMediaItemList(java.util.List)
    public void <init>(android.support.v4.media.MediaDescriptionCompat,int)
    public int getFlags()
    public boolean isBrowsable()
    public boolean isPlayable()
    public android.support.v4.media.MediaDescriptionCompat getDescription()
    public java.lang.String getMediaId()
    public static final int FLAG_BROWSABLE
    public static final int FLAG_PLAYABLE
androidx.arch.core.executor.DefaultTaskExecutor$1:
    private static final java.lang.String THREAD_NAME_STEM
androidx.core.util.Pools$SimplePool
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl
androidx.core.text.util.LinkifyCompat
androidx.lifecycle.livedata.core.R
androidx.documentfile.provider.DocumentFile
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat
androidx.core.content.pm.PermissionInfoCompat$Protection
androidx.legacy.coreui.R$attr
com.android.billingclient.api.BillingClientImpl$zzb
androidx.core.util.Pools$Pool
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplBase
androidx.annotation.RequiresPermission
androidx.fragment.app.Fragment:
    static final int INITIALIZING
    static final int CREATED
    static final int ACTIVITY_CREATED
    static final int STARTED
    static final int RESUMED
androidx.core.widget.NestedScrollView
androidx.media.MediaSessionManager
android.support.v4.media.RatingCompat$StarStyle
androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplBase$2
android.support.v4.media.session.PlaybackStateCompat$State
androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState
androidx.localbroadcastmanager.content.LocalBroadcastManager$ReceiverRecord
com.android.billingclient.api.BillingFlowParams:
    public java.lang.String getSku()
    public java.lang.String getSkuType()
    public com.android.billingclient.api.SkuDetails getSkuDetails()
    public static final java.lang.String EXTRA_PARAM_KEY_ACCOUNT_ID
    public static final java.lang.String EXTRA_PARAM_KEY_REPLACE_SKUS_PRORATION_MODE
    public static final java.lang.String EXTRA_PARAM_KEY_VR
    public static final java.lang.String EXTRA_PARAM_KEY_OLD_SKUS
    public static final java.lang.String EXTRA_PARAM_KEY_OLD_SKU_PURCHASE_TOKEN
androidx.customview.R$attr
androidx.documentfile.provider.RawDocumentFile
androidx.swiperefreshlayout.widget.CircleImageView$OvalShadow
com.android.vending.expansion.downloader.R$style
androidx.core.content.ContentResolverCompat
androidx.lifecycle.viewmodel.R
androidx.interpolator.view.animation.LinearOutSlowInInterpolator
androidx.lifecycle.ReportFragment:
    private static final java.lang.String REPORT_FRAGMENT_TAG
androidx.lifecycle.extensions.R$styleable
androidx.core.app.CoreComponentFactory:
    private static final java.lang.String TAG
androidx.media.MediaSessionManager$RemoteUserInfoImpl
com.epicgames.ue4.GameActivity$VirtualKeyboardInput:
    public void <init>(com.epicgames.ue4.GameActivity,android.content.Context,android.util.AttributeSet,int)
    public void <init>(com.epicgames.ue4.GameActivity,android.content.Context,android.util.AttributeSet)
androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback
androidx.lifecycle.LifecycleService
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry
androidx.core.internal.view.SupportSubMenu
androidx.core.provider.SelfDestructiveThread$1
androidx.core.view.ViewParentCompat
androidx.core.widget.PopupWindowCompat
androidx.core.content.pm.PermissionInfoCompat
androidx.core.view.ViewCompat$ScrollIndicators
com.google.android.gms.common.api.ResolvingResultCallbacks:
    protected void <init>(android.app.Activity,int)
androidx.core.view.NestedScrollingParentHelper
com.google.android.play.core.tasks.n:
    private void <init>()
androidx.core.view.accessibility.AccessibilityWindowInfoCompat
com.google.android.gms.games.internal.GamesClientImpl$CaptureStreamingUrlResultImpl
androidx.core.provider.FontsContractCompat$4$6
androidx.annotation.RequiresApi
com.google.android.play.core.assetpacks.bg:
    private void <init>()
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$2
androidx.core.app.NotificationCompat$DecoratedCustomViewStyle
androidx.viewpager.R$color
com.google.androidgamesdk.ChoreographerCallback$1
androidx.legacy.v13.R$color
android.support.v4.media.MediaBrowserCompat$SubscriptionCallback
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi24
androidx.core.view.ViewConfigurationCompat
androidx.legacy.coreutils.R$drawable
androidx.annotation.DimenRes
androidx.fragment.R$layout
com.epicgames.ue4.network.NetworkConnectivityClient:
    public abstract boolean addListener(com.epicgames.ue4.network.NetworkConnectivityClient$Listener)
    public abstract boolean addListener(com.epicgames.ue4.network.NetworkConnectivityClient$Listener,boolean)
    public abstract boolean removeListener(com.epicgames.ue4.network.NetworkConnectivityClient$Listener)
    public abstract void checkConnectivity()
androidx.core.app.NotificationCompat$MessagingStyle
androidx.loader.R$drawable
android.support.v4.media.MediaBrowserCompatApi26
com.epicgames.ue4.StoreHelper:
    public abstract boolean onActivityResult(int,int,android.content.Intent)
androidx.slidingpanelayout.widget.SlidingPaneLayout$DisableLayerRunnable
androidx.core.provider.FontsContractCompat$2
androidx.legacy.v4.R$id
com.android.billingclient.api.zze:
    public final void zza(android.content.Context)
androidx.annotation.RequiresPermission$Read
androidx.versionedparcelable.CustomVersionedParcelable:
    public void onPreParceling(boolean)
    public void onPostParceling()
androidx.cursoradapter.widget.CursorAdapter
com.google.androidgamesdk.R
androidx.lifecycle.extensions.R
androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject
android.support.v4.media.MediaMetadataCompat:
    void <init>(android.os.Bundle)
    public boolean containsKey(java.lang.String)
    public java.lang.CharSequence getText(java.lang.String)
    public java.lang.String getString(java.lang.String)
    public long getLong(java.lang.String)
    public android.support.v4.media.RatingCompat getRating(java.lang.String)
    public android.graphics.Bitmap getBitmap(java.lang.String)
    public android.support.v4.media.MediaDescriptionCompat getDescription()
    public int size()
    public java.util.Set keySet()
    public android.os.Bundle getBundle()
    public java.lang.Object getMediaMetadata()
    private android.support.v4.media.MediaDescriptionCompat mDescription
    private static final java.lang.String TAG
    public static final java.lang.String METADATA_KEY_TITLE
    public static final java.lang.String METADATA_KEY_ARTIST
    public static final java.lang.String METADATA_KEY_DURATION
    public static final java.lang.String METADATA_KEY_ALBUM
    public static final java.lang.String METADATA_KEY_AUTHOR
    public static final java.lang.String METADATA_KEY_WRITER
    public static final java.lang.String METADATA_KEY_COMPOSER
    public static final java.lang.String METADATA_KEY_COMPILATION
    public static final java.lang.String METADATA_KEY_DATE
    public static final java.lang.String METADATA_KEY_YEAR
    public static final java.lang.String METADATA_KEY_GENRE
    public static final java.lang.String METADATA_KEY_TRACK_NUMBER
    public static final java.lang.String METADATA_KEY_NUM_TRACKS
    public static final java.lang.String METADATA_KEY_DISC_NUMBER
    public static final java.lang.String METADATA_KEY_ALBUM_ARTIST
    public static final java.lang.String METADATA_KEY_ART
    public static final java.lang.String METADATA_KEY_ART_URI
    public static final java.lang.String METADATA_KEY_ALBUM_ART
    public static final java.lang.String METADATA_KEY_ALBUM_ART_URI
    public static final java.lang.String METADATA_KEY_USER_RATING
    public static final java.lang.String METADATA_KEY_RATING
    public static final java.lang.String METADATA_KEY_DISPLAY_TITLE
    public static final java.lang.String METADATA_KEY_DISPLAY_SUBTITLE
    public static final java.lang.String METADATA_KEY_DISPLAY_DESCRIPTION
    public static final java.lang.String METADATA_KEY_DISPLAY_ICON
    public static final java.lang.String METADATA_KEY_DISPLAY_ICON_URI
    public static final java.lang.String METADATA_KEY_MEDIA_ID
    public static final java.lang.String METADATA_KEY_MEDIA_URI
    public static final java.lang.String METADATA_KEY_BT_FOLDER_TYPE
    public static final java.lang.String METADATA_KEY_ADVERTISEMENT
    public static final java.lang.String METADATA_KEY_DOWNLOAD_STATUS
    static final int METADATA_TYPE_LONG
    static final int METADATA_TYPE_TEXT
    static final int METADATA_TYPE_BITMAP
    static final int METADATA_TYPE_RATING
com.epicgames.ue4.WebViewControl$GLWebView:
    public void <init>(com.epicgames.ue4.WebViewControl,android.content.Context,android.util.AttributeSet)
    public void <init>(com.epicgames.ue4.WebViewControl,android.content.Context,android.util.AttributeSet,int)
com.google.android.play.core.internal.h:
    public byte[] getEncoded()
androidx.core.view.ScaleGestureDetectorCompat
androidx.core.view.ViewGroupCompat:
    private void <init>()
    public static boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent)
    public static void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean)
    public static int getLayoutMode(android.view.ViewGroup)
    public static void setLayoutMode(android.view.ViewGroup,int)
    public static void setTransitionGroup(android.view.ViewGroup,boolean)
    public static int getNestedScrollAxes(android.view.ViewGroup)
    public static final int LAYOUT_MODE_CLIP_BOUNDS
    public static final int LAYOUT_MODE_OPTICAL_BOUNDS
androidx.core.app.NotificationCompat$CarExtender
androidx.asynclayoutinflater.R$integer
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi21$6
android.support.v4.app.INotificationSideChannel
androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl$3
androidx.collection.CircularArray
androidx.legacy.v13.R$string
com.android.billingclient.api.AccountIdentifiers
androidx.loader.R$color
androidx.lifecycle.ProcessLifecycleOwner:
    static final long TIMEOUT_MS
com.google.firebase.FirebaseApiNotAvailableException
androidx.customview.view.AbsSavedState$2
androidx.lifecycle.extensions.R$attr
androidx.annotation.GuardedBy
androidx.core.R$integer
com.android.billingclient.R
com.android.billingclient.api.zzv
androidx.core.util.Pools$SynchronizedPool
android.support.v4.media.MediaBrowserCompatApi21$MediaItem
androidx.core.app.ShareCompat
androidx.core.content.SharedPreferencesCompat$EditorCompat
androidx.slidingpanelayout.widget.SlidingPaneLayout$LayoutParams
androidx.customview.widget.ViewDragHelper$1
androidx.legacy.coreui.R
androidx.annotation.TransitionRes
com.google.android.play.core.client.R
androidx.lifecycle.extensions.R$id
android.support.v4.media.MediaBrowserCompatApi21$SubscriptionCallback
androidx.annotation.PluralsRes
androidx.fragment.app.DialogFragment:
    private static final java.lang.String SAVED_DIALOG_STATE_TAG
    private static final java.lang.String SAVED_STYLE
    private static final java.lang.String SAVED_THEME
    private static final java.lang.String SAVED_CANCELABLE
    private static final java.lang.String SAVED_SHOWS_DIALOG
    private static final java.lang.String SAVED_BACK_STACK_ID
com.YourCompany.CapstoneProject.R$drawable
androidx.slidingpanelayout.R$styleable
androidx.lifecycle.extensions.R$string
com.google.android.vending.licensing.PreferenceObfuscator:
    private static final java.lang.String TAG
com.google.android.apps.internal.games.memoryadvice.TryAllocTester:
    void <init>()
androidx.media.MediaBrowserServiceCompat$ConnectionRecord
androidx.core.view.DisplayCutoutCompat
android.support.v4.media.MediaBrowserCompat$SearchCallback:
    public void <init>()
androidx.core.widget.TintableCompoundButton
com.google.android.apps.internal.games.memoryadvice.MemoryWatcher$1
androidx.asynclayoutinflater.view.AsyncLayoutInflater$InflateRequest
androidx.localbroadcastmanager.content.LocalBroadcastManager$BroadcastRecord
com.google.android.vending.licensing.ValidationException:
    public void <init>()
    private static final long serialVersionUID
androidx.viewpager.widget.PagerTitleStrip
androidx.core.hardware.fingerprint.FingerprintManagerCompat$1
androidx.core.graphics.PathUtils
androidx.legacy.v13.R$style
android.support.v4.media.session.MediaSessionCompat$QueueItem:
    public void <init>(android.support.v4.media.MediaDescriptionCompat,long)
    public android.support.v4.media.MediaDescriptionCompat getDescription()
    public long getQueueId()
    public java.lang.Object getQueueItem()
    public static final int UNKNOWN_ID
android.support.v4.media.session.MediaSessionCompat$Callback$StubApi21
com.android.billingclient.api.zzm
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat
android.support.v4.media.session.PlaybackStateCompat$CustomAction$Builder
androidx.core.widget.AutoScrollHelper$ClampedScroller
androidx.print.PrintHelper$PrintBitmapAdapter
androidx.core.view.ActionProvider
com.google.android.gms.games.internal.api.VideosImpl$CaptureStreamingUrlImpl$1
androidx.media.MediaBrowserServiceCompat$ConnectionRecord$1
androidx.versionedparcelable.R
androidx.core.app.NotificationManagerCompat:
    public static java.util.Set getEnabledListenerPackages(android.content.Context)
    private static boolean useSideChannelForNotification(android.app.Notification)
    private void pushSideChannelQueue(androidx.core.app.NotificationManagerCompat$Task)
    public void cancel(int)
    public void cancel(java.lang.String,int)
    public void cancelAll()
    public void notify(int,android.app.Notification)
    public void notify(java.lang.String,int,android.app.Notification)
    public int getImportance()
    private static final java.lang.String TAG
    private static final java.lang.String CHECK_OP_NO_THROW
    private static final java.lang.String OP_POST_NOTIFICATION
    public static final java.lang.String EXTRA_USE_SIDE_CHANNEL
    public static final java.lang.String ACTION_BIND_SIDE_CHANNEL
    static final int MAX_SIDE_CHANNEL_SDK_VERSION
    private static final int SIDE_CHANNEL_RETRY_BASE_INTERVAL_MS
    private static final int SIDE_CHANNEL_RETRY_MAX_COUNT
    private static final java.lang.String SETTING_ENABLED_NOTIFICATION_LISTENERS
    private static java.lang.String sEnabledNotificationListeners
    private static androidx.core.app.NotificationManagerCompat$SideChannelManager sSideChannelManager
    public static final int IMPORTANCE_UNSPECIFIED
    public static final int IMPORTANCE_NONE
    public static final int IMPORTANCE_MIN
    public static final int IMPORTANCE_LOW
    public static final int IMPORTANCE_DEFAULT
    public static final int IMPORTANCE_HIGH
    public static final int IMPORTANCE_MAX
androidx.core.app.NotificationManagerCompat$CancelTask
androidx.collection.ArraySet:
    public void <init>(androidx.collection.ArraySet)
    public void <init>(java.util.Collection)
    public void append(java.lang.Object)
    public void addAll(androidx.collection.ArraySet)
    public boolean removeAll(androidx.collection.ArraySet)
    private static final boolean DEBUG
    private static final java.lang.String TAG
    private static final int BASE_SIZE
    private static final int CACHE_SIZE
androidx.coordinatorlayout.R
androidx.core.os.OperationCanceledException:
    public void <init>()
    public void <init>(java.lang.String)
android.support.v4.media.ParceledListSliceAdapterApi21
com.epicgames.ue4.GameApplication:
    public static boolean isAppInForeground()
    public static boolean isAppInBackground()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$8
androidx.slidingpanelayout.widget.SlidingPaneLayout$DragHelperCallback
androidx.core.text.PrecomputedTextCompat$Params
com.epicgames.ue4.LocalNotificationReceiver:
    private static final java.lang.String NOTIFICATION_CHANNEL_ID
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$1
androidx.core.text.TextDirectionHeuristicsCompat$FirstStrong
androidx.core.app.NotificationCompat$GroupAlertBehavior
androidx.core.view.NestedScrollingParent2
android.support.v4.media.session.MediaSessionCompat$Callback
androidx.core.view.ViewCompat$1
androidx.media.app.NotificationCompat$MediaStyle
androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListenerWrapper
androidx.core.content.res.ColorStateListInflaterCompat
androidx.core.text.TextDirectionHeuristicsCompat$AnyStrong
androidx.slidingpanelayout.R$layout
androidx.core.graphics.TypefaceCompatBaseImpl$StyleExtractor
androidx.lifecycle.ViewModelStores
androidx.drawerlayout.widget.DrawerLayout$SimpleDrawerListener
androidx.core.database.DatabaseUtilsCompat
androidx.asynclayoutinflater.R$id
androidx.core.graphics.drawable.TintAwareDrawable:
    public abstract void setTint(int)
androidx.annotation.AnimRes
androidx.annotation.XmlRes
android.support.v4.media.MediaMetadataCompat$LongKey
androidx.annotation.IntDef
androidx.core.os.CancellationSignal$OnCancelListener
com.google.android.vending.expansion.downloader.impl.DownloadInfo:
    public long restartTime(long)
    public void logVerboseInfo()
    boolean mInitialized
androidx.documentfile.provider.SingleDocumentFile
android.support.v4.media.session.MediaSessionCompatApi21$QueueItem:
    public static java.lang.Object createItem(java.lang.Object,long)
    private void <init>()
androidx.core.view.KeyEventDispatcher:
    private void <init>()
android.support.v4.media.session.MediaControllerCompatApi21$PlaybackInfo:
    public static int getPlaybackType(java.lang.Object)
    public static int getVolumeControl(java.lang.Object)
    public static int getMaxVolume(java.lang.Object)
    public static int getCurrentVolume(java.lang.Object)
    private void <init>()
    private static final int FLAG_SCO
    private static final int STREAM_BLUETOOTH_SCO
    private static final int STREAM_SYSTEM_ENFORCED
androidx.core.content.res.TypedArrayUtils
com.google.android.gms.internal.zzfeo:
    public void add(int,java.lang.Object)
    public java.lang.Object remove(int)
    public java.lang.Object set(int,java.lang.Object)
androidx.core.content.pm.ShortcutManagerCompat
androidx.coordinatorlayout.R$dimen
androidx.core.widget.ScrollerCompat
androidx.core.provider.FontsContractCompat$4$7
androidx.core.view.TintableBackgroundView
androidx.media.VolumeProviderCompatApi21
androidx.media.app.NotificationCompat
androidx.media.MediaBrowserServiceCompat$ServiceCallbacks
androidx.customview.widget.FocusStrategy$SequentialComparator
android.support.v4.media.session.IMediaSession$Stub:
    public void <init>()
    public android.os.IBinder asBinder()
    public boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)
    private static final java.lang.String DESCRIPTOR
    static final int TRANSACTION_sendCommand
    static final int TRANSACTION_sendMediaButton
    static final int TRANSACTION_registerCallbackListener
    static final int TRANSACTION_unregisterCallbackListener
    static final int TRANSACTION_isTransportControlEnabled
    static final int TRANSACTION_getPackageName
    static final int TRANSACTION_getTag
    static final int TRANSACTION_getLaunchPendingIntent
    static final int TRANSACTION_getFlags
    static final int TRANSACTION_getVolumeAttributes
    static final int TRANSACTION_adjustVolume
    static final int TRANSACTION_setVolumeTo
    static final int TRANSACTION_getMetadata
    static final int TRANSACTION_getPlaybackState
    static final int TRANSACTION_getQueue
    static final int TRANSACTION_getQueueTitle
    static final int TRANSACTION_getExtras
    static final int TRANSACTION_getRatingType
    static final int TRANSACTION_isCaptioningEnabled
    static final int TRANSACTION_getRepeatMode
    static final int TRANSACTION_isShuffleModeEnabledRemoved
    static final int TRANSACTION_getShuffleMode
    static final int TRANSACTION_addQueueItem
    static final int TRANSACTION_addQueueItemAt
    static final int TRANSACTION_removeQueueItem
    static final int TRANSACTION_removeQueueItemAt
    static final int TRANSACTION_prepare
    static final int TRANSACTION_prepareFromMediaId
    static final int TRANSACTION_prepareFromSearch
    static final int TRANSACTION_prepareFromUri
    static final int TRANSACTION_play
    static final int TRANSACTION_playFromMediaId
    static final int TRANSACTION_playFromSearch
    static final int TRANSACTION_playFromUri
    static final int TRANSACTION_skipToQueueItem
    static final int TRANSACTION_pause
    static final int TRANSACTION_stop
    static final int TRANSACTION_next
    static final int TRANSACTION_previous
    static final int TRANSACTION_fastForward
    static final int TRANSACTION_rewind
    static final int TRANSACTION_seekTo
    static final int TRANSACTION_rate
    static final int TRANSACTION_rateWithExtras
    static final int TRANSACTION_setCaptioningEnabled
    static final int TRANSACTION_setRepeatMode
    static final int TRANSACTION_setShuffleModeEnabledRemoved
    static final int TRANSACTION_setShuffleMode
    static final int TRANSACTION_sendCustomAction
androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi19
androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplBase$3
androidx.viewpager.widget.PagerAdapter
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi21$7
com.google.android.gms.internal.zzfhp:
    public final int zzcyv()
    public final boolean zzcyw()
    public final com.google.android.gms.internal.zzfhe zzcyx()
    public final boolean zzcyy()
androidx.core.provider.FontsContractCompat$1
androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi23
androidx.drawerlayout.widget.DrawerLayout$ChildAccessibilityDelegate
androidx.drawerlayout.R$layout
com.google.android.gms.common.api.Response:
    protected void <init>(com.google.android.gms.common.api.Result)
androidx.core.provider.FontsContractCompat$Columns
androidx.core.graphics.drawable.WrappedDrawable
androidx.lifecycle.ClassesInfoCache:
    private static final int CALL_TYPE_NO_ARG
    private static final int CALL_TYPE_PROVIDER
    private static final int CALL_TYPE_PROVIDER_WITH_EVENT
androidx.drawerlayout.widget.DrawerLayout$LayoutParams
androidx.print.PrintHelper
androidx.documentfile.provider.TreeDocumentFile
androidx.core.view.MarginLayoutParamsCompat
androidx.media.MediaSessionManagerImplApi28
com.YourCompany.CapstoneProject.R$anim
androidx.core.text.PrecomputedTextCompat$PrecomputedTextFutureTask
androidx.localbroadcastmanager.content.LocalBroadcastManager
androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$3
androidx.annotation.IntRange
androidx.core.text.BidiFormatter$DirectionalityEstimator
com.google.android.vending.licensing.LicenseChecker$ResultListener:
    private static final int ERROR_CONTACTING_SERVER
    private static final int ERROR_INVALID_PACKAGE_NAME
    private static final int ERROR_NON_MATCHING_UID
androidx.lifecycle.ViewModelProviders$DefaultFactory
androidx.core.widget.ListViewCompat
androidx.core.R$dimen
androidx.core.view.ViewCompat$FocusRealDirection
androidx.core.app.JobIntentService$GenericWorkItem
androidx.core.provider.SelfDestructiveThread$2$1
androidx.customview.widget.FocusStrategy$CollectionAdapter
androidx.documentfile.R
androidx.coordinatorlayout.R$attr
android.UnusedStubDownloader
androidx.media.MediaBrowserServiceCompatApi23
androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring
android.support.v4.media.session.MediaSessionCompat$Callback$CallbackHandler
androidx.core.text.PrecomputedTextCompat$Params$Builder
com.google.android.vending.licensing.util.Base64:
    public static java.lang.String encodeWebSafe(byte[],boolean)
    public static byte[] decodeWebSafe(java.lang.String)
    public static byte[] decode(byte[])
    public static byte[] decodeWebSafe(byte[])
    public static byte[] decodeWebSafe(byte[],int,int)
    public static final boolean ENCODE
    public static final boolean DECODE
    private static final byte EQUALS_SIGN
    private static final byte NEW_LINE
    private static final byte WHITE_SPACE_ENC
    private static final byte EQUALS_SIGN_ENC
androidx.annotation.DrawableRes
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi21$1
com.google.android.apps.internal.games.memoryadvice.BuildInfo
androidx.media.R$string
androidx.media.MediaBrowserCompatUtils
androidx.core.content.res.FontResourcesParserCompat$FetchStrategy
androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImpl
androidx.annotation.LongDef
android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$1
androidx.lifecycle.process.R
androidx.core.app.ServiceCompat
androidx.core.content.FileProvider:
    public void <init>()
    private static int modeToMode(java.lang.String)
    private static java.lang.String[] copyOf(java.lang.String[],int)
    private static java.lang.Object[] copyOf(java.lang.Object[],int)
    public boolean onCreate()
    public void attachInfo(android.content.Context,android.content.pm.ProviderInfo)
    public android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)
    public java.lang.String getType(android.net.Uri)
    public android.net.Uri insert(android.net.Uri,android.content.ContentValues)
    public int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])
    public int delete(android.net.Uri,java.lang.String,java.lang.String[])
    public android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)
    private androidx.core.content.FileProvider$PathStrategy mStrategy
    private static final java.lang.String META_DATA_FILE_PROVIDER_PATHS
    private static final java.lang.String TAG_ROOT_PATH
    private static final java.lang.String TAG_FILES_PATH
    private static final java.lang.String TAG_CACHE_PATH
    private static final java.lang.String TAG_EXTERNAL
    private static final java.lang.String TAG_EXTERNAL_FILES
    private static final java.lang.String TAG_EXTERNAL_CACHE
    private static final java.lang.String TAG_EXTERNAL_MEDIA
    private static final java.lang.String ATTR_NAME
    private static final java.lang.String ATTR_PATH
com.epicgames.ue4.JavaBuildSettings
androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl$1
androidx.core.widget.NestedScrollView$AccessibilityDelegate
androidx.core.content.ContextCompat:
    protected void <init>()
    public static boolean startActivities(android.content.Context,android.content.Intent[])
    public static boolean startActivities(android.content.Context,android.content.Intent[],android.os.Bundle)
    public static void startActivity(android.content.Context,android.content.Intent,android.os.Bundle)
    public static java.io.File getDataDir(android.content.Context)
    public static java.io.File[] getObbDirs(android.content.Context)
    private static varargs java.io.File buildPath(java.io.File,java.lang.String[])
    public static android.graphics.drawable.Drawable getDrawable(android.content.Context,int)
    public static android.content.res.ColorStateList getColorStateList(android.content.Context,int)
    public static int getColor(android.content.Context,int)
    public static java.io.File getNoBackupFilesDir(android.content.Context)
    public static java.io.File getCodeCacheDir(android.content.Context)
    private static synchronized java.io.File createFilesDir(java.io.File)
    public static android.content.Context createDeviceProtectedStorageContext(android.content.Context)
    public static boolean isDeviceProtectedStorage(android.content.Context)
    public static void startForegroundService(android.content.Context,android.content.Intent)
    public static java.lang.Object getSystemService(android.content.Context,java.lang.Class)
    public static java.lang.String getSystemServiceName(android.content.Context,java.lang.Class)
    private static final java.lang.String TAG
    private static android.util.TypedValue sTempValue
androidx.annotation.Dimension
androidx.core.widget.EdgeEffectCompat
androidx.swiperefreshlayout.R$styleable
com.android.billingclient.api.zzb
androidx.core.app.NotificationCompat$Action$Builder
androidx.media.R$layout
com.google.android.gms.internal.zzfhi:
    public final int zzcp(java.lang.Object)
    public final void zza(java.lang.Object,com.google.android.gms.internal.zzfji)
    private final java.nio.ByteBuffer buffer
android.support.v4.media.session.MediaSessionCompat$SessionFlags
androidx.core.os.UserManagerCompat
androidx.core.util.AtomicFile
androidx.lifecycle.LiveData:
    public void observeForever(androidx.lifecycle.Observer)
    public void removeObservers(androidx.lifecycle.LifecycleOwner)
    int getVersion()
    public boolean hasObservers()
    static final int START_VERSION
androidx.annotation.CallSuper
androidx.loader.R$layout
androidx.legacy.coreui.R$dimen
androidx.customview.widget.ExploreByTouchHelper$MyNodeProvider
androidx.core.app.ShareCompat$IntentBuilder
androidx.media.VolumeProviderCompat$1
androidx.core.view.MenuItemCompat
android.support.v4.media.session.MediaSessionCompat$2
androidx.lifecycle.extensions.R$layout
androidx.asynclayoutinflater.view.AsyncLayoutInflater
androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase
androidx.core.widget.AutoSizeableTextView
androidx.versionedparcelable.VersionedParcelStream
androidx.core.view.inputmethod.EditorInfoCompat
androidx.legacy.v13.R$styleable
androidx.asynclayoutinflater.view.AsyncLayoutInflater$OnInflateFinishedListener
androidx.viewpager.widget.ViewPager$4
com.android.billingclient.api.AcknowledgePurchaseParams:
    private void <init>()
    public static com.android.billingclient.api.AcknowledgePurchaseParams$Builder newBuilder()
    synthetic void <init>(com.android.billingclient.api.zza)
    static synthetic java.lang.String zza(com.android.billingclient.api.AcknowledgePurchaseParams,java.lang.String)
    public final java.lang.String getPurchaseToken()
    private java.lang.String zza
com.android.billingclient.api.zzb$zza
com.android.billingclient.api.AcknowledgePurchaseResponseListener
android.support.v4.media.MediaDescriptionCompatApi21:
    private void <init>()
com.google.android.gms.common.images.ImageManager$zza:
    protected final synthetic int sizeOf(java.lang.Object,java.lang.Object)
    protected final synthetic void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object)
android.support.v4.media.session.MediaSessionCompat$Token:
    void <init>(java.lang.Object,android.support.v4.media.session.IMediaSession)
    public static android.support.v4.media.session.MediaSessionCompat$Token fromToken(java.lang.Object)
    public static android.support.v4.media.session.MediaSessionCompat$Token fromToken(java.lang.Object,android.support.v4.media.session.IMediaSession)
    public static android.support.v4.media.session.MediaSessionCompat$Token fromBundle(android.os.Bundle)
    public java.lang.Object getToken()
    public android.os.Bundle getSessionToken2Bundle()
    public android.os.Bundle toBundle()
androidx.media.MediaBrowserProtocol
com.epicgames.ue4.GooglePlayStoreHelper$PurchaseLaunchCallback:
    public abstract void launchForResult(android.app.PendingIntent,int)
androidx.core.provider.FontsContractCompat$FontInfo
androidx.versionedparcelable.VersionedParcelStream$InputBuffer
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnRefreshListener
androidx.swiperefreshlayout.R$integer
androidx.annotation.Px
androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl$8
androidx.legacy.app.ActionBarDrawerToggle$SlideDrawable
androidx.core.provider.FontsContractCompat$4$8
android.support.v4.media.MediaBrowserCompat$Subscription
androidx.core.app.ActivityCompat$SharedElementCallback21Impl$1:
    public void onSharedElementsReady()
androidx.core.app.NotificationManagerCompat$Task
androidx.core.os.ConfigurationCompat
androidx.legacy.app.ActionBarDrawerToggle
androidx.media.AudioAttributesImplApi21:
    void <init>(android.media.AudioAttributes)
    void <init>(android.media.AudioAttributes,int)
    static java.lang.reflect.Method getAudioAttributesToLegacyStreamTypeMethod()
    public static androidx.media.AudioAttributesImpl fromBundle(android.os.Bundle)
    public java.lang.Object getAudioAttributes()
    public int getVolumeControlStream()
    public int getLegacyStreamType()
    public int getRawLegacyStreamType()
    public int getContentType()
    public int getUsage()
    public int getFlags()
    public android.os.Bundle toBundle()
    private static final java.lang.String TAG
    static java.lang.reflect.Method sAudioAttributesToLegacyStreamType
androidx.annotation.StringRes
androidx.asynclayoutinflater.R
androidx.core.app.NotificationManagerCompat$ServiceConnectedEvent
androidx.core.view.inputmethod.InputConnectionCompat$2
androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerWrapper
androidx.core.app.JobIntentService$WorkEnqueuer
com.google.android.vending.expansion.downloader.IDownloaderService:
    public static final int FLAGS_DOWNLOAD_OVER_CELLULAR
androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi23$1
androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationResult
androidx.fragment.app.Fragment$SavedState:
    void <init>(android.os.Bundle)
com.google.android.apps.internal.games.memoryadvice.MemoryWatcher$1$1
androidx.core.app.NotificationCompat$InboxStyle
androidx.core.widget.TintableImageSourceView
androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl
androidx.core.util.Preconditions:
    public static void checkArgument(boolean)
    public static void checkArgument(boolean,java.lang.Object)
    public static java.lang.CharSequence checkStringNotEmpty(java.lang.CharSequence)
    public static java.lang.CharSequence checkStringNotEmpty(java.lang.CharSequence,java.lang.Object)
    public static java.lang.Object checkNotNull(java.lang.Object)
    public static void checkState(boolean,java.lang.String)
    public static void checkState(boolean)
    public static int checkFlagsArgument(int,int)
    public static int checkArgumentNonnegative(int,java.lang.String)
    public static int checkArgumentNonnegative(int)
    public static long checkArgumentNonnegative(long)
    public static long checkArgumentNonnegative(long,java.lang.String)
    public static int checkArgumentPositive(int,java.lang.String)
    public static float checkArgumentFinite(float,java.lang.String)
    public static float checkArgumentInRange(float,float,float,java.lang.String)
    public static int checkArgumentInRange(int,int,int,java.lang.String)
    public static long checkArgumentInRange(long,long,long,java.lang.String)
    public static java.lang.Object[] checkArrayElementsNotNull(java.lang.Object[],java.lang.String)
    public static java.util.Collection checkCollectionElementsNotNull(java.util.Collection,java.lang.String)
    public static java.util.Collection checkCollectionNotEmpty(java.util.Collection,java.lang.String)
    public static float[] checkArrayElementsInRange(float[],float,float,java.lang.String)
    private void <init>()
android.support.v4.media.RatingCompat:
    public static android.support.v4.media.RatingCompat newUnratedRating(int)
    public static android.support.v4.media.RatingCompat newHeartRating(boolean)
    public static android.support.v4.media.RatingCompat newThumbRating(boolean)
    public static android.support.v4.media.RatingCompat newStarRating(int,float)
    public static android.support.v4.media.RatingCompat newPercentageRating(float)
    public static android.support.v4.media.RatingCompat fromRating(java.lang.Object)
    public boolean isRated()
    public int getRatingStyle()
    public boolean hasHeart()
    public boolean isThumbUp()
    public float getStarRating()
    public float getPercentRating()
    public java.lang.Object getRating()
    private java.lang.Object mRatingObj
    private static final java.lang.String TAG
    public static final int RATING_NONE
    public static final int RATING_HEART
    public static final int RATING_THUMB_UP_DOWN
    public static final int RATING_3_STARS
    public static final int RATING_4_STARS
    public static final int RATING_5_STARS
    public static final int RATING_PERCENTAGE
    private static final float RATING_NOT_RATED
androidx.slidingpanelayout.R$color
androidx.core.widget.CompoundButtonCompat
androidx.lifecycle.service.R
androidx.core.text.TextUtilsCompat
androidx.core.app.NotificationCompat$Action$WearableExtender
androidx.coordinatorlayout.widget.CoordinatorLayout$OnPreDrawListener
com.YourCompany.CapstoneProject.R$styleable
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicInternal
androidx.versionedparcelable.ParcelImpl:
    public void <init>(androidx.versionedparcelable.VersionedParcelable)
    public androidx.versionedparcelable.VersionedParcelable getVersionedParcel()
androidx.core.view.animation.PathInterpolatorApi14
androidx.fragment.app.FragmentActivity:
    private static final java.lang.String TAG
    static final java.lang.String FRAGMENTS_TAG
    static final java.lang.String NEXT_CANDIDATE_REQUEST_INDEX_TAG
    static final java.lang.String ALLOCATED_REQUEST_INDICIES_TAG
    static final java.lang.String REQUEST_FRAGMENT_WHO_TAG
    static final int MAX_NUM_PENDING_FRAGMENT_ACTIVITY_RESULTS
    static final int MSG_RESUME_PENDING
androidx.annotation.FractionRes
androidx.legacy.v13.R$id
androidx.localbroadcastmanager.content.LocalBroadcastManager$1
androidx.fragment.app.ListFragment$1
androidx.core.app.NotificationManagerCompat$SideChannelManager
androidx.media.VolumeProviderCompatApi21$Delegate
androidx.core.view.MenuItemCompat$1
androidx.media.R$color
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$4
androidx.media.R$id
com.YourCompany.CapstoneProject.R$attr
com.android.vending.expansion.downloader.R$drawable
androidx.asynclayoutinflater.view.AsyncLayoutInflater$InflateThread
androidx.legacy.content.WakefulBroadcastReceiver:
    private static final java.lang.String EXTRA_WAKE_LOCK_ID
androidx.core.content.pm.PackageInfoCompat
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$2
com.google.android.play.core.internal.cd:
    public void <init>()
androidx.lifecycle.LiveData$AlwaysActiveObserver
androidx.core.app.ActivityManagerCompat
androidx.swiperefreshlayout.widget.CircularProgressDrawable$ProgressDrawableSize
com.epicgames.ue4.WebViewControl$OESTextureRenderer:
    public android.graphics.SurfaceTexture getSurfaceTexture()
    public int getExternalTextureId()
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale
com.android.billingclient.api.PriceChangeConfirmationListener
androidx.legacy.v13.R$integer
androidx.coordinatorlayout.widget.CoordinatorLayout$1
androidx.core.app.NotificationCompat$CarExtender$UnreadConversation
com.google.android.vending.expansion.downloader.impl.DownloaderService$GenerateSaveFileError:
    private static final long serialVersionUID
androidx.customview.R$id
com.android.billingclient.api.zzt
androidx.core.view.ViewCompat$FocusRelativeDirection
androidx.media.R
com.google.android.vending.expansion.downloader.impl.CustomIntentService:
    public android.os.IBinder onBind(android.content.Intent)
    public void setIntentRedelivery(boolean)
    private static final java.lang.String LOG_TAG
    private static final int WHAT_MESSAGE
androidx.versionedparcelable.VersionedParcel$1
com.YourCompany.CapstoneProject.DownloaderActivity:
    private static final java.lang.String LOG_TAG
    private static final float SMOOTHING_FACTOR
androidx.core.app.ActivityOptionsCompat$ActivityOptionsCompatImpl
androidx.versionedparcelable.NonParcelField
androidx.core.view.GravityCompat
androidx.legacy.coreutils.R$style
androidx.legacy.app.FragmentCompat:
    public void <init>()
    public static void setPermissionCompatDelegate(androidx.legacy.app.FragmentCompat$PermissionCompatDelegate)
    public static androidx.legacy.app.FragmentCompat$PermissionCompatDelegate getPermissionCompatDelegate()
    public static void setMenuVisibility(android.app.Fragment,boolean)
    public static void setUserVisibleHint(android.app.Fragment,boolean)
    public static boolean shouldShowRequestPermissionRationale(android.app.Fragment,java.lang.String)
android.support.v4.media.MediaMetadataCompat$RatingKey
androidx.lifecycle.ServiceLifecycleDispatcher
androidx.swiperefreshlayout.R$dimen
android.support.v4.media.MediaBrowserCompat$ConnectionCallback
androidx.core.app.NotificationManagerCompat$NotifyTask
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi26
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior
androidx.core.view.NestedScrollingParent
androidx.fragment.app.ListFragment
androidx.coordinatorlayout.R$style
androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl$1
androidx.core.provider.FontsContractCompat$4$1
androidx.viewpager.R$dimen
androidx.coordinatorlayout.widget.CoordinatorLayout$AttachedBehavior
androidx.loader.content.ModernAsyncTask:
    public static void setDefaultExecutor(java.util.concurrent.Executor)
    public static void execute(java.lang.Runnable)
    public final androidx.loader.content.ModernAsyncTask$Status getStatus()
    public final java.lang.Object get()
    public final java.lang.Object get(long,java.util.concurrent.TimeUnit)
    public final varargs androidx.loader.content.ModernAsyncTask execute(java.lang.Object[])
    protected final varargs void publishProgress(java.lang.Object[])
    private static final java.lang.String LOG_TAG
    private static final int CORE_POOL_SIZE
    private static final int MAXIMUM_POOL_SIZE
    private static final int KEEP_ALIVE
    private static final int MESSAGE_POST_RESULT
    private static final int MESSAGE_POST_PROGRESS
androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListener
androidx.swiperefreshlayout.widget.CircleImageView
androidx.swiperefreshlayout.R$attr
android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl
androidx.core.content.res.GradientColorInflaterCompat$ColorStops
androidx.fragment.R$integer
androidx.legacy.coreui.R$style
androidx.legacy.app.FragmentTabHost$SavedState
androidx.core.graphics.drawable.DrawableCompat:
    public static void jumpToCurrentState(android.graphics.drawable.Drawable)
    public static void setAutoMirrored(android.graphics.drawable.Drawable,boolean)
    public static boolean isAutoMirrored(android.graphics.drawable.Drawable)
    public static void setHotspot(android.graphics.drawable.Drawable,float,float)
    public static void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int)
    public static void setTint(android.graphics.drawable.Drawable,int)
    public static int getAlpha(android.graphics.drawable.Drawable)
    public static void applyTheme(android.graphics.drawable.Drawable,android.content.res.Resources$Theme)
    public static boolean canApplyTheme(android.graphics.drawable.Drawable)
    public static android.graphics.ColorFilter getColorFilter(android.graphics.drawable.Drawable)
    public static void clearColorFilter(android.graphics.drawable.Drawable)
    public static void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
    public static android.graphics.drawable.Drawable unwrap(android.graphics.drawable.Drawable)
    public static boolean setLayoutDirection(android.graphics.drawable.Drawable,int)
    public static int getLayoutDirection(android.graphics.drawable.Drawable)
    private void <init>()
    private static final java.lang.String TAG
    private static java.lang.reflect.Method sSetLayoutDirectionMethod
    private static boolean sSetLayoutDirectionMethodFetched
    private static java.lang.reflect.Method sGetLayoutDirectionMethod
    private static boolean sGetLayoutDirectionMethodFetched
androidx.legacy.coreutils.R$styleable
androidx.viewpager.R$id
androidx.media.AudioAttributesCompat$AttributeUsage
androidx.viewpager.widget.ViewPager$MyAccessibilityDelegate
androidx.legacy.app.FragmentPagerAdapter
androidx.viewpager.R$attr
android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$Command
androidx.legacy.coreutils.R$layout
androidx.lifecycle.Transformations$1
android.support.v4.media.MediaBrowserCompat$SubscriptionCallback$StubApi26
androidx.core.util.TimeUtils:
    public static void formatDuration(long,java.lang.StringBuilder)
    private void <init>()
    public static final int HUNDRED_DAY_FIELD_LEN
    private static final int SECONDS_PER_MINUTE
    private static final int SECONDS_PER_HOUR
    private static final int SECONDS_PER_DAY
androidx.legacy.coreutils.R$string
androidx.legacy.v4.R$attr
androidx.viewpager.R$style
androidx.core.widget.AutoScrollHelper
android.support.v4.media.session.MediaSessionCompatApi21$CallbackProxy
androidx.media.MediaSessionManagerImplBase$RemoteUserInfoImplBase
androidx.media.MediaBrowserServiceCompat$Result
androidx.swiperefreshlayout.R$style
android.support.v4.media.session.ParcelableVolumeInfo:
    public void <init>(int,int,int,int,int)
android.support.v4.media.MediaBrowserCompat
com.epicgames.ue4.MediaPlayer14$BitmapRenderer:
    private void glWarn(java.lang.String)
    public android.graphics.SurfaceTexture getSurfaceTexture()
    private static final int FLOAT_SIZE_BYTES
    private static final int TRIANGLE_VERTICES_DATA_STRIDE_BYTES
    private static final int TRIANGLE_VERTICES_DATA_POS_OFFSET
    private static final int TRIANGLE_VERTICES_DATA_UV_OFFSET
com.google.android.gms.internal.zzffu:
    protected static com.google.android.gms.internal.zzfgc zzcxn()
    protected static com.google.android.gms.internal.zzffu zza(com.google.android.gms.internal.zzffu,com.google.android.gms.internal.zzfes)
    private static com.google.android.gms.internal.zzffu zza(com.google.android.gms.internal.zzffu,com.google.android.gms.internal.zzfes,com.google.android.gms.internal.zzffm)
    private static com.google.android.gms.internal.zzffu zza(com.google.android.gms.internal.zzffu,byte[],com.google.android.gms.internal.zzffm)
    protected static com.google.android.gms.internal.zzffu zza(com.google.android.gms.internal.zzffu,byte[])
androidx.core.widget.TextViewCompat$AutoSizeTextType
com.epicgames.ue4.GooglePlayLicensing$1
androidx.annotation.NavigationRes
com.epicgames.ue4.Logger:
    public static void prependSecondaryTag(boolean)
    public void <init>(java.lang.String)
android.support.v4.media.session.MediaSessionCompat$Callback$StubApi24
androidx.core.view.accessibility.AccessibilityNodeInfoCompat
androidx.core.view.WindowInsetsCompat
com.android.billingclient.api.BillingClientImpl$zza:
    final void zza()
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm
com.google.android.vending.expansion.downloader.impl.DownloadThread$StopRequest:
    private static final long serialVersionUID
android.support.v4.media.session.MediaControllerCompat
androidx.legacy.coreutils.R$dimen
androidx.print.PrintHelper$OnPrintFinishCallback
androidx.core.text.BidiFormatter
androidx.core.view.inputmethod.InputConnectionCompat$1
androidx.loader.content.AsyncTaskLoader:
    static final java.lang.String TAG
    static final boolean DEBUG
android.support.v4.media.session.PlaybackStateCompatApi22:
    public static java.lang.Object newInstance(int,long,long,float,long,java.lang.CharSequence,long,java.util.List,long,android.os.Bundle)
    private void <init>()
androidx.fragment.app.FragmentTabHost$DummyTabFactory
android.support.v4.media.MediaBrowserCompatApi21$ConnectionCallback
androidx.fragment.R$id
android.support.v4.media.session.MediaSessionCompatApi23$CallbackProxy
android.support.v4.media.session.MediaSessionCompat$3
android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi18$1
androidx.lifecycle.ComputableLiveData$1
androidx.drawerlayout.widget.DrawerLayout$1
androidx.core.app.NotificationCompat$Builder:
    private android.graphics.Bitmap reduceLargeIconSize(android.graphics.Bitmap)
    public androidx.core.app.NotificationCompat$Builder setShowWhen(boolean)
    public androidx.core.app.NotificationCompat$Builder setUsesChronometer(boolean)
    public androidx.core.app.NotificationCompat$Builder setSmallIcon(int,int)
    public androidx.core.app.NotificationCompat$Builder setSubText(java.lang.CharSequence)
    public androidx.core.app.NotificationCompat$Builder setRemoteInputHistory(java.lang.CharSequence[])
    public androidx.core.app.NotificationCompat$Builder setNumber(int)
    public androidx.core.app.NotificationCompat$Builder setContent(android.widget.RemoteViews)
    public androidx.core.app.NotificationCompat$Builder setDeleteIntent(android.app.PendingIntent)
    public androidx.core.app.NotificationCompat$Builder setFullScreenIntent(android.app.PendingIntent,boolean)
    public androidx.core.app.NotificationCompat$Builder setTicker(java.lang.CharSequence,android.widget.RemoteViews)
    public androidx.core.app.NotificationCompat$Builder setLargeIcon(android.graphics.Bitmap)
    public androidx.core.app.NotificationCompat$Builder setSound(android.net.Uri)
    public androidx.core.app.NotificationCompat$Builder setSound(android.net.Uri,int)
    public androidx.core.app.NotificationCompat$Builder setVibrate(long[])
    public androidx.core.app.NotificationCompat$Builder setLights(int,int,int)
    public androidx.core.app.NotificationCompat$Builder setColorized(boolean)
    public androidx.core.app.NotificationCompat$Builder setOnlyAlertOnce(boolean)
    public androidx.core.app.NotificationCompat$Builder setDefaults(int)
    public androidx.core.app.NotificationCompat$Builder addPerson(java.lang.String)
    public androidx.core.app.NotificationCompat$Builder setGroup(java.lang.String)
    public androidx.core.app.NotificationCompat$Builder setGroupSummary(boolean)
    public androidx.core.app.NotificationCompat$Builder setSortKey(java.lang.String)
    public androidx.core.app.NotificationCompat$Builder addExtras(android.os.Bundle)
    public androidx.core.app.NotificationCompat$Builder setExtras(android.os.Bundle)
    public androidx.core.app.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent)
    public androidx.core.app.NotificationCompat$Builder addAction(androidx.core.app.NotificationCompat$Action)
    public androidx.core.app.NotificationCompat$Builder addInvisibleAction(int,java.lang.CharSequence,android.app.PendingIntent)
    public androidx.core.app.NotificationCompat$Builder addInvisibleAction(androidx.core.app.NotificationCompat$Action)
    public androidx.core.app.NotificationCompat$Builder setVisibility(int)
    public androidx.core.app.NotificationCompat$Builder setPublicVersion(android.app.Notification)
    public androidx.core.app.NotificationCompat$Builder setCustomContentView(android.widget.RemoteViews)
    public androidx.core.app.NotificationCompat$Builder setCustomBigContentView(android.widget.RemoteViews)
    public androidx.core.app.NotificationCompat$Builder setCustomHeadsUpContentView(android.widget.RemoteViews)
    public androidx.core.app.NotificationCompat$Builder setTimeoutAfter(long)
    public androidx.core.app.NotificationCompat$Builder setShortcutId(java.lang.String)
    public androidx.core.app.NotificationCompat$Builder setBadgeIconType(int)
    public androidx.core.app.NotificationCompat$Builder setGroupAlertBehavior(int)
    public androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)
    public android.app.Notification getNotification()
    public android.widget.RemoteViews getContentView()
    public android.widget.RemoteViews getBigContentView()
    public android.widget.RemoteViews getHeadsUpContentView()
    public long getWhenIfShowing()
    public int getPriority()
    public int getColor()
    private static final int MAX_CHARSEQUENCE_LENGTH
androidx.core.graphics.TypefaceCompatApi21Impl
androidx.swiperefreshlayout.widget.CircularProgressDrawable
androidx.core.view.ViewCompat:
    private static android.graphics.Rect getEmptyTempRect()
    public static boolean canScrollHorizontally(android.view.View,int)
    public static boolean canScrollVertically(android.view.View,int)
    public static int getOverScrollMode(android.view.View)
    public static void setOverScrollMode(android.view.View,int)
    public static void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
    public static void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
    public static void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
    public static void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)
    public static varargs void setAutofillHints(android.view.View,java.lang.String[])
    public static int getImportantForAutofill(android.view.View)
    public static void setImportantForAutofill(android.view.View,int)
    public static boolean isImportantForAutofill(android.view.View)
    public static boolean hasAccessibilityDelegate(android.view.View)
    public static boolean hasTransientState(android.view.View)
    public static void setHasTransientState(android.view.View,boolean)
    public static void postInvalidateOnAnimation(android.view.View)
    public static void postInvalidateOnAnimation(android.view.View,int,int,int,int)
    public static void postOnAnimation(android.view.View,java.lang.Runnable)
    public static void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long)
    public static int getImportantForAccessibility(android.view.View)
    public static void setImportantForAccessibility(android.view.View,int)
    public static boolean isImportantForAccessibility(android.view.View)
    public static boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)
    public static androidx.core.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View)
    public static float getAlpha(android.view.View)
    public static void setLayerType(android.view.View,int,android.graphics.Paint)
    public static int getLayerType(android.view.View)
    public static int getLabelFor(android.view.View)
    public static void setLabelFor(android.view.View,int)
    public static void setLayerPaint(android.view.View,android.graphics.Paint)
    public static int getLayoutDirection(android.view.View)
    public static void setLayoutDirection(android.view.View,int)
    public static android.view.ViewParent getParentForAccessibility(android.view.View)
    public static android.view.View requireViewById(android.view.View,int)
    public static boolean isOpaque(android.view.View)
    public static int resolveSizeAndState(int,int,int)
    public static int getMeasuredWidthAndState(android.view.View)
    public static int getMeasuredHeightAndState(android.view.View)
    public static int getMeasuredState(android.view.View)
    public static int combineMeasuredStates(int,int)
    public static int getAccessibilityLiveRegion(android.view.View)
    public static void setAccessibilityLiveRegion(android.view.View,int)
    public static int getPaddingStart(android.view.View)
    public static int getPaddingEnd(android.view.View)
    public static void setPaddingRelative(android.view.View,int,int,int,int)
    private static void bindTempDetach()
    public static void dispatchStartTemporaryDetach(android.view.View)
    public static void dispatchFinishTemporaryDetach(android.view.View)
    public static float getTranslationX(android.view.View)
    public static float getTranslationY(android.view.View)
    public static android.graphics.Matrix getMatrix(android.view.View)
    public static int getMinimumWidth(android.view.View)
    public static int getMinimumHeight(android.view.View)
    public static androidx.core.view.ViewPropertyAnimatorCompat animate(android.view.View)
    public static void setTranslationX(android.view.View,float)
    public static void setTranslationY(android.view.View,float)
    public static void setAlpha(android.view.View,float)
    public static void setX(android.view.View,float)
    public static void setY(android.view.View,float)
    public static void setRotation(android.view.View,float)
    public static void setRotationX(android.view.View,float)
    public static void setRotationY(android.view.View,float)
    public static void setScaleX(android.view.View,float)
    public static void setScaleY(android.view.View,float)
    public static float getPivotX(android.view.View)
    public static void setPivotX(android.view.View,float)
    public static float getPivotY(android.view.View)
    public static void setPivotY(android.view.View,float)
    public static float getRotation(android.view.View)
    public static float getRotationX(android.view.View)
    public static float getRotationY(android.view.View)
    public static float getScaleX(android.view.View)
    public static float getScaleY(android.view.View)
    public static float getX(android.view.View)
    public static float getY(android.view.View)
    public static void setElevation(android.view.View,float)
    public static float getElevation(android.view.View)
    public static void setTranslationZ(android.view.View,float)
    public static float getTranslationZ(android.view.View)
    public static int getWindowSystemUiVisibility(android.view.View)
    public static void requestApplyInsets(android.view.View)
    public static void setChildrenDrawingOrderEnabled(android.view.ViewGroup,boolean)
    public static boolean getFitsSystemWindows(android.view.View)
    public static void setFitsSystemWindows(android.view.View,boolean)
    public static void jumpDrawablesToCurrentState(android.view.View)
    public static void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)
    public static androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat)
    public static androidx.core.view.WindowInsetsCompat dispatchApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat)
    public static void setSaveFromParentEnabled(android.view.View,boolean)
    public static void setActivated(android.view.View,boolean)
    public static boolean isPaddingRelative(android.view.View)
    public static void setBackground(android.view.View,android.graphics.drawable.Drawable)
    public static android.content.res.ColorStateList getBackgroundTintList(android.view.View)
    public static void setBackgroundTintList(android.view.View,android.content.res.ColorStateList)
    public static android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View)
    public static void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode)
    public static void setNestedScrollingEnabled(android.view.View,boolean)
    public static boolean isNestedScrollingEnabled(android.view.View)
    public static boolean startNestedScroll(android.view.View,int)
    public static void stopNestedScroll(android.view.View)
    public static boolean hasNestedScrollingParent(android.view.View)
    public static boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[])
    public static boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[])
    public static boolean startNestedScroll(android.view.View,int,int)
    public static void stopNestedScroll(android.view.View,int)
    public static boolean hasNestedScrollingParent(android.view.View,int)
    public static boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[],int)
    public static boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[],int)
    public static boolean dispatchNestedFling(android.view.View,float,float,boolean)
    public static boolean dispatchNestedPreFling(android.view.View,float,float)
    public static boolean isInLayout(android.view.View)
    public static boolean isLaidOut(android.view.View)
    public static boolean isLayoutDirectionResolved(android.view.View)
    public static float getZ(android.view.View)
    public static void setZ(android.view.View,float)
    public static void offsetTopAndBottom(android.view.View,int)
    private static void compatOffsetTopAndBottom(android.view.View,int)
    public static void offsetLeftAndRight(android.view.View,int)
    private static void compatOffsetLeftAndRight(android.view.View,int)
    private static void tickleInvalidationFlag(android.view.View)
    public static void setClipBounds(android.view.View,android.graphics.Rect)
    public static android.graphics.Rect getClipBounds(android.view.View)
    public static boolean hasOnClickListeners(android.view.View)
    public static void setScrollIndicators(android.view.View,int)
    public static void setScrollIndicators(android.view.View,int,int)
    public static int getScrollIndicators(android.view.View)
    public static void setPointerIcon(android.view.View,androidx.core.view.PointerIconCompat)
    public static android.view.Display getDisplay(android.view.View)
    public static void setTooltipText(android.view.View,java.lang.CharSequence)
    public static boolean startDragAndDrop(android.view.View,android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)
    public static void cancelDragAndDrop(android.view.View)
    public static void updateDragShadow(android.view.View,android.view.View$DragShadowBuilder)
    public static int getNextClusterForwardId(android.view.View)
    public static void setNextClusterForwardId(android.view.View,int)
    public static boolean isKeyboardNavigationCluster(android.view.View)
    public static void setKeyboardNavigationCluster(android.view.View,boolean)
    public static boolean isFocusedByDefault(android.view.View)
    public static void setFocusedByDefault(android.view.View,boolean)
    public static android.view.View keyboardNavigationClusterSearch(android.view.View,android.view.View,int)
    public static void addKeyboardNavigationClusters(android.view.View,java.util.Collection,int)
    public static boolean restoreDefaultFocus(android.view.View)
    public static boolean hasExplicitFocusable(android.view.View)
    public static int generateViewId()
    public static void addOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat)
    public static void removeOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat)
    protected void <init>()
    private static final java.lang.String TAG
    public static final int OVER_SCROLL_ALWAYS
    public static final int OVER_SCROLL_IF_CONTENT_SCROLLS
    public static final int OVER_SCROLL_NEVER
    public static final int IMPORTANT_FOR_ACCESSIBILITY_AUTO
    public static final int IMPORTANT_FOR_ACCESSIBILITY_YES
    public static final int IMPORTANT_FOR_ACCESSIBILITY_NO
    public static final int IMPORTANT_FOR_ACCESSIBILITY_NO_HIDE_DESCENDANTS
    public static final int ACCESSIBILITY_LIVE_REGION_NONE
    public static final int ACCESSIBILITY_LIVE_REGION_POLITE
    public static final int ACCESSIBILITY_LIVE_REGION_ASSERTIVE
    public static final int LAYER_TYPE_NONE
    public static final int LAYER_TYPE_SOFTWARE
    public static final int LAYER_TYPE_HARDWARE
    public static final int LAYOUT_DIRECTION_LTR
    public static final int LAYOUT_DIRECTION_RTL
    public static final int LAYOUT_DIRECTION_INHERIT
    public static final int LAYOUT_DIRECTION_LOCALE
    public static final int MEASURED_SIZE_MASK
    public static final int MEASURED_STATE_MASK
    public static final int MEASURED_HEIGHT_STATE_SHIFT
    public static final int MEASURED_STATE_TOO_SMALL
    public static final int SCROLL_AXIS_NONE
    public static final int SCROLL_AXIS_HORIZONTAL
    public static final int SCROLL_AXIS_VERTICAL
    public static final int TYPE_TOUCH
    public static final int TYPE_NON_TOUCH
    public static final int SCROLL_INDICATOR_TOP
    public static final int SCROLL_INDICATOR_BOTTOM
    public static final int SCROLL_INDICATOR_LEFT
    public static final int SCROLL_INDICATOR_RIGHT
    public static final int SCROLL_INDICATOR_START
    public static final int SCROLL_INDICATOR_END
    private static java.lang.reflect.Field sMinWidthField
    private static boolean sMinWidthFieldFetched
    private static java.lang.reflect.Field sMinHeightField
    private static boolean sMinHeightFieldFetched
    private static java.lang.reflect.Method sDispatchStartTemporaryDetach
    private static java.lang.reflect.Method sDispatchFinishTemporaryDetach
    private static boolean sTempDetachBound
    private static java.lang.reflect.Method sChildrenDrawingOrderMethod
    private static java.lang.reflect.Field sAccessibilityDelegateField
    private static java.lang.ThreadLocal sThreadLocalRect
androidx.fragment.app.FragmentManagerImpl$FragmentTag:
    private void <init>()
    public static final int Fragment_id
    public static final int Fragment_name
    public static final int Fragment_tag
androidx.core.os.CancellationSignal
androidx.swiperefreshlayout.R$drawable
androidx.core.app.NotificationCompat$BadgeIconType
android.support.v4.media.MediaBrowserCompatApi21
android.support.v4.os.IResultReceiver$Stub:
    private static final java.lang.String DESCRIPTOR
    static final int TRANSACTION_send
android.support.v4.app.INotificationSideChannel$Stub$Proxy
androidx.lifecycle.MediatorLiveData
android.support.v4.media.session.IMediaControllerCallback$Stub$Proxy
androidx.coordinatorlayout.widget.CoordinatorLayout$DefaultBehavior
androidx.legacy.app.FragmentCompat$FragmentCompatImpl:
    public abstract void setUserVisibleHint(android.app.Fragment,boolean)
    public abstract boolean shouldShowRequestPermissionRationale(android.app.Fragment,java.lang.String)
androidx.loader.R$string
androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl$9
androidx.core.os.LocaleListCompat
androidx.core.view.ViewCompat$UnhandledKeyEventManager:
    static void registerListeningView(android.view.View)
    static void unregisterListeningView(android.view.View)
androidx.core.provider.FontsContractCompat$4$9
androidx.annotation.AnyRes
android.support.v4.app.INotificationSideChannel$Stub
androidx.core.app.JobIntentService$JobServiceEngineImpl
androidx.media.MediaBrowserServiceCompat$1
androidx.core.app.BundleCompat:
    private void <init>()
    public static void putBinder(android.os.Bundle,java.lang.String,android.os.IBinder)
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$3
androidx.loader.content.CursorLoader
androidx.core.app.NavUtils
androidx.core.graphics.ColorUtils
androidx.coordinatorlayout.widget.DirectedAcyclicGraph
androidx.media.R$attr
androidx.core.content.res.ResourcesCompat
androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi21
androidx.arch.core.executor.TaskExecutor:
    public void executeOnMainThread(java.lang.Runnable)
androidx.core.net.DatagramSocketWrapper$DatagramSocketImplWrapper
androidx.core.graphics.PathSegment
com.google.androidgamesdk.ChoreographerCallback
com.YourCompany.CapstoneProject.OBBData:
    public void <init>()
    public static final java.lang.String AppType
androidx.core.graphics.drawable.RoundedBitmapDrawable
androidx.media.MediaBrowserServiceCompatApi21
androidx.coordinatorlayout.widget.CoordinatorLayout$DispatchChangeEvent
androidx.core.database.sqlite.SQLiteCursorCompat
androidx.fragment.app.ListFragment$2
android.support.v4.media.MediaBrowserCompat$CustomActionCallback:
    public void <init>()
androidx.legacy.v4.R$dimen
com.google.androidgamesdk.SwappyDisplayManager$1
androidx.core.view.ViewPropertyAnimatorListener
androidx.core.net.TrafficStatsCompat
com.YourCompany.CapstoneProject.BuildConfig
androidx.core.app.NotificationCompat$Action$Extender
android.support.v4.media.MediaMetadataCompat$BitmapKey
android.support.v4.media.session.MediaControllerCompat$Callback:
    public void onSessionReady()
    public void onCaptioningEnabledChanged(boolean)
    public void onRepeatModeChanged(int)
    public void onShuffleModeChanged(int)
    public android.support.v4.media.session.IMediaControllerCallback getIControllerCallback()
    void setHandler(android.os.Handler)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnChildScrollUpCallback
androidx.annotation.ColorLong
android.support.v4.media.session.MediaControllerCompat$TransportControlsApi24
androidx.legacy.v13.R$drawable
androidx.core.view.AccessibilityDelegateCompat
com.epicgames.ue4.GameActivity$20:
    final synthetic com.epicgames.ue4.GameActivity this$0
com.google.android.gms.internal.zzcxt:
    private final java.lang.String zzgdp
    private static boolean DEBUG
com.google.android.gms.internal.zzcvh$zzg:
    private final int zzkab
com.google.android.vending.expansion.downloader.impl.DownloadsDB:
    public static final java.lang.String LOG_TAG
com.google.android.gms.internal.zzbhb:
    private final int mPriority
com.epicgames.ue4.MediaPlayer14$1:
    final synthetic com.epicgames.ue4.MediaPlayer14 this$0
com.google.android.gms.internal.zzcub
com.google.android.gms.internal.zzcus:
    private static long zzjxo
com.epicgames.ue4.GameActivity$LaunchNotification:
    final synthetic com.epicgames.ue4.GameActivity this$0
com.google.android.gms.internal.zzffe:
    private com.google.android.gms.internal.zzfff zzpfy
com.google.android.gms.internal.zzfjq:
    private static java.nio.charset.Charset ISO_8859_1
com.google.android.gms.common.util.zzy:
    private static final java.lang.reflect.Method zzgez
com.google.android.gms.internal.zzbea:
    private int zzfjg
    private final com.google.android.gms.internal.zzbec zzfjk
    private java.util.ArrayList zzfjl
    private java.util.ArrayList zzfjm
    private java.util.ArrayList zzfjn
    private java.util.ArrayList zzfjo
    private java.util.ArrayList zzfjp
com.google.android.play.core.internal.au:
    private final com.google.android.play.core.splitcompat.a a
androidx.core.app.NotificationCompatJellybean:
    private static final java.lang.Object sActionsLock
com.google.android.gms.internal.zzffm:
    private final java.util.Map zzpgh
    private static volatile boolean zzpge
    private static final java.lang.Class zzpgf
com.google.android.gms.internal.zzctx:
    private static com.google.android.gms.internal.zzctx zzjwk
    private static final com.google.android.gms.internal.zzcuc zzjwt
    private static final com.google.android.gms.internal.zzcuc zzjwu
    private static final com.google.android.gms.internal.zzcuc zzjwv
    private static final com.google.android.gms.internal.zzcuc zzjww
com.google.android.gms.internal.zzbgg:
    private final com.google.android.gms.common.internal.zzal zzgbx
com.google.android.gms.internal.zzbdy:
    private java.lang.String zzfjd
    private java.lang.String zzfje
    private int zzfjg
    private static final java.lang.String[] zzfiy
    private static final byte[][] zzfiz
com.google.android.gms.internal.zzfjj:
    private final int zzpfw
    private int zzpfo
androidx.arch.core.executor.ArchTaskExecutor:
    public void executeOnDiskIO(java.lang.Runnable)
    private static final java.util.concurrent.Executor sMainThreadExecutor
    private static final java.util.concurrent.Executor sIOThreadExecutor
com.google.android.gms.games.leaderboard.ScoreSubmissionData:
    private static final java.lang.String[] zzhwc
com.google.android.gms.common.api.GoogleApiClient$Builder:
    private boolean zzfnc
com.google.android.gms.internal.zzcuc
com.google.android.gms.internal.zzblg:
    private final int zzgms
com.google.android.gms.common.api.zze:
    private static final java.util.Map zzfng
    private static final java.lang.Object sLock
com.google.android.gms.internal.zzfff
com.google.android.gms.auth.api.Auth:
    private static com.google.android.gms.common.api.Api zzedb
    private static com.google.android.gms.internal.zzaur zzedc
com.google.android.gms.auth.api.credentials.PasswordSpecification:
    private final int[] zzega
    private final java.util.Random zzbfo
com.google.android.gms.internal.zzfek:
    private static boolean zzpfb
com.epicgames.ue4.GooglePlayLicensing:
    private com.epicgames.ue4.GameActivity gameActivity
    private com.epicgames.ue4.Logger Log
    private static final byte[] SALT
android.support.v4.os.ResultReceiver:
    final boolean mLocal
com.google.android.play.core.internal.av:
    private final com.google.android.play.core.internal.ax e
androidx.fragment.app.FragmentHostCallback:
    private final int mWindowAnimations
com.google.android.gms.internal.zzcty
com.google.android.gms.dynamite.DynamiteModule:
    private static com.google.android.gms.dynamite.DynamiteModule$zzd zzgwx
com.epicgames.ue4.WebViewControl$BitmapRenderer:
    private int mLastFramePosition
    private final java.lang.String mBlitVextexShader
    private final java.lang.String mBlitFragmentShaderBGRA
    private final java.lang.String mBlitFragmentShaderRGBA
com.google.android.gms.internal.zzbfe
com.google.android.gms.internal.zzffg$zzb:
    private final int offset
com.android.vending.expansion.zipfile.ZipResourceFile:
    java.nio.ByteBuffer mLEByteBuffer
com.google.android.gms.internal.play_billing.zze:
    private static com.google.android.gms.internal.play_billing.zzg zza
androidx.arch.core.executor.ArchTaskExecutor$1
com.epicgames.ue4.VideoDecoder:
    private boolean SupportsImageExternal
    private android.media.MediaCodec mAudioCodec
    private boolean isEOS
    private volatile boolean NewFrameAvailable
com.epicgames.ue4.GameActivity$22:
    final synthetic com.epicgames.ue4.GameActivity this$0
com.google.android.gms.internal.zzai:
    private com.google.android.gms.internal.zzaq zzbp
com.google.android.gms.nearby.messages.internal.zzby:
    private static com.google.android.gms.common.api.Api$zzf zzebf
androidx.fragment.app.BackStackRecord:
    boolean mAllowAddToBackStack
com.android.vending.expansion.zipfile.ZipResourceFile$ZipEntryRO:
    public long mWhenModified
com.google.android.gms.internal.zzbpc:
    private com.google.android.gms.drive.events.OnChangeListener zzgpo
androidx.fragment.app.FragmentTransitionCompat21$2:
    final synthetic androidx.fragment.app.FragmentTransitionCompat21 this$0
androidx.fragment.app.FragmentTransitionImpl$3:
    final synthetic androidx.fragment.app.FragmentTransitionImpl this$0
com.google.android.gms.auth.api.Auth$AuthCredentialsOptions:
    private final java.lang.String zzede
    private static com.google.android.gms.auth.api.Auth$AuthCredentialsOptions zzedd
com.google.android.gms.internal.zzfhm:
    private static final synthetic int[] zzpja
com.google.android.gms.internal.zzar:
    private final javax.net.ssl.SSLSocketFactory zzci
com.google.android.gms.games.internal.zzf:
    private static final com.google.android.gms.internal.zzbey zzhsb
com.google.android.gms.internal.zzctz
com.google.android.gms.common.images.zza:
    private int zzfxg
    private boolean zzfxi
    private boolean zzfxk
com.google.android.gms.common.data.DataHolder$zza:
    private boolean zzfwm
    private java.lang.String zzfwn
androidx.media.AudioAttributesCompat:
    private static final int[] SDK_USAGES
com.google.android.gms.internal.zzbff:
    private int mFrom
com.google.android.gms.common.internal.zzs:
    private int zzfmq
com.google.android.gms.internal.zzcsw:
    private static final java.lang.String zzjsx
com.google.android.gms.auth.api.credentials.CredentialPickerConfig:
    private final boolean zzefe
com.epicgames.ue4.GameActivity$21:
    final synthetic com.epicgames.ue4.GameActivity this$0
com.google.android.gms.common.stats.zze:
    private static boolean zzgcy
com.epicgames.ue4.GooglePlayStoreHelper:
    private java.lang.String productKey
    private final int UndefinedFailureResponse
    final int purchaseIntentIdentifier
com.google.android.vending.expansion.downloader.impl.DownloaderService:
    private boolean mIsAtLeast4G
    int mFileCount
com.epicgames.ue4.VideoDecoder$BitmapRenderer:
    private final java.lang.String mBlitVextexShader
    private final java.lang.String mBlitFragmentShaderBGRA
    private final java.lang.String mBlitFragmentShaderRGBA
com.google.android.gms.internal.zzffq:
    private static final com.google.android.gms.internal.zzffq zzpgm
android.support.v4.media.session.MediaControllerCompat$PlaybackInfo:
    private final int mPlaybackType
    private final int mAudioStream
    private final int mVolumeControl
    private final int mMaxVolume
    private final int mCurrentVolume
androidx.fragment.app.FragmentManagerImpl:
    static final android.view.animation.Interpolator ACCELERATE_QUINT
    static final android.view.animation.Interpolator ACCELERATE_CUBIC
com.google.android.gms.common.internal.DowngradeableSafeParcel:
    private boolean zzfzq
    private static java.lang.ClassLoader zzfzo
    private static java.lang.Integer zzfzp
com.google.android.gms.games.internal.player.zze:
    private java.lang.String zzhvj
androidx.fragment.app.FragmentTransitionCompat21$4:
    final synthetic androidx.fragment.app.FragmentTransitionCompat21 this$0
com.epicgames.ue4.MediaPlayer14$VideoTrackInfo:
    final synthetic com.epicgames.ue4.MediaPlayer14 this$0
com.google.android.gms.internal.zzfiq:
    private static final long zzpkz
    private static final long zzpla
    private static final long zzplb
    private static final long zzplc
    private static final long zzpld
    private static final long zzple
    private static final long zzplf
    private static final long zzplg
    private static final long zzplh
    private static final long zzpli
    private static final long zzplj
    private static final long zzplk
    private static final long zzpll
com.google.android.gms.internal.zzfgk:
    private com.google.android.gms.internal.zzfes zzphy
    private static final com.google.android.gms.internal.zzffm zzpfe
com.google.android.gms.common.zzp:
    private static boolean zzflj
    private static boolean zzflk
com.google.android.gms.internal.zzcue:
    private static com.google.android.gms.common.api.Api API
    private static com.google.android.gms.internal.zzcug zzjwx
com.google.android.gms.internal.zzbgj:
    private final java.util.ArrayList zzgcb
com.google.android.gms.drive.query.internal.zzx:
    private static com.google.android.gms.drive.query.internal.zzx zzgvw
com.epicgames.ue4.GameActivity$InputDeviceInfo:
    final synthetic com.epicgames.ue4.GameActivity this$0
com.android.billingclient.api.BillingClientImpl:
    private android.content.Context zze
com.epicgames.ue4.SplashActivity$1$1:
    final synthetic com.epicgames.ue4.SplashActivity$1 this$1
com.google.android.play.core.internal.at:
    private final com.google.android.play.core.splitcompat.p e
com.google.android.gms.internal.zzfem:
    private boolean zzpfc
    private int zzpfd
com.google.android.gms.drive.DriveSpace:
    private static java.lang.String zzgjs
    private static final java.util.regex.Pattern zzgjt
com.google.android.gms.common.internal.zzd:
    private static java.lang.String[] zzfyy
com.android.billingclient.api.BillingClient:
    public abstract boolean isReady()
com.google.android.vending.expansion.downloader.Helpers:
    private static final java.util.regex.Pattern CONTENT_DISPOSITION_PATTERN
com.google.android.gms.common.internal.zzal:
    private static int zzgaw
    private static final java.lang.String zzgax
com.google.android.gms.internal.zzbqz:
    private static final java.util.List zzgqs
com.epicgames.ue4.GameActivity:
    java.lang.String EngineBranch
    java.lang.String ProjectVersion
    private boolean IsForDistribution
com.google.android.gms.plus.Plus$PlusOptions:
    private java.lang.String zzjxr
com.google.android.gms.common.util.zzm:
    private static final java.util.regex.Pattern zzgeo
    private static final java.util.regex.Pattern zzgep
    private static final java.util.regex.Pattern zzgeq
com.google.android.gms.dynamite.zzc
com.epicgames.ue4.VideoDecoder$FrameUpdateInfo:
    final synthetic com.epicgames.ue4.VideoDecoder this$0
com.epicgames.ue4.MediaPlayer14$FrameUpdateInfo:
    final synthetic com.epicgames.ue4.MediaPlayer14 this$0
com.google.android.play.core.splitinstall.ab:
    private final com.google.android.play.core.splitinstall.x a
androidx.arch.core.executor.DefaultTaskExecutor$1:
    final synthetic androidx.arch.core.executor.DefaultTaskExecutor this$0
com.google.android.gms.auth.api.accounttransfer.AccountTransfer:
    private static com.google.android.gms.common.api.Api zzedm
    private static com.google.android.gms.auth.api.accounttransfer.zzb zzedn
    private static com.google.android.gms.auth.api.accounttransfer.zzr zzedo
com.google.android.gms.internal.zzbgt:
    private final java.util.ArrayList zzgcp
com.google.android.gms.internal.zzffu$zzg:
    private static final synthetic int[] zzphp
com.google.android.gms.internal.zzffz:
    private static java.nio.charset.Charset ISO_8859_1
    private static java.nio.ByteBuffer zzphu
    private static com.google.android.gms.internal.zzffb zzphv
com.google.android.gms.internal.zzr:
    private boolean zzan
    private boolean zzap
androidx.fragment.app.FragmentTransitionImpl$1:
    final synthetic androidx.fragment.app.FragmentTransitionImpl this$0
com.google.android.gms.internal.zzfen:
    private static final com.google.android.gms.internal.zzffm zzpfe
com.google.android.gms.common.util.zzu:
    private static final java.util.regex.Pattern zzgev
com.google.android.play.core.splitinstall.testing.FakeSplitInstallManager:
    private final com.google.android.play.core.splitinstall.testing.a p
com.google.android.gms.internal.play_billing.zzh:
    private static final java.lang.ClassLoader zza
com.google.android.gms.games.internal.zzh
com.google.android.gms.drive.query.SortableField:
    private static com.google.android.gms.drive.metadata.SortableMetadataField zzgux
com.google.android.gms.nearby.messages.Message:
    private final long zzjri
com.google.android.gms.internal.zzfge:
    private com.google.android.gms.internal.zzfhe zzphw
com.epicgames.ue4.AudioDecoder:
    private boolean bIsInitialized
    private byte[] mAacSpecificConfig
com.google.android.gms.internal.zzbmf:
    private final boolean zzgnf
android.support.v4.media.MediaMetadataCompat:
    private static final java.lang.String[] PREFERRED_DESCRIPTION_ORDER
    private static final java.lang.String[] PREFERRED_BITMAP_ORDER
    private static final java.lang.String[] PREFERRED_URI_ORDER
com.epicgames.ue4.GameActivity$23:
    final synthetic com.epicgames.ue4.GameActivity this$0
com.google.android.gms.internal.zzad:
    private com.google.android.gms.internal.zzp zzbk
    private long zzae
com.google.android.gms.plus.PlusShare$Builder:
    private final android.content.Context mContext
com.google.android.gms.internal.zzp:
    private long zzae
com.epicgames.ue4.MediaPlayer14$CaptionTrackInfo:
    final synthetic com.epicgames.ue4.MediaPlayer14 this$0
androidx.arch.core.executor.ArchTaskExecutor$2
com.google.android.gms.internal.zzffb:
    abstract long zzcwj()
    private boolean zzpfp
    private static volatile boolean zzpfq
com.google.android.gms.internal.zzdvm:
    private static java.lang.Throwable[] zzmai
com.google.android.gms.dynamite.DynamiteModule$zzb:
    private final int zzgxf
com.google.android.gms.internal.zzfjn:
    private com.google.android.gms.internal.zzffu zzpgu
com.google.android.gms.nearby.Nearby:
    private static com.google.android.gms.nearby.messages.zzd zzjmt
    private static com.google.android.gms.common.api.Api zzjmu
    private static com.google.android.gms.internal.zzcmh zzjmv
com.google.android.gms.auth.GoogleAuthUtil:
    private static java.lang.String KEY_CALLER_UID
    private static java.lang.String KEY_ANDROID_PACKAGE_NAME
com.google.android.gms.nearby.messages.Strategy$Builder:
    private int zzjsj
androidx.core.app.NotificationManagerCompat
com.epicgames.ue4.GameApplication:
    private static boolean isForeground
com.google.android.gms.common.api.internal.zza:
    private int zzeie
com.google.android.gms.drive.Drive:
    private static com.google.android.gms.common.api.Api zzgjb
    private static com.google.android.gms.drive.zzk zzgjd
    private static com.google.android.gms.drive.zzm zzgje
androidx.fragment.app.FragmentTransitionCompat21$1:
    final synthetic androidx.fragment.app.FragmentTransitionCompat21 this$0
com.google.android.gms.common.internal.zzam:
    private final boolean zzgbb
androidx.legacy.app.FragmentCompat$FragmentCompatBaseImpl$1:
    final synthetic androidx.legacy.app.FragmentCompat$FragmentCompatBaseImpl this$0
com.google.android.gms.internal.zzdvl:
    private static int zzmah
com.google.android.vending.expansion.downloader.impl.DownloadInfo:
    public int mFuzz
com.google.android.gms.drive.metadata.zza:
    private final java.util.Set zzgry
    private final int zzgrz
androidx.fragment.app.FragmentTransitionImpl$2:
    final synthetic androidx.fragment.app.FragmentTransitionImpl this$0
com.google.android.gms.internal.zzfjv:
    private static int zzpnl
    private static int zzpnm
    private static int zzpnn
    private static int zzpno
com.google.android.gms.internal.zzaxc:
    private static java.lang.String zzelb
com.google.android.gms.games.internal.zzg:
    private static com.google.android.gms.games.internal.zzp zzhsc
com.google.android.gms.internal.zzfhp
com.google.android.gms.auth.api.signin.GoogleSignInOptions:
    private java.util.Map zzehq
com.google.android.gms.common.api.internal.zzbz:
    private final boolean zzfua
com.google.android.gms.common.api.Api:
    private final com.google.android.gms.common.api.Api$zzh zzflt
    private final com.google.android.gms.common.api.Api$zzi zzflv
com.google.android.gms.internal.zzbey:
    private java.lang.String zzbhb
    private java.lang.Object zzfvq
    private static final java.lang.Object sLock
    private static com.google.android.gms.internal.zzbfe zzfvo
    private static int zzfvp
    private static java.lang.String READ_PERMISSION
com.google.android.vending.licensing.util.Base64:
    private void <init>()
    private static final byte[] WEBSAFE_ALPHABET
    private static final byte[] WEBSAFE_DECODABET
    static final synthetic boolean $assertionsDisabled
com.google.android.gms.internal.zzcaw:
    private final java.util.Collection zzbhe
    private final java.util.Collection zzbhf
com.google.android.vending.licensing.LicenseChecker$ResultListener$1:
    final synthetic com.google.android.vending.licensing.LicenseChecker val$this$0
com.epicgames.ue4.GameActivity$VibrateRunnable:
    final synthetic com.epicgames.ue4.GameActivity this$0
androidx.core.content.FileProvider:
    private static final java.lang.String[] COLUMNS
com.epicgames.ue4.GameActivity$31:
    final synthetic com.epicgames.ue4.GameActivity this$0
androidx.core.content.ContextCompat:
    private static final java.lang.Object sLock
com.google.android.gms.common.util.zzo:
    private static final java.util.regex.Pattern zzger
com.google.android.gms.internal.zzbmo:
    private com.google.android.gms.common.api.GoogleApiClient$ConnectionCallbacks zzgnl
com.google.android.gms.games.Games:
    private static com.google.android.gms.common.api.Api zzhkk
    private static com.google.android.gms.internal.zzcbd zzhkl
    private static com.google.android.gms.games.multiplayer.Multiplayer zzhkm
    private static com.google.android.gms.internal.zzcbl zzhkn
com.android.billingclient.api.zzak:
    static final com.android.billingclient.api.BillingResult zzb
    static final com.android.billingclient.api.BillingResult zzj
    static final com.android.billingclient.api.BillingResult zzk
    private static final com.android.billingclient.api.BillingResult zzt
    static final com.android.billingclient.api.BillingResult zzm
    private static final com.android.billingclient.api.BillingResult zzu
com.epicgames.ue4.GooglePlayStoreHelper$GooglePlayProductDescription:
    final synthetic com.epicgames.ue4.GooglePlayStoreHelper this$0
com.google.android.gms.internal.zzbqb
com.google.android.gms.internal.zzfjo:
    private boolean zzpnf
com.google.android.gms.plus.Plus:
    private static com.google.android.gms.plus.zzb zzjxp
    private static com.google.android.gms.plus.zza zzjxq
androidx.core.app.ActivityCompat$SharedElementCallback21Impl$1:
    final synthetic android.app.SharedElementCallback$OnSharedElementsReadyListener val$listener
    final synthetic androidx.core.app.ActivityCompat$SharedElementCallback21Impl this$0
com.google.android.gms.internal.zzcbi:
    private final int zzcd
    private static final java.lang.String[] zzhwc
com.google.android.gms.auth.api.credentials.CredentialRequest$Builder:
    private boolean zzefo
com.epicgames.ue4.GameActivity$39:
    final synthetic com.epicgames.ue4.GameActivity this$0
com.google.android.gms.games.video.VideoConfiguration$Builder:
    private java.lang.String zzibh
    private java.lang.String zzibi
    private java.lang.String zzibj
    private java.lang.String zzibk
com.google.android.gms.common.stats.zzb:
    private static int LOG_LEVEL_OFF
    private static int zzgde
    private static int zzgdf
    private static int zzgdg
    private static int zzgdh
    private static int zzgdi
    private static int zzgdj
    private static int zzgdk
com.google.android.gms.common.util.zzf:
    private static final java.lang.String[] zzgea
    private static android.os.DropBoxManager zzgeb
    private static boolean zzgec
    private static int zzged
    private static int zzgee
com.google.android.play.core.internal.cd
com.epicgames.ue4.WebViewControl$OESTextureRenderer:
    private float[] mTransformMatrix
com.google.android.gms.internal.zzffd:
    private final boolean immutable
com.google.android.gms.common.api.Status:
    private static com.google.android.gms.common.api.Status zzfno
androidx.fragment.app.FragmentManagerImpl$4:
    final synthetic androidx.fragment.app.FragmentManagerImpl this$0
com.epicgames.ue4.MediaPlayer14$AudioTrackInfo:
    final synthetic com.epicgames.ue4.MediaPlayer14 this$0
com.google.android.gms.internal.zzcxs:
    private static java.lang.String TAG
com.google.android.gms.drive.query.SortOrder$Builder:
    private boolean zzguw
androidx.arch.core.executor.DefaultTaskExecutor:
    public void executeOnDiskIO(java.lang.Runnable)
com.google.android.gms.nearby.connection.zzd:
    private final int quality
androidx.loader.content.ModernAsyncTask:
    private static volatile java.util.concurrent.Executor sDefaultExecutor
com.google.android.gms.internal.zzfhj:
    private final com.google.android.gms.internal.zzfhe zzpiu
com.epicgames.ue4.WebViewControl$FrameUpdateInfo:
    final synthetic com.epicgames.ue4.WebViewControl this$0
com.google.android.gms.internal.zzfim:
    private final java.util.List zzpko
com.google.android.gms.games.internal.GamesClientImpl:
    private boolean zzhpq
com.epicgames.ue4.MediaPlayer14$BitmapRenderer:
    private int mLastFramePosition
    private final java.lang.String mBlitVextexShader
    private final java.lang.String mBlitFragmentShaderBGRA
    private final java.lang.String mBlitFragmentShaderRGBA
com.google.android.gms.internal.zzffu:
    private static java.util.Map zzpgt
com.epicgames.ue4.Logger:
    private static boolean bAllowExceptionLogging
com.google.android.gms.internal.zzcua
com.google.android.vending.expansion.downloader.impl.DownloadThread$StopRequest:
    final synthetic com.google.android.vending.expansion.downloader.impl.DownloadThread this$0
androidx.core.view.ViewCompat:
    private static final java.util.concurrent.atomic.AtomicInteger sNextGeneratedId
    private static java.util.WeakHashMap sViewPropertyAnimatorMap
    private static boolean sAccessibilityDelegateCheckFailed
com.google.android.apps.internal.games.memoryadvice.Utils:
    public void <init>()
com.google.android.gms.common.stats.zza:
    private final java.util.List zzgcz
    private final java.util.List zzgda
    private final java.util.List zzgdb
    private final java.util.List zzgdc
    private static boolean zzgcy
com.google.android.gms.internal.zzcxa:
    private static com.google.android.gms.common.api.Scope zzehi
    private static com.google.android.gms.common.api.Scope zzehj
    private static com.google.android.gms.common.api.Api zzgjb
com.epicgames.ue4.GameActivity$VirtualKeyboardInput$EmojiExcludeFilter:
    final synthetic com.epicgames.ue4.GameActivity$VirtualKeyboardInput this$1
androidx.arch.core.executor.TaskExecutor:
    public abstract void executeOnDiskIO(java.lang.Runnable)
com.google.android.gms.internal.zzfgo:
    private static final java.lang.Class zzpid
com.google.android.gms.internal.zzcui:
    private java.lang.Object zzjxe
    private static boolean zzcek
