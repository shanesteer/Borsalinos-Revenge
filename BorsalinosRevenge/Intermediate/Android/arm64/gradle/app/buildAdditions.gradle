apply from: 'aar-imports.gradle'
apply from: 'projects.gradle'
apply from: 'abi.gradle'
android {
	bundle {
		abi { enableSplit = true }
		language { enableSplit = true }
		density { enableSplit = true }
	}
	signingConfigs {
		release {
			storeFile file('C:/Gitlab_Project/GitHub/CE301_steer_shane_e/BorsalinosRevenge/Intermediate/Android/arm64/ExampleKey.keystore')
			storePassword '123password'
			keyAlias 'MyKey'
			keyPassword '123password'
		}
	}
	buildTypes {
		release {
			signingConfig signingConfigs.release
			minifyEnabled true
			proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
		}
		debug {
			debuggable true
		}
	}
}
					dependencies {
					implementation 'com.android.billingclient:billing:3.0.0'
					}
dependencies {
	implementation('com.android.support:support-v13:27.1.0')
}
android {
	buildTypes {
		release {
			proguardFile "proguard/common.pgcfg"
			proguardFile "proguard/app_update.pgcfg"
			proguardFile "proguard/asset_delivery.pgcfg"
			proguardFile "proguard/app_update.pgcfg"
			proguardFile "proguard/review.pgcfg"
			proguardFile "proguard/split_install.pgcfg"
		}
	}
}

// for GooglePAD
dependencies {
	implementation('com.google.android.play:core:1.10.0')
}

// add the assetpacks
def assetPackSet = []
def assetpacksDir = new File("assetpacks/install-time")
if (assetpacksDir.exists()) assetpacksDir.eachDir {
	assetPackSet.add(':assetpacks:install-time:' + it.name)
}
assetpacksDir = new File("assetpacks/fast-follow")
if (assetpacksDir.exists()) assetpacksDir.eachDir {
	assetPackSet.add(':assetpacks:fast-follow:' + it.name)
}
assetpacksDir = new File("assetpacks/on-demand")
if (assetpacksDir.exists()) assetpacksDir.eachDir {
	assetPackSet.add(':assetpacks:on-demand:' + it.name)
}
println 'AssetPacks: ' + assetPackSet

android {
   assetPacks = assetPackSet
}

			dependencies.implementation(name: 'aar', ext: 'aar')
			dependencies.implementation(name: 'memoryadvice-release', ext: 'aar')
